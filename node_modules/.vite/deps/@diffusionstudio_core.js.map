{
  "version": 3,
  "sources": ["../../@diffusionstudio/core/dist/core.es.js"],
  "sourcesContent": ["\n/*!\n * @diffusionstudio/core v3.8.3\n * (c) 2025 Diffusion Studio Inc.\n * \n * Licensed under the Diffusion Studio Non-Commercial License.\n * You may NOT use this software for any commercial purposes.\n * \n * For commercial licensing, visit:\n * https://diffusion.studio\n */\n\nlet na = class Hs {\n  data;\n  format;\n  numberOfChannels;\n  numberOfFrames;\n  sampleRate;\n  timestamp;\n  duration;\n  constructor(e) {\n    this.data = e.data, this.format = e.format, this.numberOfChannels = e.numberOfChannels, this.numberOfFrames = e.numberOfFrames, this.sampleRate = e.sampleRate, this.timestamp = e.timestamp || 0, this.duration = this.numberOfFrames / this.sampleRate * 1e6;\n  }\n  copyTo(e, i) {\n    if (!i?.format || i.format !== \"s16\")\n      throw new Error(\"Only s16 format is supported for copyTo\");\n    for (let s = 0; s < this.numberOfFrames; s++)\n      for (let r = 0; r < this.numberOfChannels; r++) {\n        const a = r * this.numberOfFrames + s, n = s * this.numberOfChannels + r, o = Math.max(-1, Math.min(1, this.data[a]));\n        e[n] = Math.round(o * 32767);\n      }\n  }\n  clone() {\n    return new Hs({\n      data: new Float32Array(this.data),\n      format: this.format,\n      numberOfChannels: this.numberOfChannels,\n      numberOfFrames: this.numberOfFrames,\n      sampleRate: this.sampleRate,\n      timestamp: this.timestamp\n    });\n  }\n  close() {\n    this.data = new Float32Array(0);\n  }\n};\n\"AudioData\" in window || Object.assign(window, { AudioData: na });\nconst Yl = 0.2, Rt = 30, oa = 1;\nclass lt extends Error {\n  message;\n  code;\n  constructor({ message: e = \"\", code: i = \"\" }, ...s) {\n    super(e, ...s), console.error(e), this.code = i, this.message = e;\n  }\n}\nclass Ee extends lt {\n}\nclass ee extends lt {\n}\nclass at extends lt {\n}\nclass Jl extends lt {\n}\nclass Bt extends lt {\n}\nfunction ca(t, e = Rt) {\n  if (e < 1) throw new ee({\n    code: \"invalidArgument\",\n    message: \"FPS must be greater or equal to 1\"\n  });\n  return Math.round(t * e);\n}\nfunction Zl(t, e = Rt) {\n  if (e < 1) throw new ee({\n    code: \"invalidArgument\",\n    message: \"FPS must be greater or equal to 1\"\n  });\n  return Math.round(t / e * 1e3) / 1e3;\n}\nfunction jt(t, e = Rt) {\n  if (e < 1) throw new ee({\n    code: \"invalidArgument\",\n    message: \"FPS must be greater or equal to 1\"\n  });\n  return Math.round(t / e * 1e3);\n}\nfunction ed(t) {\n  return Math.floor(t * 255).toString(16).padStart(2, \"0\").toUpperCase();\n}\nfunction td(t, e) {\n  return t.reduce(\n    (i, s) => {\n      const r = s[e];\n      return i[r] || (i[r] = []), i[r].push(s), i;\n    },\n    // @ts-ignore\n    {}\n  );\n}\nfunction Ct(t, e) {\n  return [t.slice(0, e), t.slice(e)].filter((i) => i.length > 0);\n}\nfunction vt(t, e) {\n  return e ? Math.floor(Math.random() * (e - t + 1) + t) : t;\n}\nasync function id(t) {\n  t <= 0 || await new Promise((e) => setTimeout(e, t));\n}\nfunction B(t, e) {\n  if (!t)\n    throw new Error(e || `Assertion failed: ${String(t)}`);\n}\nfunction sd(t, e = 300) {\n  let i;\n  return (...s) => {\n    clearTimeout(i), i = setTimeout(() => {\n      t.apply(t, s);\n    }, e);\n  };\n}\nfunction la(t, e, i) {\n  i < 0 && (i = 0);\n  const s = t[e];\n  t.splice(e, 1), t.splice(i, 0, s);\n}\nfunction rd() {\n  return typeof crypto < \"u\" ? crypto.randomUUID().split(\"-\").at(0) : Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nfunction ad(t) {\n  return t.charAt(0).toUpperCase() + t.slice(1);\n}\nfunction da(t, e, i) {\n  return Math.max(e, Math.min(i, t));\n}\nfunction nd(t) {\n  throw new Error(\"This should not run!\");\n}\nfunction ha(t) {\n  if (t.numberOfChannels === 1)\n    return t.getChannelData(0);\n  const e = [];\n  for (let n = 0; n < t.numberOfChannels; n++)\n    e.push(t.getChannelData(n));\n  const i = Math.max(...e.map((n) => n.length)), s = new Float32Array(i * t.numberOfChannels);\n  let r = 0, a = 0;\n  for (; a < i; )\n    e.forEach((n) => {\n      s[r++] = n[a] !== void 0 ? n[a] : 0;\n    }), a++;\n  return s;\n}\nfunction wt(t, e, i) {\n  for (let s = 0; s < i.length; s++)\n    t.setUint8(e + s, i.charCodeAt(s));\n}\nfunction ua(t, e, i) {\n  for (let s = 0; s < e.length; s++, i += 2) {\n    const r = Math.max(-1, Math.min(1, e[s]));\n    t.setInt16(i, r < 0 ? r * 32768 : r * 32767, !0);\n  }\n  return t;\n}\nfunction fa(t, e, i) {\n  const a = e * 2, n = 8, o = 36, c = t.length * 2, l = o + c, d = new ArrayBuffer(n + l), h = new DataView(d);\n  return wt(h, 0, \"RIFF\"), h.setUint32(4, l, !0), wt(h, 8, \"WAVE\"), wt(h, 12, \"fmt \"), h.setUint32(16, 16, !0), h.setUint16(20, 1, !0), h.setUint16(22, e, !0), h.setUint32(24, i, !0), h.setUint32(28, i * a, !0), h.setUint16(32, a, !0), h.setUint16(34, 16, !0), wt(h, 36, \"data\"), h.setUint32(40, c, !0), ua(h, t, n + o);\n}\nfunction od(t, e = \"audio/wav\") {\n  const i = ha(t), s = fa(i, t.numberOfChannels, t.sampleRate);\n  return new Blob([s], { type: e });\n}\nfunction cd(t) {\n  const e = new Float32Array(t.length * t.numberOfChannels);\n  let i = 0;\n  for (let s = 0; s < t.numberOfChannels; s++) {\n    const r = t.getChannelData(s);\n    e.set(r, i), i += r.length;\n  }\n  return e;\n}\nfunction ld(t) {\n  const e = t.numberOfChannels, i = t.length, s = new Int16Array(i * e);\n  for (let r = 0; r < i; r++)\n    for (let a = 0; a < e; a++) {\n      let n = t.getChannelData(a)[r] * 32767;\n      n > 32767 && (n = 32767), n < -32767 && (n = -32767), s[r * e + a] = n;\n    }\n  return s;\n}\nasync function dd(t, e = 22050, i = Math.sqrt(2)) {\n  const s = await t.arrayBuffer(), r = new OfflineAudioContext({ sampleRate: e, length: 1 }), a = await r.decodeAudioData(s), n = r.createBuffer(1, a.length, e);\n  if (a.numberOfChannels >= 2) {\n    const o = a.getChannelData(0), c = a.getChannelData(1), l = n.getChannelData(0);\n    for (let d = 0; d < a.length; ++d)\n      l[d] = i * (o[d] + c[d]) / 2;\n    return n;\n  }\n  return a;\n}\nfunction hd(t, e = 44100, i = 2) {\n  if (t.sampleRate == e && t.numberOfChannels == i)\n    return t;\n  const s = Math.floor(t.duration * e), a = new OfflineAudioContext(i, 1, e).createBuffer(i, s, e);\n  for (let n = 0; n < t.numberOfChannels; n++) {\n    const o = t.getChannelData(n), c = a.getChannelData(n), l = t.sampleRate / e;\n    for (let d = 0; d < c.length; d++) {\n      const h = d * l, u = Math.floor(h), m = Math.ceil(h);\n      if (m >= o.length)\n        c[d] = o[u];\n      else {\n        const p = h - u;\n        c[d] = o[u] * (1 - p) + o[m] * p;\n      }\n    }\n  }\n  return a;\n}\nasync function $s(t, e) {\n  const i = document.createElement(\"a\");\n  if (document.head.appendChild(i), i.target = \"_blank\", e ? i.download = e : t instanceof File ? i.download = t.name : t instanceof Blob ? i.download = \"untitled\" : typeof t == \"string\" && (i.download = t.split(\"/\").pop() ?? \"untitled\"), typeof t == \"string\" && t.startsWith(\"data:image/svg+xml;base64,\")) {\n    const s = t.split(\",\")[1], r = atob(s), a = new Array(r.length);\n    for (let c = 0; c < r.length; c++)\n      a[c] = r.charCodeAt(c);\n    const n = new Uint8Array(a), o = new Blob([n], { type: \"image/svg+xml\" });\n    i.href = URL.createObjectURL(o), i.download = e?.split(\".\")[0] + \".svg\";\n  } else typeof t == \"string\" ? i.href = t : t instanceof Blob ? i.href = URL.createObjectURL(t) : i.href = URL.createObjectURL(await t.getFile());\n  i.click(), i.remove();\n}\nasync function ud(t, e = !0) {\n  return new Promise((i) => {\n    const s = document.createElement(\"input\");\n    s.type = \"file\", s.accept = t, s.multiple = e, s.onchange = (r) => {\n      const a = Array.from(r.target?.files ?? []);\n      i(a);\n    }, s.click();\n  });\n}\nfunction O(t) {\n  if (!t) return new E(0);\n  if (typeof t == \"number\")\n    return E.fromFrames(t);\n  if (t instanceof E)\n    return t;\n  const e = t.split(\":\");\n  if (e.length === 3) {\n    const [i, s, r] = e.map(Number);\n    if (isNaN(i) || isNaN(s) || isNaN(r))\n      throw new Error(`Invalid time format: ${t}`);\n    return new E(0, r, s, i);\n  }\n  if (e.length === 2) {\n    const [i, s] = e.map(Number);\n    if (isNaN(i) || isNaN(s))\n      throw new Error(`Invalid time format: ${t}`);\n    return new E(0, s, i);\n  }\n  if (typeof t == \"string\") {\n    const i = parseFloat(t);\n    if (isNaN(i))\n      throw new Error(`Invalid time format: ${t}`);\n    if (t.endsWith(\"ms\"))\n      return new E(i);\n    if (t.endsWith(\"s\"))\n      return new E(0, i);\n    if (t.endsWith(\"f\"))\n      return E.fromFrames(i);\n    if (t.endsWith(\"min\"))\n      return new E(0, 0, i);\n    throw new Error(`Invalid time format: ${t}`);\n  }\n  throw new Error(`Invalid time format: ${t}`);\n}\nasync function fd(t) {\n  const { fps: e, height: i, width: s, bitrate: r } = t, a = [\n    \"avc1.640033\",\n    \"avc1.4d4033\",\n    \"avc1.424033\",\n    \"avc1.640029\",\n    \"avc1.4d4029\",\n    \"avc1.424029\"\n  ], n = [\"prefer-hardware\", \"prefer-software\"], o = [];\n  for (const l of a)\n    for (const d of n)\n      o.push({\n        codec: l,\n        hardwareAcceleration: d,\n        width: s,\n        height: i,\n        bitrate: r,\n        framerate: e\n      });\n  const c = [];\n  if (\"VideoEncoder\" in window) {\n    for (const l of o) {\n      const d = await VideoEncoder.isConfigSupported(l);\n      d.supported && c.push(d.config ?? l);\n    }\n    return c.sort(ma)[0].codec;\n  }\n}\nfunction ma(t, e) {\n  const i = t.hardwareAcceleration ?? \"\", s = e.hardwareAcceleration ?? \"\";\n  return i < s ? -1 : i > s ? 1 : 0;\n}\nconst Ot = {\n  fromJSON: (t) => new Date(t)\n};\nclass E {\n  /**\n   * Time state in **milliseconds**\n   */\n  time;\n  /**\n   * Create a new timestamp from various time units\n   * @param millis - Time in milliseconds\n   * @param seconds - Time in seconds\n   * @param minutes - Time in minutes\n   * @param hours - Time in hours\n   */\n  constructor(e = 0, i = 0, s = 0, r = 0) {\n    this.time = Math.round(e + i * 1e3 + s * 6e4 + r * 36e5);\n  }\n  /**\n   * Base unit of the timestamp\n   */\n  get millis() {\n    return this.time;\n  }\n  set millis(e) {\n    this.time = Math.round(e);\n  }\n  /**\n   * Defines the time in frames at the\n   * current frame rate\n   */\n  get frames() {\n    return ca(this.millis / 1e3);\n  }\n  set frames(e) {\n    this.millis = jt(e);\n  }\n  /**\n   * Convert the timestamp to seconds\n   */\n  get seconds() {\n    return this.millis / 1e3;\n  }\n  set seconds(e) {\n    this.millis = e * 1e3;\n  }\n  /**\n   * Equivalent to millis += x\n   */\n  addMillis(e) {\n    return this.millis = this.millis + e, this;\n  }\n  /**\n   * Equivalent to frames += x\n   */\n  addFrames(e) {\n    const i = jt(e);\n    return this.millis = this.millis + i, this;\n  }\n  /**\n   * add two timestamps the timestamp being added will adapt\n   * its fps to the current fps\n   * @returns A new Timestamp instance with the added frames\n   */\n  add(e) {\n    return new E(e.millis + this.millis);\n  }\n  /**\n   * subtract two timestamps timestamp being subtracted\n   * will adapt its fps to the current fps\n   * @returns A new Timestamp instance with the added frames\n   */\n  subtract(e) {\n    return new E(this.millis - e.millis);\n  }\n  /**\n   * Create a new timestamp from frames\n   */\n  static fromFrames(e, i) {\n    const s = new E();\n    return s.millis = jt(e, i), s;\n  }\n  /**\n   * get a copy of the object\n   */\n  copy() {\n    return new E(this.millis);\n  }\n  toJSON() {\n    return this.millis;\n  }\n  fromJSON(e) {\n    return B(typeof e == \"number\"), this.millis = e, this;\n  }\n  static fromJSON(e) {\n    return B(typeof e == \"number\"), new E(e);\n  }\n}\nfunction Ki(t) {\n  return `${t.hours.toString().padStart(2, \"0\")}:${t.minutes.toString().padStart(2, \"0\")}:${t.seconds.toString().padStart(2, \"0\")},` + t.milliseconds.toString().padStart(3, \"0\");\n}\nfunction Gi(t) {\n  const e = new Date(1970, 0, 1);\n  return e.setSeconds(t), e.setMilliseconds(Math.round(t % 1 * 1e3)), {\n    hours: e.getHours(),\n    minutes: e.getMinutes(),\n    seconds: e.getSeconds(),\n    milliseconds: e.getMilliseconds()\n  };\n}\nclass Le {\n  words = [];\n  constructor(e) {\n    e && (this.words = e);\n  }\n  get duration() {\n    return this.stop.subtract(this.start);\n  }\n  get text() {\n    return this.words.map(({ text: e }) => e).join(\" \");\n  }\n  get start() {\n    return this.words.at(0)?.start ?? new E();\n  }\n  get stop() {\n    return this.words.at(-1)?.stop ?? new E();\n  }\n}\nvar ai = /* @__PURE__ */ ((t) => (t.en = \"en\", t.de = \"de\", t))(ai || {});\nclass Tt {\n  /**\n   * A unique identifier for the word\n   */\n  id = crypto.randomUUID();\n  /**\n   * Defines the text to be displayed\n   */\n  text;\n  /**\n   * Defines the time stamp at\n   * which the text is spoken\n   */\n  start;\n  /**\n   * Defines the time stamp at\n   * which the text was spoken\n   */\n  stop;\n  /**\n   * Defines the confidence of\n   * the predicition\n   */\n  confidence;\n  /**\n   * Create a new Word object\n   * @param text The string contents of the word\n   * @param start Start in **milliseconds**\n   * @param stop Stop in **milliseconds**\n   * @param confidence Predicition confidence\n   */\n  constructor(e, i, s, r) {\n    this.text = e, this.start = new E(i), this.stop = new E(s), this.confidence = r;\n  }\n  /**\n   * Defines the time between start\n   * and stop returned as a timestamp\n   */\n  get duration() {\n    return this.stop.subtract(this.start);\n  }\n}\nclass se {\n  id = crypto.randomUUID();\n  language = ai.en;\n  groups = [];\n  get text() {\n    return this.groups.map(({ text: e }) => e).join(\" \");\n  }\n  get words() {\n    return this.groups.flatMap(({ words: e }) => e);\n  }\n  constructor(e = [], i = ai.en) {\n    this.groups = e, this.language = i;\n  }\n  /**\n   * Iterate over all words in groups\n   */\n  *iter({ count: e, duration: i, length: s }) {\n    for (const r of this.groups) {\n      let a;\n      for (const [n, o] of r.words.entries())\n        a && (e && a.words.length >= vt(...e) ? (yield a, a = void 0) : i && a?.duration.seconds >= vt(...i) ? (yield a, a = void 0) : s && a.text.length >= vt(...s) && (yield a, a = void 0)), a ? a.words.push(o) : a = new Le([o]), n == r.words.length - 1 && (yield a);\n    }\n  }\n  /**\n   * This method will optimize the transcipt for display\n   */\n  optimize() {\n    const e = this.groups.flatMap((i) => i.words);\n    for (let i = 0; i < e.length - 1; i++) {\n      const s = e[i], r = e[i + 1];\n      r.start.millis - s.stop.millis < 0 ? r.start.millis = s.stop.millis + 1 : s.stop.millis = r.start.millis - 1;\n    }\n    return this;\n  }\n  /**\n   * Convert the transcript into a SRT compatible\n   * string and downloadable blob\n   */\n  toSRT(e = {}) {\n    let i = 1, s = \"\";\n    for (const r of this.iter(e)) {\n      const a = Gi(r.start.seconds), n = Gi(r.stop.seconds);\n      s += `${i}\n` + Ki(a) + \" --> \" + Ki(n) + `\n${r.text}\n\n`, i += 1;\n    }\n    return {\n      text: s,\n      blob: new Blob([s], { type: \"text/plain;charset=utf8\" })\n    };\n  }\n  toJSON() {\n    return this.groups.map(\n      (e) => e.words.map((i) => ({\n        token: i.text,\n        start: i.start.millis,\n        stop: i.stop.millis\n      }))\n    );\n  }\n  /**\n   * Create a new Transcript containing the\n   * first `{count}` words\n   * @param count Defines the number of words required\n   * @param startAtZero Defines if the first word should start at 0 milliseconds\n   * @returns A new Transcript instance\n   */\n  slice(e, i = !0) {\n    let s = 0;\n    const r = [];\n    for (const a of this.groups)\n      for (const n of a.words)\n        if (r.length == 0 && i && (s = n.start.millis), r.push(new Tt(n.text, n.start.millis - s, n.stop.millis - s)), r.length == e)\n          return new se([new Le(r)]);\n    return new se([new Le(r)]);\n  }\n  /**\n   * Create a deep copy of the transcript\n   * @returns A new Transcript instance\n   */\n  copy() {\n    return se.fromJSON(this.toJSON());\n  }\n  static fromJSON(e) {\n    const i = new se();\n    for (const s of e) {\n      const r = new Le();\n      for (const a of s)\n        r.words.push(new Tt(a.token, a.start, a.stop));\n      i.groups.push(r);\n    }\n    return i;\n  }\n  /**\n   * Create a Transcript from an input medium of the form:\n   * `{ token: string; start: number; stop: number; }[][]`\n   * @param input The input medium, can be a URL, Blob, or an array of captions\n   * @returns A Transcript with processed captions\n   */\n  static async from(e) {\n    if (Array.isArray(e))\n      return se.fromJSON(e);\n    if (e instanceof FileSystemFileHandle) {\n      const s = await e.getFile();\n      return se.fromJSON(JSON.parse(await s.text()));\n    }\n    if (e instanceof Blob)\n      return se.fromJSON(JSON.parse(await e.text()));\n    const i = await fetch(e);\n    if (!i.ok)\n      throw new Ee({\n        code: \"unexpectedIOError\",\n        message: \"An unexpected error occurred while fetching the file\"\n      });\n    return se.fromJSON(await i.json());\n  }\n  fromJSON(e) {\n    B(typeof e == \"object\"), B(Array.isArray(e)), this.groups = [];\n    for (const i of e) {\n      const s = new Le();\n      for (const r of i)\n        s.words.push(new Tt(r.token, r.start, r.stop));\n      this.groups.push(s);\n    }\n    return this;\n  }\n}\nclass Te {\n  toJSON(e) {\n    const i = {}, s = this.constructor.__serializableProperties || [], r = (a) => {\n      if (a == null || a instanceof Blob || a instanceof FileSystemFileHandle)\n        return a;\n      if (Array.isArray(a))\n        return a.map((n) => r(n)).filter((n) => n !== void 0);\n      if (typeof a == \"object\" && \"toJSON\" in a)\n        return a.toJSON();\n      if (typeof a == \"object\") {\n        const n = {};\n        for (const o in a) {\n          const c = r(a[o]);\n          c !== void 0 && (n[o] = c);\n        }\n        return n;\n      }\n      return a;\n    };\n    return s.forEach(({ propertyKey: a, mapTo: n }) => {\n      if (e?.includes(a))\n        return;\n      const o = this[a], c = n ?? a, l = r(o);\n      l !== void 0 && (i[c] = l);\n    }), i;\n  }\n  fromJSON(e) {\n    return (this.constructor.__serializableProperties || []).forEach(({ propertyKey: s, deserializer: r, mapTo: a }) => {\n      const n = a ?? s, o = r.fromJSON?.bind(r) ?? ((c) => c);\n      e.hasOwnProperty(n) && (this[s] = o(e[n]));\n    }), this;\n  }\n  static fromJSON(e) {\n    return new this().fromJSON(e);\n  }\n}\nfunction v(t = {}, e) {\n  return function(i, s) {\n    const r = i.constructor;\n    r.__serializableProperties || (r.__serializableProperties = []), r.__serializableProperties = [\n      ...r.__serializableProperties.filter((a) => a.propertyKey !== s),\n      {\n        propertyKey: s,\n        deserializer: t,\n        mapTo: e\n      }\n    ];\n  };\n}\nfunction dt(t) {\n  return class extends t {\n    _handlers = {};\n    on(i, s) {\n      if (typeof s != \"function\")\n        throw new Error(\"The callback of an event listener needs to be a function.\");\n      const r = crypto.randomUUID();\n      return this._handlers[i] ? this._handlers[i][r] = s : this._handlers[i] = { [r]: s }, r;\n    }\n    off(i, ...s) {\n      if (i) {\n        if (i === \"*\") {\n          this._handlers = {};\n          return;\n        }\n        for (const r of Object.values(this._handlers))\n          i in r && delete r[i];\n        for (const r of s)\n          this.off(r);\n      }\n    }\n    emit(i, s) {\n      const r = new CustomEvent(i, {\n        detail: s\n      });\n      Object.defineProperty(r, \"currentTarget\", { writable: !1, value: this });\n      for (const a in this._handlers[i] ?? {})\n        this._handlers[i]?.[a](r);\n      for (const a in this._handlers[\"*\"] ?? {})\n        this._handlers[\"*\"]?.[a](r);\n    }\n    bubble(i) {\n      return this.on(\"*\", (s) => {\n        i.emit(s.type, s.detail);\n      });\n    }\n    resolve(i) {\n      return (s, r) => {\n        this.on(\"error\", r), this.on(i, s);\n      };\n    }\n  };\n}\nclass qt extends dt(Te) {\n  _key;\n  _value;\n  _store;\n  loaded = !1;\n  constructor(e, i, s) {\n    super(), this._store = e, this._key = i, this.initValue(s);\n  }\n  get key() {\n    return this._key;\n  }\n  get value() {\n    return this._value;\n  }\n  set value(e) {\n    this._value = e, this._store.set(this._key, e), this.emit(\"update\", void 0);\n  }\n  async initValue(e) {\n    e instanceof Promise ? this._value = await e : this._value = e, this.loaded = !0, this.emit(\"update\", void 0);\n  }\n}\nclass pd {\n  storageEngine;\n  namespace;\n  constructor(e, i = localStorage) {\n    this.storageEngine = i, this.namespace = e;\n  }\n  define(e, i, s) {\n    const r = this.get(e);\n    return r === null ? (this.set(e, i), new qt(this, e, i)) : s && r != null ? new qt(this, e, s(r)) : new qt(this, e, r);\n  }\n  set(e, i) {\n    this.storageEngine.setItem(\n      this.getStorageId(e),\n      JSON.stringify({\n        value: i\n      })\n    );\n  }\n  get(e) {\n    const i = this.storageEngine.getItem(this.getStorageId(e));\n    return i ? JSON.parse(i).value : null;\n  }\n  remove(e) {\n    this.storageEngine.removeItem(this.getStorageId(e));\n  }\n  getStorageId(e) {\n    return this.namespace ? `${this.namespace}.${e}` : e;\n  }\n}\nfunction js() {\n  return class extends dt(class {\n  }) {\n  };\n}\nfunction gd(t, e) {\n  return e == \"lower\" ? t.toLocaleLowerCase() : e == \"upper\" ? t.toUpperCase() : t;\n}\nfunction $e(t = \"#000000\", e = 100) {\n  return `${t}${Math.round(e / 100 * 255).toString(16)}`;\n}\nfunction _(t, e) {\n  return typeof t == \"number\" ? t : Number.parseFloat(t.replace(\"%\", \"\")) * e / 100;\n}\nfunction pa(t) {\n  const e = t.startsWith(\"#\") ? t.slice(1) : t, i = parseInt(e, 16), s = i >> 16 & 255, r = i >> 8 & 255, a = i & 255;\n  return { r: s, g: r, b: a };\n}\nfunction ga(t, e, i) {\n  return `#${((1 << 24) + (Math.round(t) << 16) + (Math.round(e) << 8) + Math.round(i)).toString(16).slice(1)}`;\n}\nfunction Ii(t, e) {\n  switch (e) {\n    case \"ease-in\":\n      return t * t;\n    case \"ease-out\":\n      return t * (2 - t);\n    case \"ease-in-out\":\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    case \"ease-out-in\":\n      if (t < 0.5) {\n        const i = t * 2;\n        return i * (2 - i) / 2;\n      } else {\n        const i = (t - 0.5) * 2;\n        return i * i / 2 + 0.5;\n      }\n    default:\n      return t;\n  }\n}\nfunction nt(t, e, i) {\n  return t + (e - t) * i;\n}\nfunction Yi(t) {\n  const e = pa(t);\n  return wa(e.r, e.g, e.b);\n}\nfunction wa(t, e, i) {\n  t /= 255, e /= 255, i /= 255;\n  const s = Math.max(t, e, i), r = Math.min(t, e, i);\n  let a = 0, n = 0;\n  const o = (s + r) / 2;\n  if (s !== r) {\n    const c = s - r;\n    switch (n = o > 0.5 ? c / (2 - s - r) : c / (s + r), s) {\n      case t:\n        a = (e - i) / c + (e < i ? 6 : 0);\n        break;\n      case e:\n        a = (i - t) / c + 2;\n        break;\n      case i:\n        a = (t - e) / c + 4;\n        break;\n    }\n    a /= 6;\n  }\n  return { h: Math.round(a * 360), s: Math.round(n * 100), l: Math.round(o * 100) };\n}\nfunction ya(t, e, i) {\n  e /= 100, i /= 100, t = (t + 360) % 360;\n  function s(l, d, h) {\n    return h < 0 && (h += 1), h > 1 && (h -= 1), h < 1 / 6 ? l + (d - l) * 6 * h : h < 1 / 2 ? d : h < 2 / 3 ? l + (d - l) * (2 / 3 - h) * 6 : l;\n  }\n  const r = i < 0.5 ? i * (1 + e) : i + e - i * e, a = 2 * i - r, n = s(a, r, t / 360 + 1 / 3), o = s(a, r, t / 360), c = s(a, r, t / 360 - 1 / 3);\n  return ga(\n    Math.round(n * 255),\n    Math.round(o * 255),\n    Math.round(c * 255)\n  );\n}\nfunction ba(t, e) {\n  const { frames: i, extrapolate: s = \"clamp\", easing: r } = t;\n  if (e.millis <= O(i[0].time).millis)\n    return i[0].value;\n  if (e.millis >= O(i[i.length - 1].time).millis)\n    return i[i.length - 1].value;\n  let a, n;\n  for (let m = 0; m < i.length - 1; m++)\n    if (e.millis >= O(i[m].time).millis && e.millis <= O(i[m + 1].time).millis) {\n      a = i[m], n = i[m + 1];\n      break;\n    }\n  if (!a || !n)\n    throw new Error(\"Unexpected error in keyframe interpolation\");\n  const o = (e.millis - O(a.time).millis) / (O(n.time).millis - O(a.time).millis), c = Ii(o, a.easing ?? r), l = Yi(a.value), d = Yi(n.value);\n  let h = l.h, u = d.h;\n  return Math.abs(u - h) > 180 && (h < u ? h += 360 : u += 360), ya(\n    nt(h, u, c),\n    nt(l.s, d.s, c),\n    nt(l.l, d.l, c)\n  );\n}\nfunction qs(t, e) {\n  const { frames: i, extrapolate: s = \"clamp\", easing: r } = t;\n  if (e.millis <= O(i[0].time).millis)\n    return i[0].value;\n  if (e.millis >= O(i[i.length - 1].time).millis)\n    return i[i.length - 1].value;\n  let a, n;\n  for (let l = 0; l < i.length - 1; l++)\n    if (e.millis >= O(i[l].time).millis && e.millis <= O(i[l + 1].time).millis) {\n      a = i[l], n = i[l + 1];\n      break;\n    }\n  if (!a || !n)\n    throw new Error(\"Unexpected error in keyframe interpolation\");\n  const o = (e.millis - O(a.time).millis) / (O(n.time).millis - O(a.time).millis), c = Ii(o, a.easing ?? r);\n  return typeof a.value == \"number\" && typeof n.value == \"number\" ? nt(a.value, n.value, c) : `${nt(Ji(a.value), Ji(n.value), c)}%`;\n}\nfunction Ji(t) {\n  return typeof t == \"number\" ? t : Number(t.replace(\"%\", \"\"));\n}\nfunction ka(t, e) {\n  const { frames: i, extrapolate: s = \"clamp\" } = t;\n  if (e.millis <= O(i[0].time).millis)\n    return i[0].value;\n  if (e.millis >= O(i[i.length - 1].time).millis)\n    return i[i.length - 1].value;\n  let r, a;\n  for (let h = 0; h < i.length - 1; h++)\n    if (e.millis >= O(i[h].time).millis && e.millis <= O(i[h + 1].time).millis) {\n      r = i[h], a = i[h + 1];\n      break;\n    }\n  if (!r || !a)\n    throw new Error(\"Unexpected error in keyframe interpolation\");\n  const n = (e.millis - O(r.time).millis) / (O(a.time).millis - O(r.time).millis), o = Ii(n, r.easing), c = a.value, l = c.length, d = Math.floor(o * l);\n  return c.slice(0, d);\n}\nvar Sa = Object.defineProperty, ht = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Sa(e, i, r), r;\n};\nclass we extends Te {\n  /**\n   * Unique identifier of the mask\n   */\n  id = crypto.randomUUID();\n  type = \"base\";\n  width;\n  height;\n  fillRule;\n  animations = [];\n  clip;\n  renderer;\n  constructor({ width: e = 100, height: i = 100 } = {}) {\n    super(), this.width = e, this.height = i;\n  }\n  connect(e) {\n    return this.clip = e, this;\n  }\n  draw(e) {\n    return this.renderer = e, new Path2D();\n  }\n  animate(e) {\n    for (const i of this.animations) {\n      const s = i?.frames[0].value;\n      (typeof s == \"number\" || typeof s == \"string\" && s.match(/^[0-9]+(\\.[0-9]+)?%$/)) && (this[i.key] = qs(i, e.subtract(this.start)));\n    }\n    return this;\n  }\n  get start() {\n    return this.clip?.start ?? new E();\n  }\n  get stop() {\n    return this.clip?.stop ?? new E();\n  }\n  get size() {\n    return {\n      width: _(this.width, this.renderer?.width ?? 0),\n      height: _(this.height, this.renderer?.height ?? 0)\n    };\n  }\n  get bounds() {\n    const { width: e, height: i } = this.size;\n    return [\n      { x: 0, y: 0 },\n      { x: e, y: 0 },\n      { x: e, y: i },\n      { x: 0, y: i }\n    ];\n  }\n  detach() {\n    return this.clip && (this.clip.mask = void 0, this.clip = void 0), this;\n  }\n}\nht([\n  v()\n], we.prototype, \"type\");\nht([\n  v()\n], we.prototype, \"width\");\nht([\n  v()\n], we.prototype, \"height\");\nht([\n  v()\n], we.prototype, \"fillRule\");\nht([\n  v()\n], we.prototype, \"animations\");\nvar va = Object.defineProperty, Mt = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && va(e, i, r), r;\n};\nclass ut extends we {\n  type = \"rectangle\";\n  x;\n  y;\n  radius;\n  constructor({ x: e = 0, y: i = 0, radius: s = 0, animations: r, ...a } = {}) {\n    super(a), this.x = e, this.y = i, this.radius = s, this.animations = r ?? [];\n  }\n  draw(e) {\n    const i = super.draw(e);\n    if (this.radius) {\n      const s = _(this.width, e.width), r = _(this.height, e.height), a = _(this.radius, Math.min(s, r));\n      i.roundRect(\n        _(this.x, e.width) * e.resolution,\n        _(this.y, e.height) * e.resolution,\n        s * e.resolution,\n        r * e.resolution,\n        a * e.resolution\n      );\n    } else\n      i.rect(\n        _(this.x, e.width) * e.resolution,\n        _(this.y, e.height) * e.resolution,\n        _(this.width, e.width) * e.resolution,\n        _(this.height, e.height) * e.resolution\n      );\n    return i;\n  }\n  get bounds() {\n    return super.bounds.map((e) => ({\n      x: e.x + _(this.x, this.renderer?.width ?? 0),\n      y: e.y + _(this.y, this.renderer?.height ?? 0)\n    }));\n  }\n}\nMt([\n  v()\n], ut.prototype, \"type\");\nMt([\n  v()\n], ut.prototype, \"x\");\nMt([\n  v()\n], ut.prototype, \"y\");\nMt([\n  v()\n], ut.prototype, \"radius\");\nclass Ta {\n  static fromJSON(e) {\n    switch (B(typeof e == \"object\"), B(e != null), B(\"type\" in e), e.type) {\n      case \"rectangle\":\n        return ut.fromJSON(e);\n      case \"circle\":\n        return At.fromJSON(e);\n      default:\n        return we.fromJSON(e);\n    }\n  }\n}\nvar xa = Object.defineProperty, Ei = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && xa(e, i, r), r;\n};\nclass At extends we {\n  type = \"circle\";\n  cx;\n  cy;\n  constructor({ cx: e, cy: i, x: s = 0, y: r = 0, radius: a, animations: n, ...o } = {}) {\n    super(o), this.cx = e ?? s, this.cy = i ?? r, a && (this.radius = a), this.animations = n ?? [];\n  }\n  set x(e) {\n    this.cx = e;\n  }\n  set y(e) {\n    this.cy = e;\n  }\n  get x() {\n    return this.cx;\n  }\n  get y() {\n    return this.cy;\n  }\n  get radius() {\n    const e = this.size;\n    return Math.min(e.width, e.height) * 0.5;\n  }\n  set radius(e) {\n    typeof e == \"number\" ? (this.height = e * 2, this.width = e * 2) : (this.height = `${Number(e.replace(\"%\", \"\")) * 2}%`, this.width = `${Number(e.replace(\"%\", \"\")) * 2}%`);\n  }\n  draw(e) {\n    const i = super.draw(e);\n    return i.ellipse(\n      _(this.cx, e.width) * e.resolution,\n      _(this.cy, e.height) * e.resolution,\n      _(this.width, e.width) * e.resolution * 0.5,\n      _(this.height, e.height) * e.resolution * 0.5,\n      0,\n      0,\n      2 * Math.PI\n    ), i;\n  }\n  get bounds() {\n    const { width: e, height: i } = this.size, { cx: s, cy: r } = this, a = _(s, this.renderer?.width ?? 0) - e * 0.5, n = _(r, this.renderer?.height ?? 0) - i * 0.5;\n    return [\n      { x: a, y: n },\n      { x: a + e, y: n },\n      { x: a + e, y: n + i },\n      { x: a, y: n + i }\n    ];\n  }\n}\nEi([\n  v()\n], At.prototype, \"type\");\nEi([\n  v()\n], At.prototype, \"cx\");\nEi([\n  v()\n], At.prototype, \"cy\");\nvar Ca = Object.defineProperty, _a = Object.getOwnPropertyDescriptor, zt = (t, e, i, s) => {\n  for (var r = s > 1 ? void 0 : s ? _a(e, i) : e, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = (s ? n(e, i, r) : n(r)) || r);\n  return s && r && Ca(e, i, r), r;\n};\nclass Xe extends Te {\n  _background = \"#000000\";\n  /**\n  * The canvas element\n  */\n  canvas = document.createElement(\"canvas\");\n  /**\n   * The main 2d context of the canvas\n   */\n  context = this.canvas.getContext(\"2d\");\n  resolution = 1;\n  width = 0;\n  height = 0;\n  constructor({\n    width: e = 1920,\n    height: i = 1080,\n    background: s = \"#000000\",\n    resolution: r = 1\n  } = {}) {\n    super(), this.resolution = r, this.background = s, this.resize(e, i);\n  }\n  get background() {\n    return this._background;\n  }\n  set background(e) {\n    this.background != e && (this.canvas.style.background = e, this._background = e);\n  }\n  /**\n   * Resize the canvas\n   */\n  resize(e = this.width, i = this.height, s = this.resolution) {\n    const r = Math.round(e / 2) * 2, a = Math.round(i / 2) * 2;\n    return (r !== this.width || a !== this.height || s !== this.resolution) && (this.width = r, this.height = a, this.resolution = s, this.canvas.width = Math.round(r * this.resolution / 2) * 2, this.canvas.height = Math.round(a * this.resolution / 2) * 2, this.context.imageSmoothingEnabled = !1), this;\n  }\n  clear(e) {\n    let i = 0, s = 0, r = this.width * this.resolution, a = this.height * this.resolution;\n    return this.context.fillStyle = this._background, e && (i = _(e.x ?? 0, this.width) * this.resolution, s = _(e.y ?? 0, this.height) * this.resolution, r = _(e.width, this.width) * this.resolution, a = _(e.height, this.height) * this.resolution), this.context.clearRect(i, s, r, a), this.context.fillRect(i, s, r, a), this;\n  }\n  rect(e) {\n    if (this.context.beginPath(), e.radius) {\n      const i = _(e.width, this.width), s = _(e.height, this.height), r = Math.max(_(e.radius, Math.min(i, s)), 0);\n      this.context.roundRect(\n        _(e.x ?? 0, this.width) * this.resolution | 0,\n        _(e.y ?? 0, this.height) * this.resolution | 0,\n        i * this.resolution | 0,\n        s * this.resolution | 0,\n        r * this.resolution | 0\n      );\n    } else\n      this.context.rect(\n        _(e.x ?? 0, this.width) * this.resolution | 0,\n        _(e.y ?? 0, this.height) * this.resolution | 0,\n        _(e.width, this.width) * this.resolution | 0,\n        _(e.height, this.height) * this.resolution | 0\n      );\n    return this.context.closePath(), this;\n  }\n  circle(e) {\n    return this.context.beginPath(), \"height\" in e ? this.context.ellipse(\n      _(e.cx, this.width) * this.resolution | 0,\n      _(e.cy, this.height) * this.resolution | 0,\n      _(e.width, this.width) * this.resolution | 0,\n      _(e.height, this.height) * this.resolution | 0,\n      0,\n      0,\n      Math.PI * 2\n    ) : this.context.arc(\n      _(e.cx, this.width) * this.resolution | 0,\n      _(e.cy, this.height) * this.resolution | 0,\n      _(e.radius, Math.min(this.width, this.height) * 0.5) * this.resolution | 0,\n      0,\n      Math.PI * 2\n    ), this.context.closePath(), this;\n  }\n  image(e, i) {\n    const { x: s = 0, y: r = 0, width: a, height: n, rotation: o } = i, c = _(s, this.width) * this.resolution | 0, l = _(r, this.height) * this.resolution | 0, d = _(a, this.width) * this.resolution | 0, h = _(n, this.height) * this.resolution | 0;\n    if (o !== void 0 && o !== 0) {\n      this.context.save(), this.context.translate(c + d / 2, l + h / 2);\n      const u = o * Math.PI / 180;\n      this.context.rotate(u);\n      const m = Math.abs(o % 180) === 90;\n      this.context.drawImage(\n        e,\n        (m ? -h / 2 : -d / 2) | 0,\n        (m ? -d / 2 : -h / 2) | 0,\n        (m ? h : d) | 0,\n        (m ? d : h) | 0\n      ), this.context.restore();\n    } else\n      this.context.drawImage(e, c, l, d, h);\n    return this;\n  }\n  clip(e, i) {\n    return e instanceof we ? this.context.clip(e.draw(this), e.fillRule) : e && this.context.clip(e, i), this;\n  }\n  opacity(e) {\n    return this.context.globalAlpha *= e / 100, this;\n  }\n  transform(e) {\n    return e ? (e.translate && this.context.translate(\n      _(e.translate.x, this.width) * this.resolution | 0,\n      _(e.translate.y, this.height) * this.resolution | 0\n    ), e.rotate && this.context.rotate(e.rotate * Math.PI / 180), e.scale && this.context.scale(\n      _(e.scale.x, this.width),\n      _(e.scale.y, this.height)\n    ), this) : (this.context.setTransform(1, 0, 0, 1, 0, 0), this);\n  }\n  blendMode(e) {\n    return e && (this.context.globalCompositeOperation = e), this;\n  }\n  save() {\n    return this.context.save(), this;\n  }\n  restore() {\n    return this.context.restore(), this;\n  }\n  filter(e) {\n    return e ? (this.context.filter = e, this) : this;\n  }\n  fill(e, i = !1) {\n    if (!e)\n      return this.context.fillStyle = \"transparent\", this;\n    if (typeof e.color == \"string\")\n      this.context.fillStyle = $e(e.color, e.opacity);\n    else if (\"type\" in e.color) {\n      const s = this.createGradient(e.color);\n      this.context.fillStyle = s;\n    } else if (\"image\" in e.color) {\n      const s = this.context.createPattern(e.color.image, e.color.repetition);\n      this.context.fillStyle = s ?? \"\";\n    }\n    return i && this.context.fill(), this;\n  }\n  shadow(e) {\n    return e ? (this.context.fillStyle = this.context.shadowColor = $e(e.color, e.opacity), this.context.shadowOffsetX = (e.offsetX ?? 0) * this.resolution * this.textScale, this.context.shadowOffsetY = (e.offsetY ?? 0) * this.resolution * this.textScale, this.context.shadowBlur = (e.blur ?? 24) * this.resolution * this.textScale, this) : (this.context.shadowColor = \"transparent\", this.context.shadowBlur = 0, this.context.shadowOffsetX = 0, this.context.shadowOffsetY = 0, this);\n  }\n  stroke(e, i = !1) {\n    return e ? (this.context.strokeStyle = $e(e.color, e.opacity), this.context.lineWidth = (e.width ?? 1) * this.resolution * this.textScale, e.lineCap && (this.context.lineCap = e.lineCap), e.lineJoin && (this.context.lineJoin = e.lineJoin), e.miterLimit && (this.context.miterLimit = e.miterLimit), i && this.context.stroke(), this) : (this.context.strokeStyle = \"transparent\", this.context.lineWidth = 0, this.context.lineCap = \"butt\", this.context.lineJoin = \"miter\", this.context.miterLimit = 10, this);\n  }\n  /**\n   * Add the renderer to the dom\n   */\n  mount(e) {\n    e.appendChild(this.canvas);\n  }\n  /**\n   * Remove the renderer from the dom\n   */\n  unmount() {\n    this.canvas.parentElement?.removeChild(this.canvas);\n  }\n  createGradient(e) {\n    let i;\n    return e.type === \"linear\" ? i = this.context.createLinearGradient(0, 0, this.canvas.width, 0) : i = this.context.createRadialGradient(\n      this.canvas.width / 2,\n      this.canvas.height / 2,\n      0,\n      this.canvas.width / 2,\n      this.canvas.height / 2,\n      this.canvas.width / 2\n    ), e.stops.forEach((s) => {\n      i.addColorStop(s.offset, s.color);\n    }), i;\n  }\n  /**\n   * Draw a watermark on the canvas\n   */\n  watermark(e) {\n    !e || !e.length || (this.context.save(), this.context.font = `${46 * this.resolution}px Verdana`, this.context.fillStyle = \"#ffffff\", this.context.textAlign = \"center\", this.context.textBaseline = \"middle\", this.context.strokeStyle = \"#000000\", this.context.lineWidth = 8 * this.resolution, this.context.strokeText(e, this.width * this.resolution * 0.5, this.height * this.resolution * 0.9), this.context.fillText(e, this.width * this.resolution * 0.5, this.height * this.resolution * 0.9), this.context.restore());\n  }\n  /**\n   * The scale of the text\n   * @deprecated\n   */\n  textScale = 4;\n  /**\n   * @deprecated use Text node instead\n   */\n  text(e) {\n    return e.font && (this.context.font = this.createFontString(\n      e.font.style,\n      e.font.weight,\n      e.font.size * this.resolution,\n      e.font.family\n    )), e.color && (this.context.fillStyle = e.color), e.alignment && (this.context.textAlign = e.alignment), e.baseline && (this.context.textBaseline = e.baseline), this;\n  }\n  /**\n   * @deprecated use Text node instead\n   */\n  strokeText(e, i) {\n    return this.context.strokeText(\n      e,\n      _(i.x, this.width) * this.resolution,\n      _(i.y, this.height) * this.resolution\n    ), this;\n  }\n  /**\n   * @deprecated use Text node instead\n   */\n  fillText(e, i) {\n    return this.context.fillText(\n      e,\n      _(i.x, this.width) * this.resolution,\n      _(i.y, this.height) * this.resolution\n    ), this;\n  }\n  /**\n   * @deprecated use Text node instead\n   */\n  measureText(e, i) {\n    return this.context.font = this.createFontString(\n      i.style,\n      i.weight,\n      i.size,\n      i.family\n    ), this.context.measureText(e);\n  }\n  /**\n   * @deprecated use Text node instead\n   */\n  createFontString(e, i, s, r) {\n    return `${e ?? \"normal\"} ${i ?? \"400\"} ${(s ?? 16) * this.textScale}px ${r ?? \"Arial\"}`.trim();\n  }\n}\nzt([\n  v()\n], Xe.prototype, \"resolution\", 2);\nzt([\n  v()\n], Xe.prototype, \"width\", 2);\nzt([\n  v()\n], Xe.prototype, \"height\", 2);\nzt([\n  v()\n], Xe.prototype, \"background\", 1);\nclass Qs {\n  context;\n  /**\n   * Offset in **seconds** relative to the hardware time when the playback started\n   */\n  hardwareOffset = 0;\n  /**\n   * Offset in **seconds** relative to 0 when the playback started\n   */\n  playbackOffset = 0;\n  /**\n   * Defines the fps used for rendering.\n   */\n  playbackFps = Rt;\n  /**\n   * The fps used when the ticker is inactive (not playing)\n   */\n  inactiveFps = oa;\n  /**\n   * Defines the current state of the ticker\n   */\n  playing = !1;\n  /**\n   * Defines if the ticker is active\n   */\n  stopped = !0;\n  /**\n   * User defined fixed duration\n   * \n   * @deprecated Use markers.stop instead\n   */\n  duration;\n  /**\n   * The last time the timer was updated\n   */\n  lastFrameTime = 0;\n  /**\n   * Creates a new ticker\n   * @param callback - The function to call when the ticker is updated\n   */\n  constructor(e = {}) {\n    this.callback = e.callback, this.context = e.context ?? new AudioContext(), this.playbackFps = e.fps ?? 30;\n  }\n  /**\n   * The current time of the hardware in seconds\n   */\n  get hardwareTime() {\n    return this.context.currentTime;\n  }\n  /**\n   * The current time of the playback in **seconds** relative to 0\n   */\n  get playbackTime() {\n    return this.playing ? this.hardwareTime - this.hardwareOffset + this.playbackOffset : this.playbackOffset;\n  }\n  get playbackTimestamp() {\n    return new E(0, this.playbackTime);\n  }\n  /**\n   * The current frame that the playback is set to\n   */\n  get playbackFrame() {\n    return Math.floor(this.playbackTime * this.playbackFps);\n  }\n  /**\n   * Starts the animation loop\n   */\n  start() {\n    this.stopped && (this.stopped = !1, this.timer());\n  }\n  /**\n   * Stops the animation loop\n   */\n  stop() {\n    this.stopped = !0;\n  }\n  /**\n   * Starts the frame incrementation\n   */\n  async play() {\n    this.playing || this.stopped || (this.resumeAudioContext(), this.hardwareOffset = this.hardwareTime, this.playing = !0);\n  }\n  /**\n   * Pauses the frame incrementation\n   */\n  async pause() {\n    this.playing && (this.playbackOffset = this.playbackTime, this.playing = !1);\n  }\n  /**\n   * The animation loop\n   */\n  async timer(e = 0) {\n    if (this.stopped) return;\n    const s = 1e3 / (this.playing ? this.playbackFps : this.inactiveFps);\n    e - this.lastFrameTime >= s && (this.lastFrameTime = e, await this.callback?.()), requestAnimationFrame(this.timer.bind(this));\n  }\n  async resumeAudioContext() {\n    this.context.state === \"suspended\" && await this.context.resume();\n  }\n}\nconst Ia = {\n  fromJSON: (t) => {\n    B(typeof t == \"object\"), B(t != null);\n    const e = {};\n    for (const [i, s] of Object.entries(t))\n      B(typeof s == \"number\"), e[i] = new E(s);\n    return e;\n  }\n};\nfunction Ea(t) {\n  const e = new E();\n  for (const i of t)\n    i.disabled || i.stop.frames > e.frames && (e.frames = i.stop.frames);\n  return e;\n}\nvar Pa = Object.defineProperty, Fe = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Pa(e, i, r), r;\n};\nclass le extends Te {\n  id = crypto.randomUUID();\n  data = {};\n  type = \"base\";\n  mimeType;\n  input;\n  name;\n  createdAt = /* @__PURE__ */ new Date();\n  constructor(e) {\n    super(), this.input = e.input, this.mimeType = e.mimeType, e.name ? this.name = e.name : typeof this.input == \"string\" ? this.name = this.input.split(\"/\").at(-1) ?? \"\" : this.input instanceof File ? this.name = this.input.name : this.input instanceof FileSystemFileHandle ? this.name = this.input.name : this.name = \"UNTITLED_BLOB\";\n  }\n  async init(e = {}) {\n  }\n  /**\n   * Get the source as an array buffer\n   */\n  async arrayBuffer() {\n    return typeof this.input == \"string\" ? await (await fetch(this.input)).arrayBuffer() : this.input instanceof Blob ? await this.input.arrayBuffer() : await (await this.input.getFile()).arrayBuffer();\n  }\n  /**\n   * Downloads the file\n   */\n  async download() {\n    $s(this.input, this.name);\n  }\n  /**\n   * Get a visulization of the source\n   * as an html element\n   * @deprecated\n   */\n  async thumbnail() {\n    return document.createElement(\"div\");\n  }\n  /**\n   * Create a checkpoint of the source. May include Blob or FileSystemFileHandle.\n   * @param middleware A function to modify the checkpoint data\n   * @returns A serialized representation of the source\n   */\n  async createCheckpoint() {\n    return this.toJSON();\n  }\n}\nFe([\n  v()\n], le.prototype, \"id\");\nFe([\n  v()\n], le.prototype, \"data\");\nFe([\n  v()\n], le.prototype, \"type\");\nFe([\n  v()\n], le.prototype, \"mimeType\");\nFe([\n  v()\n], le.prototype, \"input\");\nFe([\n  v()\n], le.prototype, \"name\");\nFe([\n  v(Ot)\n], le.prototype, \"createdAt\");\nfunction Pi(t) {\n  class e extends t {\n    /**\n     * The height of the source\n     */\n    height = 1080;\n    /**\n     * The width of the source\n     */\n    width = 1920;\n    /**\n     * The aspect ratio of the source\n     */\n    get aspectRatio() {\n      return this.width / this.height;\n    }\n  }\n  return e;\n}\nasync function Fa(t) {\n  if (t instanceof FileSystemFileHandle)\n    return (await t.getFile()).type;\n  if (t instanceof Blob)\n    return t.type;\n  if (t.startsWith(\"<html>\"))\n    return \"text/html\";\n  let e;\n  try {\n    e = await fetch(t, { method: \"HEAD\" });\n  } catch {\n    console.info(\"Using AbortController fallback\");\n    const r = new AbortController();\n    e = await fetch(t, { signal: r.signal }), r.abort();\n  }\n  if (!e.ok)\n    throw new Error(`HTTP error! Status: ${e.status}`);\n  const i = e.headers.get(\"Content-Type\");\n  if (!i)\n    throw new Ee({\n      message: \"No content type found\",\n      code: \"no_content_type_found\"\n    });\n  return i;\n}\nfunction f(t) {\n  if (!t)\n    throw new Error(\"Assertion failed.\");\n}\nvar Fi = (t) => {\n  const e = (t % 360 + 360) % 360;\n  if (e === 0 || e === 90 || e === 180 || e === 270)\n    return e;\n  throw new Error(`Invalid rotation ${t}.`);\n}, H = (t) => t && t[t.length - 1], Qe = (t) => t >= 0 && t < 2 ** 32, Se = class Xs {\n  constructor(e) {\n    this.bytes = e, this.pos = 0;\n  }\n  seekToByte(e) {\n    this.pos = 8 * e;\n  }\n  readBit() {\n    const e = Math.floor(this.pos / 8), i = this.bytes[e] ?? 0, s = 7 - (this.pos & 7), r = (i & 1 << s) >> s;\n    return this.pos++, r;\n  }\n  readBits(e) {\n    let i = 0;\n    for (let s = 0; s < e; s++)\n      i <<= 1, i |= this.readBit();\n    return i;\n  }\n  readAlignedByte() {\n    if (this.pos % 8 !== 0)\n      throw new Error(\"Bitstream is not byte-aligned.\");\n    const e = this.pos / 8, i = this.bytes[e] ?? 0;\n    return this.pos += 8, i;\n  }\n  skipBits(e) {\n    this.pos += e;\n  }\n  getBitsLeft() {\n    return this.bytes.length * 8 - this.pos;\n  }\n  clone() {\n    const e = new Xs(this.bytes);\n    return e.pos = this.pos, e;\n  }\n}, I = (t) => {\n  let e = 0;\n  for (; t.readBit() === 0 && e < 32; )\n    e++;\n  if (e >= 32)\n    throw new Error(\"Invalid exponential-Golomb code.\");\n  return (1 << e) - 1 + t.readBits(e);\n}, ot = (t) => {\n  const e = I(t);\n  return e & 1 ? e + 1 >> 1 : -(e >> 1);\n}, Ra = (t, e, i, s) => {\n  for (let r = e; r < i; r++) {\n    const a = Math.floor(r / 8);\n    let n = t[a];\n    const o = 7 - (r & 7);\n    n &= ~(1 << o), n |= (s & 1 << i - r - 1) >> i - r - 1 << o, t[a] = n;\n  }\n}, te = (t) => t instanceof ArrayBuffer ? new Uint8Array(t) : new Uint8Array(t.buffer, t.byteOffset, t.byteLength), Re = (t) => t instanceof ArrayBuffer ? new DataView(t) : new DataView(t.buffer, t.byteOffset, t.byteLength), he = new TextEncoder(), Ri = (t) => Object.fromEntries(Object.entries(t).map(([e, i]) => [i, e])), Ke = {\n  bt709: 1,\n  // ITU-R BT.709\n  bt470bg: 5,\n  // ITU-R BT.470BG\n  smpte170m: 6,\n  // ITU-R BT.601 525 - SMPTE 170M\n  bt2020: 9,\n  // ITU-R BT.202\n  smpte432: 12\n  // SMPTE EG 432-1\n}, Ks = Ri(Ke), Ge = {\n  bt709: 1,\n  // ITU-R BT.709\n  smpte170m: 6,\n  // SMPTE 170M\n  linear: 8,\n  // Linear transfer characteristics\n  \"iec61966-2-1\": 13,\n  // IEC 61966-2-1\n  pg: 16,\n  // Rec. ITU-R BT.2100-2 perceptual quantization (PQ) system\n  hlg: 18\n  // Rec. ITU-R BT.2100-2 hybrid loggamma (HLG) system\n}, Gs = Ri(Ge), Ye = {\n  rgb: 0,\n  // Identity\n  bt709: 1,\n  // ITU-R BT.709\n  bt470bg: 5,\n  // ITU-R BT.470BG\n  smpte170m: 6,\n  // SMPTE 170M\n  \"bt2020-ncl\": 9\n  // ITU-R BT.2020-2 (non-constant luminance)\n}, Ys = Ri(Ye), Js = (t) => !!t && !!t.primaries && !!t.transfer && !!t.matrix && t.fullRange !== void 0, Ut = (t) => t instanceof ArrayBuffer || typeof SharedArrayBuffer < \"u\" && t instanceof SharedArrayBuffer || ArrayBuffer.isView(t) && !(t instanceof DataView), ft = class {\n  constructor() {\n    this.currentPromise = Promise.resolve();\n  }\n  async acquire() {\n    let t;\n    const e = new Promise((s) => {\n      t = s;\n    }), i = this.currentPromise;\n    return this.currentPromise = e, await i, t;\n  }\n}, Zi = (t) => [...t].map((e) => e.toString(16).padStart(2, \"0\")).join(\"\"), es = (t) => (t = t >> 1 & 1431655765 | (t & 1431655765) << 1, t = t >> 2 & 858993459 | (t & 858993459) << 2, t = t >> 4 & 252645135 | (t & 252645135) << 4, t = t >> 8 & 16711935 | (t & 16711935) << 8, t = t >> 16 & 65535 | (t & 65535) << 16, t >>> 0), X = (t, e, i) => {\n  let s = 0, r = t.length - 1, a = -1;\n  for (; s <= r; ) {\n    const n = s + r >> 1, o = i(t[n]);\n    o === e ? (a = n, r = n - 1) : o < e ? s = n + 1 : r = n - 1;\n  }\n  return a;\n}, N = (t, e, i) => {\n  let s = -1, r = 0, a = t.length - 1;\n  for (; r <= a; ) {\n    const n = r + (a - r + 1) / 2 | 0;\n    i(t[n]) <= e ? (s = n, r = n + 1) : a = n - 1;\n  }\n  return s;\n}, Z = () => {\n  let t, e;\n  return { promise: new Promise((s, r) => {\n    t = s, e = r;\n  }), resolve: t, reject: e };\n}, Ba = (t, e) => {\n  const i = t.indexOf(e);\n  i !== -1 && t.splice(i, 1);\n}, Zs = (t, e) => {\n  for (let i = t.length - 1; i >= 0; i--)\n    if (e(t[i]))\n      return t[i];\n}, er = (t, e) => {\n  for (let i = t.length - 1; i >= 0; i--)\n    if (e(t[i]))\n      return i;\n  return -1;\n}, Oa = async function* (t) {\n  Symbol.iterator in t ? yield* t[Symbol.iterator]() : yield* t[Symbol.asyncIterator]();\n}, Ma = (t) => {\n  if (!(Symbol.iterator in t) && !(Symbol.asyncIterator in t))\n    throw new TypeError(\"Argument must be an iterable or async iterable.\");\n}, tr = (t, e, i) => {\n  const s = t.getUint8(e), r = t.getUint8(e + 1), a = t.getUint8(e + 2);\n  return i ? s | r << 8 | a << 16 : s << 16 | r << 8 | a;\n}, Aa = (t, e, i) => tr(t, e, i) << 8 >> 8, ir = (t, e, i, s) => {\n  i = i >>> 0, i = i & 16777215, s ? (t.setUint8(e, i & 255), t.setUint8(e + 1, i >>> 8 & 255), t.setUint8(e + 2, i >>> 16 & 255)) : (t.setUint8(e, i >>> 16 & 255), t.setUint8(e + 1, i >>> 8 & 255), t.setUint8(e + 2, i & 255));\n}, za = (t, e, i, s) => {\n  i = J(i, -8388608, 8388607), i < 0 && (i = i + 16777216 & 16777215), ir(t, e, i, s);\n}, Ua = (t, e, i, s) => {\n  t.setUint32(e + 0, i, !0), t.setInt32(e + 4, Math.floor(i / 2 ** 32), !0);\n}, _t = (t, e) => ({\n  async next() {\n    const i = await t.next();\n    return i.done ? { value: void 0, done: !0 } : { value: e(i.value), done: !1 };\n  },\n  return() {\n    return t.return();\n  },\n  throw(i) {\n    return t.throw(i);\n  },\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n}), J = (t, e, i) => Math.max(e, Math.min(i, t)), fe = \"und\", Bi = (t, e) => {\n  const i = 10 ** e;\n  return Math.round(t * i) / i;\n}, ni = (t, e) => Math.round(t / e) * e, Da = (t) => {\n  let e = 0;\n  for (; t; )\n    e++, t >>= 1;\n  return e;\n}, Na = /^[a-z]{3}$/, Oi = (t) => Na.test(t), be = 1e6 * (1 + Number.EPSILON), oi = (t, e) => {\n  const i = { ...t };\n  for (const s in e)\n    typeof t[s] == \"object\" && t[s] !== null && typeof e[s] == \"object\" && e[s] !== null ? i[s] = oi(\n      t[s],\n      e[s]\n    ) : i[s] = e[s];\n  return i;\n}, ts = async (t, e, i) => {\n  let s = 0;\n  for (; ; )\n    try {\n      return await fetch(t, e);\n    } catch (r) {\n      console.error(\"Retrying failed fetch. Error:\", r), s++;\n      const a = i(s);\n      if (a === null)\n        throw r;\n      if (!Number.isFinite(a) || a < 0)\n        throw new TypeError(\"Retry delay must be a non-negative finite number.\");\n      a > 0 && await new Promise((n) => setTimeout(n, 1e3 * a));\n    }\n}, Va = (t, e) => {\n  const i = t < 0 ? -1 : 1;\n  t = Math.abs(t);\n  let s = 0, r = 1, a = 1, n = 0, o = t;\n  for (; ; ) {\n    const c = Math.floor(o), l = c * a + s, d = c * n + r;\n    if (d > e)\n      return {\n        numerator: i * a,\n        denominator: n\n      };\n    if (s = a, r = n, a = l, n = d, o = 1 / (o - c), !isFinite(o))\n      break;\n  }\n  return {\n    numerator: i * a,\n    denominator: n\n  };\n}, Dt = class {\n  constructor() {\n    this.currentPromise = Promise.resolve();\n  }\n  call(t) {\n    return this.currentPromise = this.currentPromise.then(t);\n  }\n}, La = class {\n  /** Returns true iff the encoder can encode the given codec configuration. */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static supports(t, e) {\n    return !1;\n  }\n}, sr = class {\n  /** Returns true iff the encoder can encode the given codec configuration. */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static supports(t, e) {\n    return !1;\n  }\n}, rr = [], ar = [], It = [], Et = [], Wa = (t) => {\n  if (t.prototype instanceof La)\n    It.push(t);\n  else if (t.prototype instanceof sr)\n    Et.push(t);\n  else\n    throw new TypeError(\"Encoder must be a CustomVideoEncoder or CustomAudioEncoder.\");\n}, re = [\n  \"avc\",\n  \"hevc\",\n  \"vp9\",\n  \"av1\",\n  \"vp8\"\n], K = [\n  \"pcm-s16\",\n  // We don't prefix 'le' so we're compatible with the WebCodecs-registered PCM codec strings\n  \"pcm-s16be\",\n  \"pcm-s24\",\n  \"pcm-s24be\",\n  \"pcm-s32\",\n  \"pcm-s32be\",\n  \"pcm-f32\",\n  \"pcm-f32be\",\n  \"pcm-u8\",\n  \"pcm-s8\",\n  \"ulaw\",\n  \"alaw\"\n], Mi = [\n  \"aac\",\n  \"opus\",\n  \"mp3\",\n  \"vorbis\",\n  \"flac\"\n], ne = [\n  ...Mi,\n  ...K\n], ve = [\n  \"webvtt\"\n], is = [\n  { maxMacroblocks: 99, maxBitrate: 64e3, level: 10 },\n  // Level 1\n  { maxMacroblocks: 396, maxBitrate: 192e3, level: 11 },\n  // Level 1.1\n  { maxMacroblocks: 396, maxBitrate: 384e3, level: 12 },\n  // Level 1.2\n  { maxMacroblocks: 396, maxBitrate: 768e3, level: 13 },\n  // Level 1.3\n  { maxMacroblocks: 396, maxBitrate: 2e6, level: 20 },\n  // Level 2\n  { maxMacroblocks: 792, maxBitrate: 4e6, level: 21 },\n  // Level 2.1\n  { maxMacroblocks: 1620, maxBitrate: 4e6, level: 22 },\n  // Level 2.2\n  { maxMacroblocks: 1620, maxBitrate: 1e7, level: 30 },\n  // Level 3\n  { maxMacroblocks: 3600, maxBitrate: 14e6, level: 31 },\n  // Level 3.1\n  { maxMacroblocks: 5120, maxBitrate: 2e7, level: 32 },\n  // Level 3.2\n  { maxMacroblocks: 8192, maxBitrate: 2e7, level: 40 },\n  // Level 4\n  { maxMacroblocks: 8192, maxBitrate: 5e7, level: 41 },\n  // Level 4.1\n  { maxMacroblocks: 8704, maxBitrate: 5e7, level: 42 },\n  // Level 4.2\n  { maxMacroblocks: 22080, maxBitrate: 135e6, level: 50 },\n  // Level 5\n  { maxMacroblocks: 36864, maxBitrate: 24e7, level: 51 },\n  // Level 5.1\n  { maxMacroblocks: 36864, maxBitrate: 24e7, level: 52 },\n  // Level 5.2\n  { maxMacroblocks: 139264, maxBitrate: 24e7, level: 60 },\n  // Level 6\n  { maxMacroblocks: 139264, maxBitrate: 48e7, level: 61 },\n  // Level 6.1\n  { maxMacroblocks: 139264, maxBitrate: 8e8, level: 62 }\n  // Level 6.2\n], ss = [\n  { maxPictureSize: 36864, maxBitrate: 128e3, tier: \"L\", level: 30 },\n  // Level 1 (Low Tier)\n  { maxPictureSize: 122880, maxBitrate: 15e5, tier: \"L\", level: 60 },\n  // Level 2 (Low Tier)\n  { maxPictureSize: 245760, maxBitrate: 3e6, tier: \"L\", level: 63 },\n  // Level 2.1 (Low Tier)\n  { maxPictureSize: 552960, maxBitrate: 6e6, tier: \"L\", level: 90 },\n  // Level 3 (Low Tier)\n  { maxPictureSize: 983040, maxBitrate: 1e7, tier: \"L\", level: 93 },\n  // Level 3.1 (Low Tier)\n  { maxPictureSize: 2228224, maxBitrate: 12e6, tier: \"L\", level: 120 },\n  // Level 4 (Low Tier)\n  { maxPictureSize: 2228224, maxBitrate: 3e7, tier: \"H\", level: 120 },\n  // Level 4 (High Tier)\n  { maxPictureSize: 2228224, maxBitrate: 2e7, tier: \"L\", level: 123 },\n  // Level 4.1 (Low Tier)\n  { maxPictureSize: 2228224, maxBitrate: 5e7, tier: \"H\", level: 123 },\n  // Level 4.1 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 25e6, tier: \"L\", level: 150 },\n  // Level 5 (Low Tier)\n  { maxPictureSize: 8912896, maxBitrate: 1e8, tier: \"H\", level: 150 },\n  // Level 5 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 4e7, tier: \"L\", level: 153 },\n  // Level 5.1 (Low Tier)\n  { maxPictureSize: 8912896, maxBitrate: 16e7, tier: \"H\", level: 153 },\n  // Level 5.1 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 6e7, tier: \"L\", level: 156 },\n  // Level 5.2 (Low Tier)\n  { maxPictureSize: 8912896, maxBitrate: 24e7, tier: \"H\", level: 156 },\n  // Level 5.2 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 6e7, tier: \"L\", level: 180 },\n  // Level 6 (Low Tier)\n  { maxPictureSize: 35651584, maxBitrate: 24e7, tier: \"H\", level: 180 },\n  // Level 6 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 12e7, tier: \"L\", level: 183 },\n  // Level 6.1 (Low Tier)\n  { maxPictureSize: 35651584, maxBitrate: 48e7, tier: \"H\", level: 183 },\n  // Level 6.1 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 24e7, tier: \"L\", level: 186 },\n  // Level 6.2 (Low Tier)\n  { maxPictureSize: 35651584, maxBitrate: 8e8, tier: \"H\", level: 186 }\n  // Level 6.2 (High Tier)\n], ke = [\n  { maxPictureSize: 36864, maxBitrate: 2e5, level: 10 },\n  // Level 1\n  { maxPictureSize: 73728, maxBitrate: 8e5, level: 11 },\n  // Level 1.1\n  { maxPictureSize: 122880, maxBitrate: 18e5, level: 20 },\n  // Level 2\n  { maxPictureSize: 245760, maxBitrate: 36e5, level: 21 },\n  // Level 2.1\n  { maxPictureSize: 552960, maxBitrate: 72e5, level: 30 },\n  // Level 3\n  { maxPictureSize: 983040, maxBitrate: 12e6, level: 31 },\n  // Level 3.1\n  { maxPictureSize: 2228224, maxBitrate: 18e6, level: 40 },\n  // Level 4\n  { maxPictureSize: 2228224, maxBitrate: 3e7, level: 41 },\n  // Level 4.1\n  { maxPictureSize: 8912896, maxBitrate: 6e7, level: 50 },\n  // Level 5\n  { maxPictureSize: 8912896, maxBitrate: 12e7, level: 51 },\n  // Level 5.1\n  { maxPictureSize: 8912896, maxBitrate: 18e7, level: 52 },\n  // Level 5.2\n  { maxPictureSize: 35651584, maxBitrate: 18e7, level: 60 },\n  // Level 6\n  { maxPictureSize: 35651584, maxBitrate: 24e7, level: 61 },\n  // Level 6.1\n  { maxPictureSize: 35651584, maxBitrate: 48e7, level: 62 }\n  // Level 6.2\n], rs = [\n  { maxPictureSize: 147456, maxBitrate: 15e5, tier: \"M\", level: 0 },\n  // Level 2.0 (Main Tier)\n  { maxPictureSize: 278784, maxBitrate: 3e6, tier: \"M\", level: 1 },\n  // Level 2.1 (Main Tier)\n  { maxPictureSize: 665856, maxBitrate: 6e6, tier: \"M\", level: 4 },\n  // Level 3.0 (Main Tier)\n  { maxPictureSize: 1065024, maxBitrate: 1e7, tier: \"M\", level: 5 },\n  // Level 3.1 (Main Tier)\n  { maxPictureSize: 2359296, maxBitrate: 12e6, tier: \"M\", level: 8 },\n  // Level 4.0 (Main Tier)\n  { maxPictureSize: 2359296, maxBitrate: 3e7, tier: \"H\", level: 8 },\n  // Level 4.0 (High Tier)\n  { maxPictureSize: 2359296, maxBitrate: 2e7, tier: \"M\", level: 9 },\n  // Level 4.1 (Main Tier)\n  { maxPictureSize: 2359296, maxBitrate: 5e7, tier: \"H\", level: 9 },\n  // Level 4.1 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 3e7, tier: \"M\", level: 12 },\n  // Level 5.0 (Main Tier)\n  { maxPictureSize: 8912896, maxBitrate: 1e8, tier: \"H\", level: 12 },\n  // Level 5.0 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 4e7, tier: \"M\", level: 13 },\n  // Level 5.1 (Main Tier)\n  { maxPictureSize: 8912896, maxBitrate: 16e7, tier: \"H\", level: 13 },\n  // Level 5.1 (High Tier)\n  { maxPictureSize: 8912896, maxBitrate: 6e7, tier: \"M\", level: 14 },\n  // Level 5.2 (Main Tier)\n  { maxPictureSize: 8912896, maxBitrate: 24e7, tier: \"H\", level: 14 },\n  // Level 5.2 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 6e7, tier: \"M\", level: 15 },\n  // Level 5.3 (Main Tier)\n  { maxPictureSize: 35651584, maxBitrate: 24e7, tier: \"H\", level: 15 },\n  // Level 5.3 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 6e7, tier: \"M\", level: 16 },\n  // Level 6.0 (Main Tier)\n  { maxPictureSize: 35651584, maxBitrate: 24e7, tier: \"H\", level: 16 },\n  // Level 6.0 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 1e8, tier: \"M\", level: 17 },\n  // Level 6.1 (Main Tier)\n  { maxPictureSize: 35651584, maxBitrate: 48e7, tier: \"H\", level: 17 },\n  // Level 6.1 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 16e7, tier: \"M\", level: 18 },\n  // Level 6.2 (Main Tier)\n  { maxPictureSize: 35651584, maxBitrate: 8e8, tier: \"H\", level: 18 },\n  // Level 6.2 (High Tier)\n  { maxPictureSize: 35651584, maxBitrate: 16e7, tier: \"M\", level: 19 },\n  // Level 6.3 (Main Tier)\n  { maxPictureSize: 35651584, maxBitrate: 8e8, tier: \"H\", level: 19 }\n  // Level 6.3 (High Tier)\n], Ha = \".01.01.01.01.00\", $a = \".0.110.01.01.01.0\", ci = (t, e, i, s) => {\n  if (t === \"avc\") {\n    const a = Math.ceil(e / 16) * Math.ceil(i / 16), n = is.find(\n      (h) => a <= h.maxMacroblocks && s <= h.maxBitrate\n    ) ?? H(is), o = n ? n.level : 0, c = \"64\".padStart(2, \"0\"), l = \"00\", d = o.toString(16).padStart(2, \"0\");\n    return `avc1.${c}${l}${d}`;\n  } else if (t === \"hevc\") {\n    const r = \"\", n = \"6\", o = e * i, c = ss.find(\n      (d) => o <= d.maxPictureSize && s <= d.maxBitrate\n    ) ?? H(ss);\n    return `hev1.${r}1.${n}.${c.tier}${c.level}.B0`;\n  } else {\n    if (t === \"vp8\")\n      return \"vp8\";\n    if (t === \"vp9\") {\n      const r = \"00\", a = e * i, n = ke.find(\n        (c) => a <= c.maxPictureSize && s <= c.maxBitrate\n      ) ?? H(ke);\n      return `vp09.${r}.${n.level.toString().padStart(2, \"0\")}.08${Ha}`;\n    } else if (t === \"av1\") {\n      const a = e * i, n = rs.find(\n        (l) => a <= l.maxPictureSize && s <= l.maxBitrate\n      ) ?? H(rs);\n      return `av01.0.${n.level.toString().padStart(2, \"0\")}${n.tier}.08${$a}`;\n    }\n  }\n  throw new TypeError(`Unhandled codec '${t}'.`);\n}, ja = (t) => {\n  const e = t.split(\".\"), i = Number(e[1]), s = Number(e[2]), r = Number(e[3]), a = e[4] ? Number(e[4]) : 1;\n  return [\n    1,\n    1,\n    i,\n    2,\n    1,\n    s,\n    3,\n    1,\n    r,\n    4,\n    1,\n    a\n  ];\n}, nr = (t) => {\n  const e = t.split(\".\"), r = (1 << 7) + 1, a = Number(e[1]), n = e[2], o = Number(n.slice(0, -1)), c = (a << 5) + o, l = n.slice(-1) === \"H\" ? 1 : 0, h = Number(e[3]) === 8 ? 0 : 1, u = 0, m = e[4] ? Number(e[4]) : 0, p = e[5] ? Number(e[5][0]) : 1, g = e[5] ? Number(e[5][1]) : 1, w = e[5] ? Number(e[5][2]) : 0, b = (l << 7) + (h << 6) + (u << 5) + (m << 4) + (p << 3) + (g << 2) + w;\n  return [r, c, b, 0];\n}, or = (t) => {\n  const { codec: e, codecDescription: i, colorSpace: s, avcCodecInfo: r, hevcCodecInfo: a, vp9CodecInfo: n, av1CodecInfo: o } = t;\n  if (e === \"avc\") {\n    if (r) {\n      const c = new Uint8Array([\n        r.avcProfileIndication,\n        r.profileCompatibility,\n        r.avcLevelIndication\n      ]);\n      return `avc1.${Zi(c)}`;\n    }\n    if (!i || i.byteLength < 4)\n      throw new TypeError(\"AVC decoder description is not provided or is not at least 4 bytes long.\");\n    return `avc1.${Zi(i.subarray(1, 4))}`;\n  } else if (e === \"hevc\") {\n    let c, l, d, h, u, m;\n    if (a)\n      c = a.generalProfileSpace, l = a.generalProfileIdc, d = es(a.generalProfileCompatibilityFlags), h = a.generalTierFlag, u = a.generalLevelIdc, m = [...a.generalConstraintIndicatorFlags];\n    else {\n      if (!i || i.byteLength < 23)\n        throw new TypeError(\"HEVC decoder description is not provided or is not at least 23 bytes long.\");\n      const g = Re(i), w = g.getUint8(1);\n      c = w >> 6 & 3, l = w & 31, d = es(g.getUint32(2)), h = w >> 5 & 1, u = g.getUint8(12), m = [];\n      for (let b = 0; b < 6; b++)\n        m.push(g.getUint8(6 + b));\n    }\n    let p = \"hev1.\";\n    for (p += [\"\", \"A\", \"B\", \"C\"][c] + l, p += \".\", p += d.toString(16).toUpperCase(), p += \".\", p += h === 0 ? \"L\" : \"H\", p += u; m.length > 0 && m[m.length - 1] === 0; )\n      m.pop();\n    return m.length > 0 && (p += \".\", p += m.map((g) => g.toString(16).toUpperCase()).join(\".\")), p;\n  } else {\n    if (e === \"vp8\")\n      return \"vp8\";\n    if (e === \"vp9\") {\n      if (!n) {\n        const x = t.width * t.height;\n        let S = H(ke).level;\n        for (const k of ke)\n          if (x <= k.maxPictureSize) {\n            S = k.level;\n            break;\n          }\n        return `vp09.00.${S.toString().padStart(2, \"0\")}.08`;\n      }\n      const c = n.profile.toString().padStart(2, \"0\"), l = n.level.toString().padStart(2, \"0\"), d = n.bitDepth.toString().padStart(2, \"0\"), h = n.chromaSubsampling.toString().padStart(2, \"0\"), u = n.colourPrimaries.toString().padStart(2, \"0\"), m = n.transferCharacteristics.toString().padStart(2, \"0\"), p = n.matrixCoefficients.toString().padStart(2, \"0\"), g = n.videoFullRangeFlag.toString().padStart(2, \"0\");\n      let w = `vp09.${c}.${l}.${d}.${h}`;\n      w += `.${u}.${m}.${p}.${g}`;\n      const b = \".01.01.01.01.00\";\n      return w.endsWith(b) && (w = w.slice(0, -b.length)), w;\n    } else if (e === \"av1\") {\n      if (!o) {\n        const k = t.width * t.height;\n        let y = H(ke).level;\n        for (const T of ke)\n          if (k <= T.maxPictureSize) {\n            y = T.level;\n            break;\n          }\n        return `av01.0.${y.toString().padStart(2, \"0\")}M.08`;\n      }\n      const c = o.profile, l = o.level.toString().padStart(2, \"0\"), d = o.tier ? \"H\" : \"M\", h = o.bitDepth.toString().padStart(2, \"0\"), u = o.monochrome ? \"1\" : \"0\", m = 100 * o.chromaSubsamplingX + 10 * o.chromaSubsamplingY + 1 * (o.chromaSubsamplingX && o.chromaSubsamplingY ? o.chromaSamplePosition : 0), p = s?.primaries ? Ke[s.primaries] : 1, g = s?.transfer ? Ge[s.transfer] : 1, w = s?.matrix ? Ye[s.matrix] : 1, b = s?.fullRange ? 1 : 0;\n      let x = `av01.${c}.${l}${d}.${h}`;\n      x += `.${u}.${m.toString().padStart(3, \"0\")}`, x += `.${p.toString().padStart(2, \"0\")}`, x += `.${g.toString().padStart(2, \"0\")}`, x += `.${w.toString().padStart(2, \"0\")}`, x += `.${b}`;\n      const S = \".0.110.01.01.01.0\";\n      return x.endsWith(S) && (x = x.slice(0, -S.length)), x;\n    }\n  }\n  throw new TypeError(`Unhandled codec '${e}'.`);\n}, li = (t, e, i) => {\n  if (t === \"aac\")\n    return e >= 2 && i <= 24e3 ? \"mp4a.40.29\" : i <= 24e3 ? \"mp4a.40.5\" : \"mp4a.40.2\";\n  if (t === \"mp3\")\n    return \"mp3\";\n  if (t === \"opus\")\n    return \"opus\";\n  if (t === \"vorbis\")\n    return \"vorbis\";\n  if (t === \"flac\")\n    return \"flac\";\n  if (K.includes(t))\n    return t;\n  throw new TypeError(`Unhandled codec '${t}'.`);\n}, cr = (t) => {\n  const { codec: e, codecDescription: i, aacCodecInfo: s } = t;\n  if (e === \"aac\") {\n    if (!s)\n      throw new TypeError(\"AAC codec info must be provided.\");\n    return s.isMpeg2 ? \"mp4a.67\" : `mp4a.40.${lr(i).objectType}`;\n  } else {\n    if (e === \"mp3\")\n      return \"mp3\";\n    if (e === \"opus\")\n      return \"opus\";\n    if (e === \"vorbis\")\n      return \"vorbis\";\n    if (e === \"flac\")\n      return \"flac\";\n    if (e && K.includes(e))\n      return e;\n  }\n  throw new TypeError(`Unhandled codec '${e}'.`);\n}, lr = (t) => {\n  if (!t || t.byteLength < 2)\n    throw new TypeError(\"AAC description must be at least 2 bytes long.\");\n  const e = new Se(t);\n  let i = e.readBits(5);\n  i === 31 && (i = 32 + e.readBits(6));\n  const s = e.readBits(4);\n  let r = null;\n  if (s === 15)\n    r = e.readBits(24);\n  else {\n    const o = [\n      96e3,\n      88200,\n      64e3,\n      48e3,\n      44100,\n      32e3,\n      24e3,\n      22050,\n      16e3,\n      12e3,\n      11025,\n      8e3,\n      7350\n    ];\n    s < o.length && (r = o[s]);\n  }\n  const a = e.readBits(4);\n  let n = null;\n  return a >= 1 && a <= 7 && (n = {\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 8\n  }[a]), {\n    objectType: i,\n    frequencyIndex: s,\n    sampleRate: r,\n    channelConfiguration: a,\n    numberOfChannels: n\n  };\n}, Ai = 48e3, dr = /^pcm-([usf])(\\d+)+(be)?$/, Be = (t) => {\n  if (f(K.includes(t)), t === \"ulaw\")\n    return { dataType: \"ulaw\", sampleSize: 1, littleEndian: !0, silentValue: 255 };\n  if (t === \"alaw\")\n    return { dataType: \"alaw\", sampleSize: 1, littleEndian: !0, silentValue: 213 };\n  const e = dr.exec(t);\n  f(e);\n  let i;\n  e[1] === \"u\" ? i = \"unsigned\" : e[1] === \"s\" ? i = \"signed\" : i = \"float\";\n  const s = Number(e[2]) / 8, r = e[3] !== \"be\", a = t === \"pcm-u8\" ? 2 ** 7 : 0;\n  return { dataType: i, sampleSize: s, littleEndian: r, silentValue: a };\n}, hr = (t) => t.startsWith(\"avc1\") || t.startsWith(\"avc3\") ? \"avc\" : t.startsWith(\"hev1\") || t.startsWith(\"hvc1\") ? \"hevc\" : t === \"vp8\" ? \"vp8\" : t.startsWith(\"vp09\") ? \"vp9\" : t.startsWith(\"av01\") ? \"av1\" : t.startsWith(\"mp4a.40\") || t === \"mp4a.67\" ? \"aac\" : t === \"mp3\" || t === \"mp4a.69\" || t === \"mp4a.6B\" || t === \"mp4a.6b\" ? \"mp3\" : t === \"opus\" ? \"opus\" : t === \"vorbis\" ? \"vorbis\" : t === \"flac\" ? \"flac\" : t === \"ulaw\" ? \"ulaw\" : t === \"alaw\" ? \"alaw\" : dr.test(t) ? t : t === \"webvtt\" ? \"webvtt\" : null, di = (t) => t === \"avc\" ? {\n  avc: {\n    format: \"avc\"\n    // Ensure the format is not Annex B\n  }\n} : t === \"hevc\" ? {\n  hevc: {\n    format: \"hevc\"\n    // Ensure the format is not Annex B\n  }\n} : {}, hi = (t) => t === \"aac\" ? {\n  aac: {\n    format: \"aac\"\n    // Ensure the format is not ADTS\n  }\n} : t === \"opus\" ? {\n  opus: {\n    format: \"opus\"\n  }\n} : {}, Nt = class {\n  /** @internal */\n  constructor(t) {\n    this._factor = t;\n  }\n  /** @internal */\n  _toVideoBitrate(t, e, i) {\n    const s = e * i, r = {\n      avc: 1,\n      // H.264/AVC (baseline)\n      hevc: 0.6,\n      // H.265/HEVC (~40% more efficient than AVC)\n      vp9: 0.6,\n      // Similar to HEVC\n      av1: 0.4,\n      // ~60% more efficient than AVC\n      vp8: 1.2\n      // Slightly less efficient than AVC\n    }, c = ((l) => 2e6 * Math.pow(l / 2073600, 0.75))(s) * r[t] * this._factor;\n    return Math.ceil(c / 1e3) * 1e3;\n  }\n  /** @internal */\n  _toAudioBitrate(t) {\n    if (K.includes(t) || t === \"flac\")\n      return -1;\n    const i = {\n      aac: 128e3,\n      // 128kbps base for AAC\n      opus: 64e3,\n      // 64kbps base for Opus\n      mp3: 16e4,\n      // 160kbps base for MP3\n      vorbis: 64e3\n      // 64kbps base for Vorbis\n    }[t];\n    if (!i)\n      throw new Error(`Unhandled codec: ${t}`);\n    let s = i * this._factor;\n    return t === \"aac\" ? s = [96e3, 128e3, 16e4, 192e3].reduce(\n      (a, n) => Math.abs(n - s) < Math.abs(a - s) ? n : a\n    ) : t === \"opus\" || t === \"vorbis\" ? s = Math.max(6e3, s) : t === \"mp3\" && (s = [\n      8e3,\n      16e3,\n      24e3,\n      32e3,\n      4e4,\n      48e3,\n      64e3,\n      8e4,\n      96e3,\n      112e3,\n      128e3,\n      16e4,\n      192e3,\n      224e3,\n      256e3,\n      32e4\n    ].reduce(\n      (a, n) => Math.abs(n - s) < Math.abs(a - s) ? n : a\n    )), Math.round(s / 1e3) * 1e3;\n  }\n}, qa = [\"avc1\", \"avc3\", \"hev1\", \"hvc1\", \"vp8\", \"vp09\", \"av01\"], Qa = /^(avc1|avc3)\\.[0-9a-fA-F]{6}$/, Xa = /^(hev1|hvc1)\\.(?:[ABC]?\\d+)\\.[0-9a-fA-F]{1,8}\\.[LH]\\d+(?:\\.[0-9a-fA-F]{1,2}){0,6}$/, Ka = /^vp09(?:\\.\\d{2}){3}(?:(?:\\.\\d{2}){5})?$/, Ga = /^av01\\.\\d\\.\\d{2}[MH]\\.\\d{2}(?:\\.\\d\\.\\d{3}\\.\\d{2}\\.\\d{2}\\.\\d{2}\\.\\d)?$/, ur = (t) => {\n  if (!t)\n    throw new TypeError(\"Video chunk metadata must be provided.\");\n  if (typeof t != \"object\")\n    throw new TypeError(\"Video chunk metadata must be an object.\");\n  if (!t.decoderConfig)\n    throw new TypeError(\"Video chunk metadata must include a decoder configuration.\");\n  if (typeof t.decoderConfig != \"object\")\n    throw new TypeError(\"Video chunk metadata decoder configuration must be an object.\");\n  if (typeof t.decoderConfig.codec != \"string\")\n    throw new TypeError(\"Video chunk metadata decoder configuration must specify a codec string.\");\n  if (!qa.some((e) => t.decoderConfig.codec.startsWith(e)))\n    throw new TypeError(\n      \"Video chunk metadata decoder configuration codec string must be a valid video codec string as specified in the WebCodecs Codec Registry.\"\n    );\n  if (!Number.isInteger(t.decoderConfig.codedWidth) || t.decoderConfig.codedWidth <= 0)\n    throw new TypeError(\n      \"Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).\"\n    );\n  if (!Number.isInteger(t.decoderConfig.codedHeight) || t.decoderConfig.codedHeight <= 0)\n    throw new TypeError(\n      \"Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).\"\n    );\n  if (t.decoderConfig.description !== void 0 && !Ut(t.decoderConfig.description))\n    throw new TypeError(\n      \"Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.\"\n    );\n  if (t.decoderConfig.colorSpace !== void 0) {\n    const { colorSpace: e } = t.decoderConfig;\n    if (typeof e != \"object\")\n      throw new TypeError(\n        \"Video chunk metadata decoder configuration colorSpace, when provided, must be an object.\"\n      );\n    const i = Object.keys(Ke);\n    if (e.primaries != null && !i.includes(e.primaries))\n      throw new TypeError(\n        `Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${i.join(\", \")}.`\n      );\n    const s = Object.keys(Ge);\n    if (e.transfer != null && !s.includes(e.transfer))\n      throw new TypeError(\n        `Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${s.join(\", \")}.`\n      );\n    const r = Object.keys(Ye);\n    if (e.matrix != null && !r.includes(e.matrix))\n      throw new TypeError(\n        `Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${r.join(\", \")}.`\n      );\n    if (e.fullRange != null && typeof e.fullRange != \"boolean\")\n      throw new TypeError(\n        \"Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.\"\n      );\n  }\n  if (t.decoderConfig.codec.startsWith(\"avc1\") || t.decoderConfig.codec.startsWith(\"avc3\")) {\n    if (!Qa.test(t.decoderConfig.codec))\n      throw new TypeError(\n        \"Video chunk metadata decoder configuration codec string for AVC must be a valid AVC codec string as specified in Section 3.4 of RFC 6381.\"\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"hev1\") || t.decoderConfig.codec.startsWith(\"hvc1\")) {\n    if (!Xa.test(t.decoderConfig.codec))\n      throw new TypeError(\n        \"Video chunk metadata decoder configuration codec string for HEVC must be a valid HEVC codec string as specified in Section E.3 of ISO 14496-15.\"\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"vp8\")) {\n    if (t.decoderConfig.codec !== \"vp8\")\n      throw new TypeError('Video chunk metadata decoder configuration codec string for VP8 must be \"vp8\".');\n  } else if (t.decoderConfig.codec.startsWith(\"vp09\")) {\n    if (!Ka.test(t.decoderConfig.codec))\n      throw new TypeError(\n        'Video chunk metadata decoder configuration codec string for VP9 must be a valid VP9 codec string as specified in Section \"Codecs Parameter String\" of https://www.webmproject.org/vp9/mp4/.'\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"av01\") && !Ga.test(t.decoderConfig.codec))\n    throw new TypeError(\n      'Video chunk metadata decoder configuration codec string for AV1 must be a valid AV1 codec string as specified in Section \"Codecs Parameter String\" of https://aomediacodec.github.io/av1-isobmff/.'\n    );\n}, Ya = [\"mp4a\", \"mp3\", \"opus\", \"vorbis\", \"flac\", \"ulaw\", \"alaw\", \"pcm\"], zi = (t) => {\n  if (!t)\n    throw new TypeError(\"Audio chunk metadata must be provided.\");\n  if (typeof t != \"object\")\n    throw new TypeError(\"Audio chunk metadata must be an object.\");\n  if (!t.decoderConfig)\n    throw new TypeError(\"Audio chunk metadata must include a decoder configuration.\");\n  if (typeof t.decoderConfig != \"object\")\n    throw new TypeError(\"Audio chunk metadata decoder configuration must be an object.\");\n  if (typeof t.decoderConfig.codec != \"string\")\n    throw new TypeError(\"Audio chunk metadata decoder configuration must specify a codec string.\");\n  if (!Ya.some((e) => t.decoderConfig.codec.startsWith(e)))\n    throw new TypeError(\n      \"Audio chunk metadata decoder configuration codec string must be a valid audio codec string as specified in the WebCodecs Codec Registry.\"\n    );\n  if (!Number.isInteger(t.decoderConfig.sampleRate) || t.decoderConfig.sampleRate <= 0)\n    throw new TypeError(\n      \"Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).\"\n    );\n  if (!Number.isInteger(t.decoderConfig.numberOfChannels) || t.decoderConfig.numberOfChannels <= 0)\n    throw new TypeError(\n      \"Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).\"\n    );\n  if (t.decoderConfig.description !== void 0 && !Ut(t.decoderConfig.description))\n    throw new TypeError(\n      \"Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.\"\n    );\n  if (t.decoderConfig.codec.startsWith(\"mp4a\") && t.decoderConfig.codec !== \"mp4a.69\" && t.decoderConfig.codec !== \"mp4a.6B\" && t.decoderConfig.codec !== \"mp4a.6b\") {\n    if (![\"mp4a.40.2\", \"mp4a.40.02\", \"mp4a.40.5\", \"mp4a.40.05\", \"mp4a.40.29\", \"mp4a.67\"].includes(t.decoderConfig.codec))\n      throw new TypeError(\n        \"Audio chunk metadata decoder configuration codec string for AAC must be a valid AAC codec string as specified in https://www.w3.org/TR/webcodecs-aac-codec-registration/.\"\n      );\n    if (!t.decoderConfig.description)\n      throw new TypeError(\n        \"Audio chunk metadata decoder configuration for AAC must include a description, which is expected to be an AudioSpecificConfig as specified in ISO 14496-3.\"\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"mp3\") || t.decoderConfig.codec.startsWith(\"mp4a\")) {\n    if (t.decoderConfig.codec !== \"mp3\" && t.decoderConfig.codec !== \"mp4a.69\" && t.decoderConfig.codec !== \"mp4a.6B\" && t.decoderConfig.codec !== \"mp4a.6b\")\n      throw new TypeError(\n        'Audio chunk metadata decoder configuration codec string for MP3 must be \"mp3\", \"mp4a.69\" or \"mp4a.6B\".'\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"opus\")) {\n    if (t.decoderConfig.codec !== \"opus\")\n      throw new TypeError('Audio chunk metadata decoder configuration codec string for Opus must be \"opus\".');\n    if (t.decoderConfig.description && t.decoderConfig.description.byteLength < 18)\n      throw new TypeError(\n        \"Audio chunk metadata decoder configuration description, when specified, is expected to be an Identification Header as specified in Section 5.1 of RFC 7845.\"\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"vorbis\")) {\n    if (t.decoderConfig.codec !== \"vorbis\")\n      throw new TypeError('Audio chunk metadata decoder configuration codec string for Vorbis must be \"vorbis\".');\n    if (!t.decoderConfig.description)\n      throw new TypeError(\n        \"Audio chunk metadata decoder configuration for Vorbis must include a description, which is expected to adhere to the format described in https://www.w3.org/TR/webcodecs-vorbis-codec-registration/.\"\n      );\n  } else if (t.decoderConfig.codec.startsWith(\"flac\")) {\n    if (t.decoderConfig.codec !== \"flac\")\n      throw new TypeError('Audio chunk metadata decoder configuration codec string for FLAC must be \"flac\".');\n    if (!t.decoderConfig.description || t.decoderConfig.description.byteLength < 42)\n      throw new TypeError(\n        \"Audio chunk metadata decoder configuration for FLAC must include a description, which is expected to adhere to the format described in https://www.w3.org/TR/webcodecs-flac-codec-registration/.\"\n      );\n  } else if ((t.decoderConfig.codec.startsWith(\"pcm\") || t.decoderConfig.codec.startsWith(\"ulaw\") || t.decoderConfig.codec.startsWith(\"alaw\")) && !K.includes(t.decoderConfig.codec))\n    throw new TypeError(\n      `Audio chunk metadata decoder configuration codec string for PCM must be one of the supported PCM codecs (${K.join(\", \")}).`\n    );\n}, fr = (t) => {\n  if (!t)\n    throw new TypeError(\"Subtitle metadata must be provided.\");\n  if (typeof t != \"object\")\n    throw new TypeError(\"Subtitle metadata must be an object.\");\n  if (!t.config)\n    throw new TypeError(\"Subtitle metadata must include a config object.\");\n  if (typeof t.config != \"object\")\n    throw new TypeError(\"Subtitle metadata config must be an object.\");\n  if (typeof t.config.description != \"string\")\n    throw new TypeError(\"Subtitle metadata config description must be a string.\");\n}, as = (t) => {\n  if (re.includes(t))\n    return mr(t);\n  if (ne.includes(t))\n    return pr(t);\n  if (ve.includes(t))\n    return Ja(t);\n  throw new TypeError(`Unknown codec '${t}'.`);\n}, mr = async (t, { width: e = 1280, height: i = 720, bitrate: s = 1e6 } = {}) => {\n  if (!re.includes(t))\n    return !1;\n  if (!Number.isInteger(e) || e <= 0)\n    throw new TypeError(\"width must be a positive integer.\");\n  if (!Number.isInteger(i) || i <= 0)\n    throw new TypeError(\"height must be a positive integer.\");\n  if (!Number.isInteger(s) || s <= 0)\n    throw new TypeError(\"bitrate must be a positive integer.\");\n  if (It.length > 0) {\n    const a = {\n      codec: ci(\n        t,\n        e,\n        i,\n        s\n      ),\n      width: e,\n      height: i,\n      bitrate: s,\n      ...di(t)\n    };\n    if (It.some((n) => n.supports(t, a)))\n      return !0;\n  }\n  return typeof VideoEncoder > \"u\" ? !1 : (await VideoEncoder.isConfigSupported({\n    codec: ci(t, e, i, s),\n    width: e,\n    height: i,\n    bitrate: s,\n    ...di(t)\n  })).supported === !0;\n}, pr = async (t, { numberOfChannels: e = 2, sampleRate: i = 48e3, bitrate: s = 128e3 } = {}) => {\n  if (!ne.includes(t))\n    return !1;\n  if (!Number.isInteger(e) || e <= 0)\n    throw new TypeError(\"numberOfChannels must be a positive integer.\");\n  if (!Number.isInteger(i) || i <= 0)\n    throw new TypeError(\"sampleRate must be a positive integer.\");\n  if (!Number.isInteger(s) || s <= 0)\n    throw new TypeError(\"bitrate must be a positive integer.\");\n  if (Et.length > 0) {\n    const a = {\n      codec: li(\n        t,\n        e,\n        i\n      ),\n      numberOfChannels: e,\n      sampleRate: i,\n      bitrate: s,\n      ...hi(t)\n    };\n    if (Et.some((n) => n.supports(t, a)))\n      return !0;\n  }\n  return K.includes(t) ? !0 : typeof AudioEncoder > \"u\" ? !1 : (await AudioEncoder.isConfigSupported({\n    codec: li(t, e, i),\n    numberOfChannels: e,\n    sampleRate: i,\n    bitrate: s,\n    ...hi(t)\n  })).supported === !0;\n}, Ja = async (t) => !!ve.includes(t), Za = async (t = re, e) => {\n  const i = await Promise.all(t.map((s) => mr(s, e)));\n  return t.filter((s, r) => i[r]);\n}, en = async (t = ne, e) => {\n  const i = await Promise.all(t.map((s) => pr(s, e)));\n  return t.filter((s, r) => i[r]);\n}, Pt = /<(?:(\\d{2}):)?(\\d{2}):(\\d{2}).(\\d{3})>/g, tn = /(?:(\\d{2}):)?(\\d{2}):(\\d{2}).(\\d{3})/, sn = (t) => {\n  const e = tn.exec(t);\n  if (!e) throw new Error(\"Expected match.\");\n  return 60 * 60 * 1e3 * Number(e[1] || \"0\") + 60 * 1e3 * Number(e[2]) + 1e3 * Number(e[3]) + Number(e[4]);\n}, gr = (t) => {\n  const e = Math.floor(t / 36e5), i = Math.floor(t % (60 * 60 * 1e3) / (60 * 1e3)), s = Math.floor(t % (60 * 1e3) / 1e3), r = t % 1e3;\n  return e.toString().padStart(2, \"0\") + \":\" + i.toString().padStart(2, \"0\") + \":\" + s.toString().padStart(2, \"0\") + \".\" + r.toString().padStart(3, \"0\");\n}, Ui = (t) => {\n  const e = [];\n  let i = 0;\n  for (; i < t.length; ) {\n    let s = -1, r = 0;\n    for (let a = i; a < t.length - 3; a++) {\n      if (t[a] === 0 && t[a + 1] === 0 && t[a + 2] === 1) {\n        s = a, r = 3;\n        break;\n      }\n      if (a < t.length - 4 && t[a] === 0 && t[a + 1] === 0 && t[a + 2] === 0 && t[a + 3] === 1) {\n        s = a, r = 4;\n        break;\n      }\n    }\n    if (s === -1)\n      break;\n    if (i > 0 && s > i) {\n      const a = t.subarray(i, s);\n      a.length > 0 && e.push(a);\n    }\n    i = s + r;\n  }\n  if (i < t.length) {\n    const s = t.subarray(i);\n    s.length > 0 && e.push(s);\n  }\n  return e;\n}, ui = (t) => {\n  const e = [], i = t.length;\n  for (let s = 0; s < i; s++)\n    s + 2 < i && t[s] === 0 && t[s + 1] === 0 && t[s + 2] === 3 ? (e.push(0, 0), s += 2) : e.push(t[s]);\n  return new Uint8Array(e);\n}, rn = (t) => {\n  const i = Ui(t);\n  if (i.length === 0)\n    return null;\n  let s = 0;\n  for (const o of i)\n    s += 4 + o.byteLength;\n  const r = new Uint8Array(s), a = new DataView(r.buffer);\n  let n = 0;\n  for (const o of i) {\n    const c = o.byteLength;\n    a.setUint32(n, c, !1), n += 4, r.set(o, n), n += o.byteLength;\n  }\n  return r;\n}, Qt = (t) => t[0] & 31, wr = (t) => {\n  try {\n    const e = Ui(t), i = e.filter((u) => Qt(u) === 7), s = e.filter((u) => Qt(u) === 8), r = e.filter((u) => Qt(u) === 13);\n    if (i.length === 0 || s.length === 0)\n      return null;\n    const a = i[0], n = new Se(ui(a));\n    if (n.skipBits(1), n.skipBits(2), n.readBits(5) !== 7)\n      return console.error(\"Invalid SPS NAL unit type\"), null;\n    const c = n.readAlignedByte(), l = n.readAlignedByte(), d = n.readAlignedByte(), h = {\n      configurationVersion: 1,\n      avcProfileIndication: c,\n      profileCompatibility: l,\n      avcLevelIndication: d,\n      lengthSizeMinusOne: 3,\n      // Typically 4 bytes for length field\n      sequenceParameterSets: i,\n      pictureParameterSets: s,\n      chromaFormat: null,\n      bitDepthLumaMinus8: null,\n      bitDepthChromaMinus8: null,\n      sequenceParameterSetExt: null\n    };\n    if (c === 100 || c === 110 || c === 122 || c === 144) {\n      I(n);\n      const u = I(n);\n      u === 3 && n.skipBits(1);\n      const m = I(n), p = I(n);\n      h.chromaFormat = u, h.bitDepthLumaMinus8 = m, h.bitDepthChromaMinus8 = p, h.sequenceParameterSetExt = r;\n    }\n    return h;\n  } catch (e) {\n    return console.error(\"Error building AVC Decoder Configuration Record:\", e), null;\n  }\n}, an = (t) => {\n  const e = [];\n  e.push(t.configurationVersion), e.push(t.avcProfileIndication), e.push(t.profileCompatibility), e.push(t.avcLevelIndication), e.push(252 | t.lengthSizeMinusOne & 3), e.push(224 | t.sequenceParameterSets.length & 31);\n  for (const i of t.sequenceParameterSets) {\n    const s = i.byteLength;\n    e.push(s >> 8), e.push(s & 255);\n    for (let r = 0; r < s; r++)\n      e.push(i[r]);\n  }\n  e.push(t.pictureParameterSets.length);\n  for (const i of t.pictureParameterSets) {\n    const s = i.byteLength;\n    e.push(s >> 8), e.push(s & 255);\n    for (let r = 0; r < s; r++)\n      e.push(i[r]);\n  }\n  if (t.avcProfileIndication === 100 || t.avcProfileIndication === 110 || t.avcProfileIndication === 122 || t.avcProfileIndication === 144) {\n    f(t.chromaFormat !== null), f(t.bitDepthLumaMinus8 !== null), f(t.bitDepthChromaMinus8 !== null), f(t.sequenceParameterSetExt !== null), e.push(252 | t.chromaFormat & 3), e.push(248 | t.bitDepthLumaMinus8 & 7), e.push(248 | t.bitDepthChromaMinus8 & 7), e.push(t.sequenceParameterSetExt.length);\n    for (const i of t.sequenceParameterSetExt) {\n      const s = i.byteLength;\n      e.push(s >> 8), e.push(s & 255);\n      for (let r = 0; r < s; r++)\n        e.push(i[r]);\n    }\n  }\n  return new Uint8Array(e);\n}, ns = 32, os = 33, cs = 34, nn = 39, on = 40, Ue = (t) => t[0] >> 1 & 63, yr = (t) => {\n  try {\n    const e = Ui(t), i = e.filter((M) => Ue(M) === ns), s = e.filter((M) => Ue(M) === os), r = e.filter((M) => Ue(M) === cs), a = e.filter(\n      (M) => Ue(M) === nn || Ue(M) === on\n    );\n    if (s.length === 0 || r.length === 0) return null;\n    const n = s[0], o = new Se(ui(n));\n    o.skipBits(16), o.readBits(4);\n    const c = o.readBits(3), l = o.readBits(1), {\n      general_profile_space: d,\n      general_tier_flag: h,\n      general_profile_idc: u,\n      general_profile_compatibility_flags: m,\n      general_constraint_indicator_flags: p,\n      general_level_idc: g\n    } = cn(o, c);\n    I(o);\n    const w = I(o);\n    w === 3 && o.skipBits(1), I(o), I(o), o.readBits(1) && (I(o), I(o), I(o), I(o));\n    const b = I(o), x = I(o);\n    I(o);\n    const k = o.readBits(1) ? 0 : c;\n    for (let M = k; M <= c; M++)\n      I(o), I(o), I(o);\n    I(o), I(o), I(o), I(o), I(o), I(o), o.readBits(1) && o.readBits(1) && ln(o), o.skipBits(1), o.skipBits(1), o.readBits(1) && (o.skipBits(4), o.skipBits(4), I(o), I(o), o.skipBits(1));\n    const y = I(o);\n    if (dn(o, y), o.readBits(1)) {\n      const M = I(o);\n      for (let A = 0; A < M; A++)\n        I(o), o.skipBits(1);\n    }\n    o.skipBits(1), o.skipBits(1);\n    let T = 0;\n    o.readBits(1) && (T = un(o, c));\n    let P = 0;\n    if (r.length > 0) {\n      const M = r[0], A = new Se(ui(M));\n      A.skipBits(16), I(A), I(A), A.skipBits(1), A.skipBits(1), A.skipBits(3), A.skipBits(1), A.skipBits(1), I(A), I(A), ot(A), A.skipBits(1), A.skipBits(1), A.readBits(1) && I(A), ot(A), ot(A), A.skipBits(1), A.skipBits(1), A.skipBits(1), A.skipBits(1);\n      const j = A.readBits(1), Ie = A.readBits(1);\n      !j && !Ie ? P = 0 : j && !Ie ? P = 2 : !j && Ie ? P = 3 : P = 0;\n    }\n    const F = [\n      ...i.length ? [\n        {\n          arrayCompleteness: 1,\n          nalUnitType: ns,\n          nalUnits: i\n        }\n      ] : [],\n      ...s.length ? [\n        {\n          arrayCompleteness: 1,\n          nalUnitType: os,\n          nalUnits: s\n        }\n      ] : [],\n      ...r.length ? [\n        {\n          arrayCompleteness: 1,\n          nalUnitType: cs,\n          nalUnits: r\n        }\n      ] : [],\n      ...a.length ? [\n        {\n          arrayCompleteness: 1,\n          nalUnitType: Ue(a[0]),\n          nalUnits: a\n        }\n      ] : []\n    ];\n    return {\n      configurationVersion: 1,\n      generalProfileSpace: d,\n      generalTierFlag: h,\n      generalProfileIdc: u,\n      generalProfileCompatibilityFlags: m,\n      generalConstraintIndicatorFlags: p,\n      generalLevelIdc: g,\n      minSpatialSegmentationIdc: T,\n      parallelismType: P,\n      chromaFormatIdc: w,\n      bitDepthLumaMinus8: b,\n      bitDepthChromaMinus8: x,\n      avgFrameRate: 0,\n      constantFrameRate: 0,\n      numTemporalLayers: c + 1,\n      temporalIdNested: l,\n      lengthSizeMinusOne: 3,\n      arrays: F\n    };\n  } catch (e) {\n    return console.error(\"Error building HEVC Decoder Configuration Record:\", e), null;\n  }\n}, cn = (t, e) => {\n  const i = t.readBits(2), s = t.readBits(1), r = t.readBits(5);\n  let a = 0;\n  for (let d = 0; d < 32; d++)\n    a = a << 1 | t.readBits(1);\n  const n = new Uint8Array(6);\n  for (let d = 0; d < 6; d++)\n    n[d] = t.readBits(8);\n  const o = t.readBits(8), c = [], l = [];\n  for (let d = 0; d < e; d++)\n    c.push(t.readBits(1)), l.push(t.readBits(1));\n  if (e > 0)\n    for (let d = e; d < 8; d++)\n      t.skipBits(2);\n  for (let d = 0; d < e; d++)\n    c[d] && t.skipBits(88), l[d] && t.skipBits(8);\n  return {\n    general_profile_space: i,\n    general_tier_flag: s,\n    general_profile_idc: r,\n    general_profile_compatibility_flags: a,\n    general_constraint_indicator_flags: n,\n    general_level_idc: o\n  };\n}, ln = (t) => {\n  for (let e = 0; e < 4; e++)\n    for (let i = 0; i < (e === 3 ? 2 : 6); i++)\n      if (!t.readBits(1))\n        I(t);\n      else {\n        const r = Math.min(64, 1 << 4 + (e << 1));\n        e > 1 && ot(t);\n        for (let a = 0; a < r; a++)\n          ot(t);\n      }\n}, dn = (t, e) => {\n  const i = [];\n  for (let s = 0; s < e; s++)\n    i[s] = hn(t, s, e, i);\n}, hn = (t, e, i, s) => {\n  let r = 0, a = 0, n = 0;\n  if (e !== 0 && (a = t.readBits(1)), a) {\n    if (e === i) {\n      const c = I(t);\n      n = e - (c + 1);\n    } else\n      n = e - 1;\n    t.readBits(1), I(t);\n    const o = s[n] ?? 0;\n    for (let c = 0; c <= o; c++)\n      t.readBits(1) || t.readBits(1);\n    r = s[n];\n  } else {\n    const o = I(t), c = I(t);\n    for (let l = 0; l < o; l++)\n      I(t), t.readBits(1);\n    for (let l = 0; l < c; l++)\n      I(t), t.readBits(1);\n    r = o + c;\n  }\n  return r;\n}, un = (t, e) => {\n  if (t.readBits(1) && t.readBits(8) === 255 && (t.readBits(16), t.readBits(16)), t.readBits(1) && t.readBits(1), t.readBits(1) && (t.readBits(3), t.readBits(1), t.readBits(1) && (t.readBits(8), t.readBits(8), t.readBits(8))), t.readBits(1) && (I(t), I(t)), t.readBits(1), t.readBits(1), t.readBits(1), t.readBits(1) && (I(t), I(t), I(t), I(t)), t.readBits(1) && (t.readBits(32), t.readBits(32), t.readBits(1) && I(t), t.readBits(1) && fn(t, !0, e)), t.readBits(1)) {\n    t.readBits(1), t.readBits(1), t.readBits(1);\n    const i = I(t);\n    return I(t), I(t), I(t), I(t), i;\n  }\n  return 0;\n}, fn = (t, e, i) => {\n  let s = !1, r = !1, a = !1;\n  s = t.readBits(1) === 1, r = t.readBits(1) === 1, (s || r) && (a = t.readBits(1) === 1, a && (t.readBits(8), t.readBits(5), t.readBits(1), t.readBits(5)), t.readBits(4), t.readBits(4), a && t.readBits(4), t.readBits(5), t.readBits(5), t.readBits(5));\n  for (let n = 0; n <= i; n++) {\n    const o = t.readBits(1) === 1;\n    let c = !0;\n    o || (c = t.readBits(1) === 1);\n    let l = !1;\n    c ? I(t) : l = t.readBits(1) === 1;\n    let d = 1;\n    l || (d = I(t) + 1), s && ls(t, d, a), r && ls(t, d, a);\n  }\n}, ls = (t, e, i) => {\n  for (let s = 0; s < e; s++)\n    I(t), I(t), i && (I(t), I(t)), t.readBits(1);\n}, mn = (t) => {\n  const e = [];\n  e.push(t.configurationVersion), e.push(\n    (t.generalProfileSpace & 3) << 6 | (t.generalTierFlag & 1) << 5 | t.generalProfileIdc & 31\n  ), e.push(t.generalProfileCompatibilityFlags >>> 24 & 255), e.push(t.generalProfileCompatibilityFlags >>> 16 & 255), e.push(t.generalProfileCompatibilityFlags >>> 8 & 255), e.push(t.generalProfileCompatibilityFlags & 255), e.push(...t.generalConstraintIndicatorFlags), e.push(t.generalLevelIdc & 255), e.push(240 | t.minSpatialSegmentationIdc >> 8 & 15), e.push(t.minSpatialSegmentationIdc & 255), e.push(252 | t.parallelismType & 3), e.push(252 | t.chromaFormatIdc & 3), e.push(248 | t.bitDepthLumaMinus8 & 7), e.push(248 | t.bitDepthChromaMinus8 & 7), e.push(t.avgFrameRate >> 8 & 255), e.push(t.avgFrameRate & 255), e.push(\n    (t.constantFrameRate & 3) << 6 | (t.numTemporalLayers & 7) << 3 | (t.temporalIdNested & 1) << 2 | t.lengthSizeMinusOne & 3\n  ), e.push(t.arrays.length & 255);\n  for (const i of t.arrays) {\n    e.push(\n      (i.arrayCompleteness & 1) << 7 | 0 | i.nalUnitType & 63\n    ), e.push(i.nalUnits.length >> 8 & 255), e.push(i.nalUnits.length & 255);\n    for (const s of i.nalUnits) {\n      e.push(s.length >> 8 & 255), e.push(s.length & 255);\n      for (let r = 0; r < s.length; r++)\n        e.push(s[r]);\n    }\n  }\n  return new Uint8Array(e);\n}, br = (t) => {\n  const e = t[t.length - 1];\n  if (e && (e & 224) === 192) {\n    const P = ((e & 24) >> 3) + 1, z = 2 + ((e & 7) + 1) * P;\n    if (t[t.length - z] !== e)\n      return null;\n    let M = 0;\n    const A = t.length - z + 1;\n    for (let j = 0; j < P; j++) {\n      if (!t[A + j]) return null;\n      M |= t[A + j] << 8 * j;\n    }\n    t = t.subarray(0, M);\n  }\n  const i = new Se(t);\n  if (i.readBits(2) !== 2)\n    return null;\n  const r = i.readBits(1), n = (i.readBits(1) << 1) + r;\n  if (n === 3 && i.skipBits(1), i.readBits(1) === 1 || i.readBits(1) !== 0 || (i.skipBits(2), i.readBits(24) !== 4817730))\n    return null;\n  let d = 8;\n  n >= 2 && (d = i.readBits(1) ? 12 : 10);\n  const h = i.readBits(3);\n  let u = 0, m = 0;\n  if (h !== 7)\n    if (m = i.readBits(1), n === 1 || n === 3) {\n      const F = i.readBits(1), z = i.readBits(1);\n      u = !F && !z ? 3 : F && !z ? 2 : 1, i.skipBits(1);\n    } else\n      u = 1;\n  else\n    u = 3, m = 1;\n  const p = i.readBits(16), g = i.readBits(16), w = p + 1, b = g + 1, x = w * b;\n  let S = H(ke).level;\n  for (const P of ke)\n    if (x <= P.maxPictureSize) {\n      S = P.level;\n      break;\n    }\n  return {\n    profile: n,\n    level: S,\n    bitDepth: d,\n    chromaSubsampling: u,\n    videoFullRangeFlag: m,\n    colourPrimaries: h === 2 ? 1 : h === 1 ? 6 : 2,\n    transferCharacteristics: h === 2 ? 1 : h === 1 ? 6 : 2,\n    matrixCoefficients: h === 7 ? 0 : h === 2 ? 1 : h === 1 ? 6 : 2\n  };\n}, kr = (t) => {\n  const e = new Se(t), i = () => {\n    let s = 0;\n    for (let r = 0; r < 8; r++) {\n      const a = e.readAlignedByte();\n      if (a === void 0) return 0;\n      if (s |= (a & 127) << r * 7, !(a & 128))\n        break;\n      if (r === 7 && a & 128)\n        return null;\n    }\n    return s >= 2 ** 32 - 1 ? null : s;\n  };\n  for (; e.getBitsLeft() >= 8; ) {\n    const s = e.readBits(8), r = s >> 3 & 15, a = s >> 2 & 1, n = s >> 1 & 1;\n    a && e.skipBits(8);\n    let o;\n    if (n) {\n      const c = i();\n      if (c === null) return null;\n      o = c;\n    } else\n      o = Math.floor(e.getBitsLeft() / 8);\n    if (r === 1) {\n      const c = e.readBits(3);\n      e.readBits(1);\n      const l = e.readBits(1);\n      let d = 0, h = 0, u = 0;\n      if (l)\n        d = e.readBits(5);\n      else {\n        if (e.readBits(1) && (e.skipBits(32), e.skipBits(32), e.readBits(1)))\n          return null;\n        const k = e.readBits(1);\n        k && (u = e.readBits(5), e.skipBits(32), e.skipBits(5), e.skipBits(5));\n        const y = e.readBits(5);\n        for (let T = 0; T <= y; T++) {\n          e.skipBits(12);\n          const P = e.readBits(5);\n          if (T === 0 && (d = P), P > 7) {\n            const z = e.readBits(1);\n            T === 0 && (h = z);\n          }\n          if (k && e.readBits(1)) {\n            const M = u + 1;\n            e.skipBits(M), e.skipBits(M), e.skipBits(1);\n          }\n          e.readBits(1) && e.skipBits(4);\n        }\n      }\n      const m = e.readBits(1);\n      let p = 8;\n      c === 2 && m ? p = e.readBits(1) ? 12 : 10 : c <= 2 && (p = m ? 10 : 8);\n      let g = 0;\n      c !== 1 && (g = e.readBits(1));\n      let w = 1, b = 1, x = 0;\n      return g || (c === 0 ? (w = 1, b = 1) : c === 1 ? (w = 0, b = 0) : p === 12 && (w = e.readBits(1), w && (b = e.readBits(1))), w && b && (x = e.readBits(2))), {\n        profile: c,\n        level: d,\n        tier: h,\n        bitDepth: p,\n        monochrome: g,\n        chromaSubsamplingX: w,\n        chromaSubsamplingY: b,\n        chromaSamplePosition: x\n      };\n    }\n    e.skipBits(o * 8);\n  }\n  return null;\n}, Vt = (t) => {\n  const e = Re(t), i = e.getUint8(9), s = e.getUint16(10, !0), r = e.getUint32(12, !0), a = e.getInt16(16, !0), n = e.getUint8(18);\n  let o = null;\n  return n && (o = t.subarray(19, 21 + i)), {\n    outputChannelCount: i,\n    preSkip: s,\n    inputSampleRate: r,\n    outputGain: a,\n    channelMappingFamily: n,\n    channelMappingTable: o\n  };\n}, pn = [\n  480,\n  960,\n  1920,\n  2880,\n  480,\n  960,\n  1920,\n  2880,\n  480,\n  960,\n  1920,\n  2880,\n  480,\n  960,\n  480,\n  960,\n  120,\n  240,\n  480,\n  960,\n  120,\n  240,\n  480,\n  960,\n  120,\n  240,\n  480,\n  960,\n  120,\n  240,\n  480,\n  960\n], gn = (t) => {\n  const e = t[0] >> 3;\n  return {\n    durationInSamples: pn[e]\n  };\n}, Sr = (t) => {\n  if (t.length < 7)\n    throw new Error(\"Setup header is too short.\");\n  if (t[0] !== 5)\n    throw new Error(\"Wrong packet type in Setup header.\");\n  if (String.fromCharCode(...t.slice(1, 7)) !== \"vorbis\")\n    throw new Error(\"Invalid packet signature in Setup header.\");\n  const i = t.length, s = new Uint8Array(i);\n  for (let h = 0; h < i; h++)\n    s[h] = t[i - 1 - h];\n  const r = new Se(s);\n  let a = 0;\n  for (; r.getBitsLeft() > 97; )\n    if (r.readBits(1) === 1) {\n      a = r.pos;\n      break;\n    }\n  if (a === 0)\n    throw new Error(\"Invalid Setup header: framing bit not found.\");\n  let n = 0, o = !1, c = 0;\n  for (; r.getBitsLeft() >= 97; ) {\n    const h = r.pos, u = r.readBits(8), m = r.readBits(16), p = r.readBits(16);\n    if (u > 63 || m !== 0 || p !== 0) {\n      r.pos = h;\n      break;\n    }\n    if (r.skipBits(1), n++, n > 64)\n      break;\n    r.clone().readBits(6) + 1 === n && (o = !0, c = n);\n  }\n  if (!o)\n    throw new Error(\"Invalid Setup header: mode header not found.\");\n  if (c > 63)\n    throw new Error(`Unsupported mode count: ${c}.`);\n  const l = c;\n  r.pos = 0, r.skipBits(a);\n  const d = Array(l).fill(0);\n  for (let h = l - 1; h >= 0; h--)\n    r.skipBits(40), d[h] = r.readBits(1);\n  return { modeBlockflags: d };\n}, ds = class {\n  constructor(t) {\n    this.writer = t, this.helper = new Uint8Array(8), this.helperView = new DataView(this.helper.buffer), this.offsets = /* @__PURE__ */ new WeakMap();\n  }\n  writeU32(t) {\n    this.helperView.setUint32(0, t, !1), this.writer.write(this.helper.subarray(0, 4));\n  }\n  writeU64(t) {\n    this.helperView.setUint32(0, Math.floor(t / 2 ** 32), !1), this.helperView.setUint32(4, t, !1), this.writer.write(this.helper.subarray(0, 8));\n  }\n  writeAscii(t) {\n    for (let e = 0; e < t.length; e++)\n      this.helperView.setUint8(e % 8, t.charCodeAt(e)), e % 8 === 7 && this.writer.write(this.helper);\n    t.length % 8 !== 0 && this.writer.write(this.helper.subarray(0, t.length % 8));\n  }\n  writeBox(t) {\n    if (this.offsets.set(t, this.writer.getPos()), t.contents && !t.children)\n      this.writeBoxHeader(t, t.size ?? t.contents.byteLength + 8), this.writer.write(t.contents);\n    else {\n      const e = this.writer.getPos();\n      if (this.writeBoxHeader(t, 0), t.contents && this.writer.write(t.contents), t.children)\n        for (const r of t.children) r && this.writeBox(r);\n      const i = this.writer.getPos(), s = t.size ?? i - e;\n      this.writer.seek(e), this.writeBoxHeader(t, s), this.writer.seek(i);\n    }\n  }\n  writeBoxHeader(t, e) {\n    this.writeU32(t.largeSize ? 1 : e), this.writeAscii(t.type), t.largeSize && this.writeU64(e);\n  }\n  measureBoxHeader(t) {\n    return 8 + (t.largeSize ? 8 : 0);\n  }\n  patchBox(t) {\n    const e = this.offsets.get(t);\n    f(e !== void 0);\n    const i = this.writer.getPos();\n    this.writer.seek(e), this.writeBox(t), this.writer.seek(i);\n  }\n  measureBox(t) {\n    if (t.contents && !t.children)\n      return this.measureBoxHeader(t) + t.contents.byteLength;\n    {\n      let e = this.measureBoxHeader(t);\n      if (t.contents && (e += t.contents.byteLength), t.children)\n        for (const i of t.children) i && (e += this.measureBox(i));\n      return e;\n    }\n  }\n}, D = new Uint8Array(8), ce = new DataView(D.buffer), W = (t) => [(t % 256 + 256) % 256], R = (t) => (ce.setUint16(0, t, !1), [D[0], D[1]]), vr = (t) => (ce.setInt16(0, t, !1), [D[0], D[1]]), Tr = (t) => (ce.setUint32(0, t, !1), [D[1], D[2], D[3]]), C = (t) => (ce.setUint32(0, t, !1), [D[0], D[1], D[2], D[3]]), ye = (t) => (ce.setInt32(0, t, !1), [D[0], D[1], D[2], D[3]]), Pe = (t) => (ce.setUint32(0, Math.floor(t / 2 ** 32), !1), ce.setUint32(4, t, !1), [D[0], D[1], D[2], D[3], D[4], D[5], D[6], D[7]]), xr = (t) => (ce.setInt16(0, 2 ** 8 * t, !1), [D[0], D[1]]), de = (t) => (ce.setInt32(0, 2 ** 16 * t, !1), [D[0], D[1], D[2], D[3]]), Xt = (t) => (ce.setInt32(0, 2 ** 30 * t, !1), [D[0], D[1], D[2], D[3]]), Kt = (t, e) => {\n  const i = [];\n  let s = t;\n  do {\n    let r = s & 127;\n    s >>= 7, i.length > 0 && (r |= 128), i.push(r);\n  } while (s > 0 || e);\n  return i.reverse();\n}, Y = (t, e = !1) => {\n  const i = Array(t.length).fill(null).map((s, r) => t.charCodeAt(r));\n  return e && i.push(0), i;\n}, Di = (t) => {\n  let e = null;\n  for (const i of t)\n    (!e || i.timestamp > e.timestamp) && (e = i);\n  return e;\n}, Cr = (t) => {\n  const e = t * (Math.PI / 180), i = Math.round(Math.cos(e)), s = Math.round(Math.sin(e));\n  return [\n    i,\n    s,\n    0,\n    -s,\n    i,\n    0,\n    0,\n    0,\n    1\n  ];\n}, _r = Cr(0), Ir = (t) => [\n  de(t[0]),\n  de(t[1]),\n  Xt(t[2]),\n  de(t[3]),\n  de(t[4]),\n  Xt(t[5]),\n  de(t[6]),\n  de(t[7]),\n  Xt(t[8])\n], U = (t, e, i) => ({\n  type: t,\n  contents: e && new Uint8Array(e.flat(10)),\n  children: i\n}), V = (t, e, i, s, r) => U(\n  t,\n  [W(e), Tr(i), s ?? []],\n  r\n), wn = (t) => t.isMov ? U(\"ftyp\", [\n  Y(\"qt  \"),\n  // Major brand\n  C(512),\n  // Minor version\n  // Compatible brands\n  Y(\"qt  \")\n]) : t.fragmented ? U(\"ftyp\", [\n  Y(\"iso5\"),\n  // Major brand\n  C(512),\n  // Minor version\n  // Compatible brands\n  Y(\"iso5\"),\n  Y(\"iso6\"),\n  Y(\"mp41\")\n]) : U(\"ftyp\", [\n  Y(\"isom\"),\n  // Major brand\n  C(512),\n  // Minor version\n  // Compatible brands\n  Y(\"isom\"),\n  t.holdsAvc ? Y(\"avc1\") : [],\n  Y(\"mp41\")\n]), Gt = (t) => ({ type: \"mdat\", largeSize: t }), yt = (t, e, i = !1) => U(\"moov\", void 0, [\n  yn(e, t),\n  ...t.map((s) => bn(s, e)),\n  i ? to(t) : null\n]), yn = (t, e) => {\n  const i = Q(Math.max(\n    0,\n    ...e.filter((n) => n.samples.length > 0).map((n) => {\n      const o = Di(n.samples);\n      return o.timestamp + o.duration;\n    })\n  ), mi), s = Math.max(0, ...e.map((n) => n.track.id)) + 1, r = !Qe(t) || !Qe(i), a = r ? Pe : C;\n  return V(\"mvhd\", +r, 0, [\n    a(t),\n    // Creation time\n    a(t),\n    // Modification time\n    C(mi),\n    // Timescale\n    a(i),\n    // Duration\n    de(1),\n    // Preferred rate\n    xr(1),\n    // Preferred volume\n    Array(10).fill(0),\n    // Reserved\n    Ir(_r),\n    // Matrix\n    Array(24).fill(0),\n    // Pre-defined\n    C(s)\n    // Next track ID\n  ]);\n}, bn = (t, e) => U(\"trak\", void 0, [\n  kn(t, e),\n  Sn(t, e)\n]), kn = (t, e) => {\n  const i = Di(t.samples), s = Q(\n    i ? i.timestamp + i.duration : 0,\n    mi\n  ), r = !Qe(e) || !Qe(s), a = r ? Pe : C;\n  let n;\n  if (t.type === \"video\") {\n    const o = t.track.metadata.rotation;\n    n = Cr(o ?? 0);\n  } else\n    n = _r;\n  return V(\"tkhd\", +r, 3, [\n    a(e),\n    // Creation time\n    a(e),\n    // Modification time\n    C(t.track.id),\n    // Track ID\n    C(0),\n    // Reserved\n    a(s),\n    // Duration\n    Array(8).fill(0),\n    // Reserved\n    R(0),\n    // Layer\n    R(t.track.id),\n    // Alternate group\n    xr(t.type === \"audio\" ? 1 : 0),\n    // Volume\n    R(0),\n    // Reserved\n    Ir(n),\n    // Matrix\n    de(t.type === \"video\" ? t.info.width : 0),\n    // Track width\n    de(t.type === \"video\" ? t.info.height : 0)\n    // Track height\n  ]);\n}, Sn = (t, e) => U(\"mdia\", void 0, [\n  vn(t, e),\n  Cn(t),\n  _n(t)\n]), vn = (t, e) => {\n  const i = Di(t.samples), s = Q(\n    i ? i.timestamp + i.duration : 0,\n    t.timescale\n  ), r = !Qe(e) || !Qe(s), a = r ? Pe : C;\n  let n = 0;\n  for (const o of t.track.metadata.languageCode ?? fe)\n    n <<= 5, n += o.charCodeAt(0) - 96;\n  return V(\"mdhd\", +r, 0, [\n    a(e),\n    // Creation time\n    a(e),\n    // Modification time\n    C(t.timescale),\n    // Timescale\n    a(s),\n    // Duration\n    R(n),\n    // Language\n    R(0)\n    // Quality\n  ]);\n}, Tn = {\n  video: \"vide\",\n  audio: \"soun\",\n  subtitle: \"text\"\n}, xn = {\n  video: \"VideoHandler\",\n  audio: \"SoundHandler\",\n  subtitle: \"TextHandler\"\n}, Cn = (t) => V(\"hdlr\", 0, 0, [\n  Y(\"mhlr\"),\n  // Component type\n  Y(Tn[t.type]),\n  // Component subtype\n  C(0),\n  // Component manufacturer\n  C(0),\n  // Component flags\n  C(0),\n  // Component flags mask\n  Y(xn[t.type], !0)\n  // Component name\n]), _n = (t) => U(\"minf\", void 0, [\n  Fn[t.type](),\n  Rn(),\n  Mn(t)\n]), In = () => V(\"vmhd\", 0, 1, [\n  R(0),\n  // Graphics mode\n  R(0),\n  // Opcolor R\n  R(0),\n  // Opcolor G\n  R(0)\n  // Opcolor B\n]), En = () => V(\"smhd\", 0, 0, [\n  R(0),\n  // Balance\n  R(0)\n  // Reserved\n]), Pn = () => V(\"nmhd\", 0, 0), Fn = {\n  video: In,\n  audio: En,\n  subtitle: Pn\n}, Rn = () => U(\"dinf\", void 0, [\n  Bn()\n]), Bn = () => V(\"dref\", 0, 0, [\n  C(1)\n  // Entry count\n], [\n  On()\n]), On = () => V(\"url \", 0, 1), Mn = (t) => {\n  const e = t.compositionTimeOffsetTable.length > 1 || t.compositionTimeOffsetTable.some((i) => i.sampleCompositionTimeOffset !== 0);\n  return U(\"stbl\", void 0, [\n    An(t),\n    Xn(t),\n    e ? Zn(t) : null,\n    e ? eo(t) : null,\n    Gn(t),\n    Yn(t),\n    Jn(t),\n    Kn(t)\n  ]);\n}, An = (t) => {\n  let e;\n  if (t.type === \"video\")\n    e = zn(\n      po[t.track.source._codec],\n      t\n    );\n  else if (t.type === \"audio\") {\n    const i = Pr[t.track.source._codec];\n    f(i), e = Ln(\n      i,\n      t\n    );\n  } else t.type === \"subtitle\" && (e = qn(\n    yo[t.track.source._codec],\n    t\n  ));\n  return f(e), V(\"stsd\", 0, 0, [\n    C(1)\n    // Entry count\n  ], [\n    e\n  ]);\n}, zn = (t, e) => U(t, [\n  Array(6).fill(0),\n  // Reserved\n  R(1),\n  // Data reference index\n  R(0),\n  // Pre-defined\n  R(0),\n  // Reserved\n  Array(12).fill(0),\n  // Pre-defined\n  R(e.info.width),\n  // Width\n  R(e.info.height),\n  // Height\n  C(4718592),\n  // Horizontal resolution\n  C(4718592),\n  // Vertical resolution\n  C(0),\n  // Reserved\n  R(1),\n  // Frame count\n  Array(32).fill(0),\n  // Compressor name\n  R(24),\n  // Depth\n  vr(65535)\n  // Pre-defined\n], [\n  go[e.track.source._codec](e),\n  Js(e.info.decoderConfig.colorSpace) ? Un(e) : null\n]), Un = (t) => U(\"colr\", [\n  Y(\"nclx\"),\n  // Colour type\n  R(Ke[t.info.decoderConfig.colorSpace.primaries]),\n  // Colour primaries\n  R(Ge[t.info.decoderConfig.colorSpace.transfer]),\n  // Transfer characteristics\n  R(Ye[t.info.decoderConfig.colorSpace.matrix]),\n  // Matrix coefficients\n  W((t.info.decoderConfig.colorSpace.fullRange ? 1 : 0) << 7)\n  // Full range flag\n]), Dn = (t) => t.info.decoderConfig && U(\"avcC\", [\n  // For AVC, description is an AVCDecoderConfigurationRecord, so nothing else to do here\n  ...te(t.info.decoderConfig.description)\n]), Nn = (t) => t.info.decoderConfig && U(\"hvcC\", [\n  // For HEVC, description is an HEVCDecoderConfigurationRecord, so nothing else to do here\n  ...te(t.info.decoderConfig.description)\n]), hs = (t) => {\n  if (!t.info.decoderConfig)\n    return null;\n  const e = t.info.decoderConfig, i = e.codec.split(\".\"), s = Number(i[1]), r = Number(i[2]), a = Number(i[3]), n = i[4] ? Number(i[4]) : 1, o = i[8] ? Number(i[8]) : Number(e.colorSpace?.fullRange ?? 0), c = (a << 4) + (n << 1) + o, l = i[5] ? Number(i[5]) : e.colorSpace?.primaries ? Ke[e.colorSpace.primaries] : 2, d = i[6] ? Number(i[6]) : e.colorSpace?.transfer ? Ge[e.colorSpace.transfer] : 2, h = i[7] ? Number(i[7]) : e.colorSpace?.matrix ? Ye[e.colorSpace.matrix] : 2;\n  return V(\"vpcC\", 1, 0, [\n    W(s),\n    // Profile\n    W(r),\n    // Level\n    W(c),\n    // Bit depth, chroma subsampling, full range\n    W(l),\n    // Colour primaries\n    W(d),\n    // Transfer characteristics\n    W(h),\n    // Matrix coefficients\n    R(0)\n    // Codec initialization data size\n  ]);\n}, Vn = (t) => U(\"av1C\", nr(t.info.decoderConfig.codec)), Ln = (t, e) => {\n  let i = 0, s, r = 16;\n  if (K.includes(e.track.source._codec)) {\n    const a = e.track.source._codec, { sampleSize: n } = Be(a);\n    r = 8 * n, r > 16 && (i = 1);\n  }\n  return i === 0 ? s = [\n    Array(6).fill(0),\n    // Reserved\n    R(1),\n    // Data reference index\n    R(i),\n    // Version\n    R(0),\n    // Revision level\n    C(0),\n    // Vendor\n    R(e.info.numberOfChannels),\n    // Number of channels\n    R(r),\n    // Sample size (bits)\n    R(0),\n    // Compression ID\n    R(0),\n    // Packet size\n    R(e.info.sampleRate < 2 ** 16 ? e.info.sampleRate : 0),\n    // Sample rate (upper)\n    R(0)\n    // Sample rate (lower)\n  ] : s = [\n    Array(6).fill(0),\n    // Reserved\n    R(1),\n    // Data reference index\n    R(i),\n    // Version\n    R(0),\n    // Revision level\n    C(0),\n    // Vendor\n    R(e.info.numberOfChannels),\n    // Number of channels\n    R(Math.min(r, 16)),\n    // Sample size (bits)\n    R(0),\n    // Compression ID\n    R(0),\n    // Packet size\n    R(e.info.sampleRate < 2 ** 16 ? e.info.sampleRate : 0),\n    // Sample rate (upper)\n    R(0),\n    // Sample rate (lower)\n    C(1),\n    // Samples per packet (must be 1 for uncompressed formats)\n    C(r / 8),\n    // Bytes per packet\n    C(e.info.numberOfChannels * r / 8),\n    // Bytes per frame\n    C(2)\n    // Bytes per sample (constant in FFmpeg)\n  ], U(t, s, [\n    wo[e.track.source._codec]?.(e) ?? null\n  ]);\n}, Yt = (t) => {\n  let e;\n  switch (t.track.source._codec) {\n    case \"aac\":\n      e = 64;\n      break;\n    case \"mp3\":\n      e = 107;\n      break;\n    case \"vorbis\":\n      e = 221;\n      break;\n    default:\n      throw new Error(`Unhandled audio codec: ${t.track.source._codec}`);\n  }\n  let i = [\n    ...W(e),\n    // Object type indication\n    ...W(21),\n    // stream type(6bits)=5 audio, flags(2bits)=1\n    ...Tr(0),\n    // 24bit buffer size\n    ...C(0),\n    // max bitrate\n    ...C(0)\n    // avg bitrate\n  ];\n  if (t.info.decoderConfig.description) {\n    const s = te(t.info.decoderConfig.description);\n    i = [\n      ...i,\n      ...W(5),\n      // TAG(5) = DecoderSpecificInfo\n      ...Kt(s.byteLength),\n      ...s\n    ];\n  }\n  return i = [\n    ...R(1),\n    // ES_ID = 1\n    ...W(0),\n    // flags etc = 0\n    ...W(4),\n    // TAG(4) = ES Descriptor\n    ...Kt(i.length),\n    ...i,\n    ...W(6),\n    // TAG(6)\n    ...W(1),\n    // length\n    ...W(2)\n    // data\n  ], i = [\n    ...W(3),\n    // TAG(3) = Object Descriptor\n    ...Kt(i.length),\n    ...i\n  ], V(\"esds\", 0, 0, i);\n}, De = (t) => U(\"wave\", void 0, [\n  Wn(t),\n  Hn(t),\n  U(\"\\0\\0\\0\\0\")\n  // NULL tag at the end\n]), Wn = (t) => U(\"frma\", [\n  Y(Pr[t.track.source._codec])\n]), Hn = (t) => {\n  const { littleEndian: e } = Be(t.track.source._codec);\n  return U(\"enda\", [\n    R(+e)\n  ]);\n}, $n = (t) => {\n  let e = t.info.numberOfChannels, i = 3840, s = t.info.sampleRate, r = 0, a = 0, n = new Uint8Array(0);\n  const o = t.info.decoderConfig?.description;\n  if (o) {\n    f(o.byteLength >= 18);\n    const c = te(o), l = Vt(c);\n    e = l.outputChannelCount, i = l.preSkip, s = l.inputSampleRate, r = l.outputGain, a = l.channelMappingFamily, l.channelMappingTable && (n = l.channelMappingTable);\n  }\n  return U(\"dOps\", [\n    W(0),\n    // Version\n    W(e),\n    // OutputChannelCount\n    R(i),\n    // PreSkip\n    C(s),\n    // InputSampleRate\n    vr(r),\n    // OutputGain\n    W(a),\n    // ChannelMappingFamily\n    ...n\n  ]);\n}, jn = (t) => {\n  const e = t.info.decoderConfig?.description;\n  f(e);\n  const i = te(e);\n  return V(\"dfLa\", 0, 0, [\n    ...i.subarray(4)\n  ]);\n}, qn = (t, e) => U(t, [\n  Array(6).fill(0),\n  // Reserved\n  R(1)\n  // Data reference index\n], [\n  bo[e.track.source._codec](e)\n]), Qn = (t) => U(\"vttC\", [\n  ...he.encode(t.info.config.description)\n]), Xn = (t) => V(\"stts\", 0, 0, [\n  C(t.timeToSampleTable.length),\n  // Number of entries\n  t.timeToSampleTable.map((e) => [\n    // Time-to-sample table\n    C(e.sampleCount),\n    // Sample count\n    C(e.sampleDelta)\n    // Sample duration\n  ])\n]), Kn = (t) => {\n  if (t.samples.every((i) => i.type === \"key\")) return null;\n  const e = [...t.samples.entries()].filter(([, i]) => i.type === \"key\");\n  return V(\"stss\", 0, 0, [\n    C(e.length),\n    // Number of entries\n    e.map(([i]) => C(i + 1))\n    // Sync sample table\n  ]);\n}, Gn = (t) => V(\"stsc\", 0, 0, [\n  C(t.compactlyCodedChunkTable.length),\n  // Number of entries\n  t.compactlyCodedChunkTable.map((e) => [\n    // Sample-to-chunk table\n    C(e.firstChunk),\n    // First chunk\n    C(e.samplesPerChunk),\n    // Samples per chunk\n    C(1)\n    // Sample description index\n  ])\n]), Yn = (t) => {\n  if (t.type === \"audio\" && t.info.requiresPcmTransformation) {\n    const { sampleSize: e } = Be(t.track.source._codec);\n    return V(\"stsz\", 0, 0, [\n      C(e * t.info.numberOfChannels),\n      // Sample size\n      C(t.samples.reduce((i, s) => i + Q(s.duration, t.timescale), 0))\n    ]);\n  }\n  return V(\"stsz\", 0, 0, [\n    C(0),\n    // Sample size (0 means non-constant size)\n    C(t.samples.length),\n    // Number of entries\n    t.samples.map((e) => C(e.size))\n    // Sample size table\n  ]);\n}, Jn = (t) => t.finalizedChunks.length > 0 && H(t.finalizedChunks).offset >= 2 ** 32 ? V(\"co64\", 0, 0, [\n  C(t.finalizedChunks.length),\n  // Number of entries\n  t.finalizedChunks.map((e) => Pe(e.offset))\n  // Chunk offset table\n]) : V(\"stco\", 0, 0, [\n  C(t.finalizedChunks.length),\n  // Number of entries\n  t.finalizedChunks.map((e) => C(e.offset))\n  // Chunk offset table\n]), Zn = (t) => V(\"ctts\", 1, 0, [\n  C(t.compositionTimeOffsetTable.length),\n  // Number of entries\n  t.compositionTimeOffsetTable.map((e) => [\n    // Time-to-sample table\n    C(e.sampleCount),\n    // Sample count\n    ye(e.sampleCompositionTimeOffset)\n    // Sample offset\n  ])\n]), eo = (t) => {\n  let e = 1 / 0, i = -1 / 0, s = 1 / 0, r = -1 / 0;\n  f(t.compositionTimeOffsetTable.length > 0), f(t.samples.length > 0);\n  for (let n = 0; n < t.compositionTimeOffsetTable.length; n++) {\n    const o = t.compositionTimeOffsetTable[n];\n    e = Math.min(e, o.sampleCompositionTimeOffset), i = Math.max(i, o.sampleCompositionTimeOffset);\n  }\n  for (let n = 0; n < t.samples.length; n++) {\n    const o = t.samples[n];\n    s = Math.min(\n      s,\n      Q(o.timestamp, t.timescale)\n    ), r = Math.max(\n      r,\n      Q(o.timestamp + o.duration, t.timescale)\n    );\n  }\n  const a = Math.max(-e, 0);\n  return r >= 2 ** 31 ? null : V(\"cslg\", 0, 0, [\n    ye(a),\n    // Composition to DTS shift\n    ye(e),\n    // Least decode to display delta\n    ye(i),\n    // Greatest decode to display delta\n    ye(s),\n    // Composition start time\n    ye(r)\n    // Composition end time\n  ]);\n}, to = (t) => U(\"mvex\", void 0, t.map(io)), io = (t) => V(\"trex\", 0, 0, [\n  C(t.track.id),\n  // Track ID\n  C(1),\n  // Default sample description index\n  C(0),\n  // Default sample duration\n  C(0),\n  // Default sample size\n  C(0)\n  // Default sample flags\n]), us = (t, e) => U(\"moof\", void 0, [\n  so(t),\n  ...e.map(ro)\n]), so = (t) => V(\"mfhd\", 0, 0, [\n  C(t)\n  // Sequence number\n]), Er = (t) => {\n  let e = 0, i = 0;\n  const s = 0, r = 0, a = t.type === \"delta\";\n  return i |= +a, a ? e |= 1 : e |= 2, e << 24 | i << 16 | s << 8 | r;\n}, ro = (t) => U(\"traf\", void 0, [\n  ao(t),\n  no(t),\n  oo(t)\n]), ao = (t) => {\n  f(t.currentChunk);\n  let e = 0;\n  e |= 8, e |= 16, e |= 32, e |= 131072;\n  const i = t.currentChunk.samples[1] ?? t.currentChunk.samples[0], s = {\n    duration: i.timescaleUnitsToNextSample,\n    size: i.size,\n    flags: Er(i)\n  };\n  return V(\"tfhd\", 0, e, [\n    C(t.track.id),\n    // Track ID\n    C(s.duration),\n    // Default sample duration\n    C(s.size),\n    // Default sample size\n    C(s.flags)\n    // Default sample flags\n  ]);\n}, no = (t) => (f(t.currentChunk), V(\"tfdt\", 1, 0, [\n  Pe(Q(t.currentChunk.startTimestamp, t.timescale))\n  // Base Media Decode Time\n])), oo = (t) => {\n  f(t.currentChunk);\n  const e = t.currentChunk.samples.map((g) => g.timescaleUnitsToNextSample), i = t.currentChunk.samples.map((g) => g.size), s = t.currentChunk.samples.map(Er), r = t.currentChunk.samples.map((g) => Q(g.timestamp - g.decodeTimestamp, t.timescale)), a = new Set(e), n = new Set(i), o = new Set(s), c = new Set(r), l = o.size === 2 && s[0] !== s[1], d = a.size > 1, h = n.size > 1, u = !l && o.size > 1, m = c.size > 1 || [...c].some((g) => g !== 0);\n  let p = 0;\n  return p |= 1, p |= 4 * +l, p |= 256 * +d, p |= 512 * +h, p |= 1024 * +u, p |= 2048 * +m, V(\"trun\", 1, p, [\n    C(t.currentChunk.samples.length),\n    // Sample count\n    C(t.currentChunk.offset - t.currentChunk.moofOffset || 0),\n    // Data offset\n    l ? C(s[0]) : [],\n    t.currentChunk.samples.map((g, w) => [\n      d ? C(e[w]) : [],\n      // Sample duration\n      h ? C(i[w]) : [],\n      // Sample size\n      u ? C(s[w]) : [],\n      // Sample flags\n      // Sample composition time offsets\n      m ? ye(r[w]) : []\n    ])\n  ]);\n}, co = (t) => U(\"mfra\", void 0, [\n  ...t.map(lo),\n  ho()\n]), lo = (t, e) => V(\"tfra\", 1, 0, [\n  C(t.track.id),\n  // Track ID\n  C(63),\n  // This specifies that traf number, trun number and sample number are 32-bit ints\n  C(t.finalizedChunks.length),\n  // Number of entries\n  t.finalizedChunks.map((s) => [\n    Pe(Q(s.samples[0].timestamp, t.timescale)),\n    // Time (in presentation time)\n    Pe(s.moofOffset),\n    // moof offset\n    C(e + 1),\n    // traf number\n    C(1),\n    // trun number\n    C(1)\n    // Sample number\n  ])\n]), ho = () => V(\"mfro\", 0, 0, [\n  // This value needs to be overwritten manually from the outside, where the actual size of the enclosing mfra box\n  // is known\n  C(0)\n  // Size\n]), uo = () => U(\"vtte\"), fo = (t, e, i, s, r) => U(\"vttc\", void 0, [\n  r !== null ? U(\"vsid\", [ye(r)]) : null,\n  i !== null ? U(\"iden\", [...he.encode(i)]) : null,\n  e !== null ? U(\"ctim\", [...he.encode(gr(e))]) : null,\n  s !== null ? U(\"sttg\", [...he.encode(s)]) : null,\n  U(\"payl\", [...he.encode(t)])\n]), mo = (t) => U(\"vtta\", [...he.encode(t)]), po = {\n  avc: \"avc1\",\n  hevc: \"hvc1\",\n  vp8: \"vp08\",\n  vp9: \"vp09\",\n  av1: \"av01\"\n}, go = {\n  avc: Dn,\n  hevc: Nn,\n  vp8: hs,\n  vp9: hs,\n  av1: Vn\n}, Pr = {\n  aac: \"mp4a\",\n  mp3: \"mp4a\",\n  opus: \"Opus\",\n  vorbis: \"mp4a\",\n  flac: \"fLaC\",\n  ulaw: \"ulaw\",\n  alaw: \"alaw\",\n  \"pcm-u8\": \"raw \",\n  \"pcm-s8\": \"sowt\",\n  \"pcm-s16\": \"sowt\",\n  \"pcm-s16be\": \"twos\",\n  \"pcm-s24\": \"in24\",\n  \"pcm-s24be\": \"in24\",\n  \"pcm-s32\": \"in32\",\n  \"pcm-s32be\": \"in32\",\n  \"pcm-f32\": \"fl32\",\n  \"pcm-f32be\": \"fl32\"\n}, wo = {\n  aac: Yt,\n  mp3: Yt,\n  opus: $n,\n  vorbis: Yt,\n  flac: jn,\n  \"pcm-s24\": De,\n  \"pcm-s24be\": De,\n  \"pcm-s32\": De,\n  \"pcm-s32be\": De,\n  \"pcm-f32\": De,\n  \"pcm-f32be\": De\n}, yo = {\n  webvtt: \"wvtt\"\n}, bo = {\n  webvtt: Qn\n}, Ni = class {\n  constructor(t) {\n    this.mutex = new ft(), this.firstMediaStreamTimestamp = null, this.trackTimestampInfo = /* @__PURE__ */ new WeakMap(), this.output = t;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onTrackClose(t) {\n  }\n  validateAndNormalizeTimestamp(t, e, i) {\n    e += t.source._timestampOffset;\n    let s = this.trackTimestampInfo.get(t);\n    if (!s) {\n      if (!i)\n        throw new Error(\"First frame must be a key frame.\");\n      s = {\n        maxTimestamp: e,\n        maxTimestampBeforeLastKeyFrame: e\n      }, this.trackTimestampInfo.set(t, s);\n    }\n    if (e < 0)\n      throw new Error(`Timestamps must be non-negative (got ${e}s).`);\n    if (i && (s.maxTimestampBeforeLastKeyFrame = s.maxTimestamp), e < s.maxTimestampBeforeLastKeyFrame)\n      throw new Error(\n        `Timestamps cannot be smaller than the highest timestamp of the previous run (a run begins with a key frame and ends right before the next key frame). Got ${e}s, but highest timestamp is ${s.maxTimestampBeforeLastKeyFrame}s.`\n      );\n    return s.maxTimestamp = Math.max(s.maxTimestamp, e), e;\n  }\n}, Fr = class {\n  constructor() {\n    this.ensureMonotonicity = !1, this.trackedWrites = null, this.trackedStart = -1, this.trackedEnd = -1;\n  }\n  start() {\n  }\n  maybeTrackWrites(t) {\n    if (!this.trackedWrites)\n      return;\n    let e = this.getPos();\n    if (e < this.trackedStart) {\n      if (e + t.byteLength <= this.trackedStart)\n        return;\n      t = t.subarray(this.trackedStart - e), e = 0;\n    }\n    const i = e + t.byteLength - this.trackedStart;\n    let s = this.trackedWrites.byteLength;\n    for (; s < i; )\n      s *= 2;\n    if (s !== this.trackedWrites.byteLength) {\n      const r = new Uint8Array(s);\n      r.set(this.trackedWrites, 0), this.trackedWrites = r;\n    }\n    this.trackedWrites.set(t, e - this.trackedStart), this.trackedEnd = Math.max(this.trackedEnd, e + t.byteLength);\n  }\n  startTrackingWrites() {\n    this.trackedWrites = new Uint8Array(2 ** 10), this.trackedStart = this.getPos(), this.trackedEnd = this.trackedStart;\n  }\n  stopTrackingWrites() {\n    if (!this.trackedWrites)\n      throw new Error(\"Internal error: Can't get tracked writes since nothing was tracked.\");\n    const e = {\n      data: this.trackedWrites.subarray(0, this.trackedEnd - this.trackedStart),\n      start: this.trackedStart,\n      end: this.trackedEnd\n    };\n    return this.trackedWrites = null, e;\n  }\n}, Jt = 2 ** 16, Zt = 2 ** 32, Rr = class extends Fr {\n  constructor(t) {\n    if (super(), this.pos = 0, this.maxPos = 0, this.target = t, this.supportsResize = \"resize\" in new ArrayBuffer(0), this.supportsResize)\n      try {\n        this.buffer = new ArrayBuffer(Jt, { maxByteLength: Zt });\n      } catch {\n        this.buffer = new ArrayBuffer(Jt), this.supportsResize = !1;\n      }\n    else\n      this.buffer = new ArrayBuffer(Jt);\n    this.bytes = new Uint8Array(this.buffer);\n  }\n  ensureSize(t) {\n    let e = this.buffer.byteLength;\n    for (; e < t; ) e *= 2;\n    if (e !== this.buffer.byteLength) {\n      if (e > Zt)\n        throw new Error(\n          `ArrayBuffer exceeded maximum size of ${Zt} bytes. Please consider using another target.`\n        );\n      if (this.supportsResize)\n        this.buffer.resize(e);\n      else {\n        const i = new ArrayBuffer(e), s = new Uint8Array(i);\n        s.set(this.bytes, 0), this.buffer = i, this.bytes = s;\n      }\n    }\n  }\n  write(t) {\n    this.maybeTrackWrites(t), this.ensureSize(this.pos + t.byteLength), this.bytes.set(t, this.pos), this.pos += t.byteLength, this.maxPos = Math.max(this.maxPos, this.pos);\n  }\n  seek(t) {\n    this.pos = t;\n  }\n  getPos() {\n    return this.pos;\n  }\n  async flush() {\n  }\n  async finalize() {\n    this.ensureSize(this.pos), this.target.buffer = this.buffer.slice(0, Math.max(this.maxPos, this.pos));\n  }\n  async close() {\n  }\n  getSlice(t, e) {\n    return this.bytes.slice(t, e);\n  }\n}, ko = 2 ** 24, So = 2, vo = class extends Fr {\n  constructor(t) {\n    super(), this.pos = 0, this.sections = [], this.lastWriteEnd = 0, this.lastFlushEnd = 0, this.writer = null, this.chunks = [], this.target = t, this.chunked = t._options.chunked ?? !1, this.chunkSize = t._options.chunkSize ?? ko;\n  }\n  start() {\n    this.writer = this.target._writable.getWriter();\n  }\n  write(t) {\n    if (this.pos > this.lastWriteEnd) {\n      const e = this.pos - this.lastWriteEnd;\n      this.pos = this.lastWriteEnd, this.write(new Uint8Array(e));\n    }\n    this.maybeTrackWrites(t), this.sections.push({\n      data: t.slice(),\n      start: this.pos\n    }), this.pos += t.byteLength, this.lastWriteEnd = Math.max(this.lastWriteEnd, this.pos);\n  }\n  seek(t) {\n    this.pos = t;\n  }\n  getPos() {\n    return this.pos;\n  }\n  async flush() {\n    if (this.pos > this.lastWriteEnd) {\n      const i = this.pos - this.lastWriteEnd;\n      this.pos = this.lastWriteEnd, this.write(new Uint8Array(i));\n    }\n    if (f(this.writer), this.sections.length === 0) return;\n    const t = [], e = [...this.sections].sort((i, s) => i.start - s.start);\n    t.push({\n      start: e[0].start,\n      size: e[0].data.byteLength\n    });\n    for (let i = 1; i < e.length; i++) {\n      const s = t[t.length - 1], r = e[i];\n      r.start <= s.start + s.size ? s.size = Math.max(s.size, r.start + r.data.byteLength - s.start) : t.push({\n        start: r.start,\n        size: r.data.byteLength\n      });\n    }\n    for (const i of t) {\n      i.data = new Uint8Array(i.size);\n      for (const s of this.sections)\n        i.start <= s.start && s.start < i.start + i.size && i.data.set(s.data, s.start - i.start);\n      if (this.writer.desiredSize !== null && this.writer.desiredSize <= 0 && await this.writer.ready, this.chunked)\n        this.writeDataIntoChunks(i.data, i.start), this.tryToFlushChunks();\n      else {\n        if (this.ensureMonotonicity && i.start !== this.lastFlushEnd)\n          throw new Error(\"Internal error: Monotonicity violation.\");\n        this.writer.write({\n          type: \"write\",\n          data: i.data,\n          position: i.start\n        }), this.lastFlushEnd = i.start + i.data.byteLength;\n      }\n    }\n    this.sections.length = 0;\n  }\n  writeDataIntoChunks(t, e) {\n    let i = this.chunks.findIndex((o) => o.start <= e && e < o.start + this.chunkSize);\n    i === -1 && (i = this.createChunk(e));\n    const s = this.chunks[i], r = e - s.start, a = t.subarray(0, Math.min(this.chunkSize - r, t.byteLength));\n    s.data.set(a, r);\n    const n = {\n      start: r,\n      end: r + a.byteLength\n    };\n    if (this.insertSectionIntoChunk(s, n), s.written[0].start === 0 && s.written[0].end === this.chunkSize && (s.shouldFlush = !0), this.chunks.length > So) {\n      for (let o = 0; o < this.chunks.length - 1; o++)\n        this.chunks[o].shouldFlush = !0;\n      this.tryToFlushChunks();\n    }\n    a.byteLength < t.byteLength && this.writeDataIntoChunks(t.subarray(a.byteLength), e + a.byteLength);\n  }\n  insertSectionIntoChunk(t, e) {\n    let i = 0, s = t.written.length - 1, r = -1;\n    for (; i <= s; ) {\n      const a = Math.floor(i + (s - i + 1) / 2);\n      t.written[a].start <= e.start ? (i = a + 1, r = a) : s = a - 1;\n    }\n    for (t.written.splice(r + 1, 0, e), (r === -1 || t.written[r].end < e.start) && r++; r < t.written.length - 1 && t.written[r].end >= t.written[r + 1].start; )\n      t.written[r].end = Math.max(t.written[r].end, t.written[r + 1].end), t.written.splice(r + 1, 1);\n  }\n  createChunk(t) {\n    const i = {\n      start: Math.floor(t / this.chunkSize) * this.chunkSize,\n      data: new Uint8Array(this.chunkSize),\n      written: [],\n      shouldFlush: !1\n    };\n    return this.chunks.push(i), this.chunks.sort((s, r) => s.start - r.start), this.chunks.indexOf(i);\n  }\n  tryToFlushChunks(t = !1) {\n    f(this.writer);\n    for (let e = 0; e < this.chunks.length; e++) {\n      const i = this.chunks[e];\n      if (!(!i.shouldFlush && !t)) {\n        for (const s of i.written) {\n          const r = i.start + s.start;\n          if (this.ensureMonotonicity && r !== this.lastFlushEnd)\n            throw new Error(\"Internal error: Monotonicity violation.\");\n          this.writer.write({\n            type: \"write\",\n            data: i.data.subarray(s.start, s.end),\n            position: r\n          }), this.lastFlushEnd = i.start + s.end;\n        }\n        this.chunks.splice(e--, 1);\n      }\n    }\n  }\n  finalize() {\n    return this.chunked && this.tryToFlushChunks(!0), f(this.writer), this.writer.close();\n  }\n  async close() {\n    return this.writer?.close();\n  }\n}, Vi = class {\n  constructor() {\n    this._output = null;\n  }\n}, fi = class extends Vi {\n  constructor() {\n    super(...arguments), this.buffer = null;\n  }\n  /** @internal */\n  _createWriter() {\n    return new Rr(this);\n  }\n}, ei = class extends Vi {\n  constructor(t, e = {}) {\n    if (super(), !(t instanceof WritableStream))\n      throw new TypeError(\"StreamTarget requires a WritableStream instance.\");\n    if (e != null && typeof e != \"object\")\n      throw new TypeError(\"StreamTarget options, when provided, must be an object.\");\n    if (e.chunked !== void 0 && typeof e.chunked != \"boolean\")\n      throw new TypeError(\"options.chunked, when provided, must be a boolean.\");\n    if (e.chunkSize !== void 0 && (!Number.isInteger(e.chunkSize) || e.chunkSize < 1024))\n      throw new TypeError(\"options.chunkSize, when provided, must be an integer and not smaller than 1024.\");\n    this._writable = t, this._options = e;\n  }\n  /** @internal */\n  _createWriter() {\n    return new vo(this);\n  }\n}, mi = 1e3, To = 2082844800, Q = (t, e, i = !0) => {\n  const s = t * e;\n  return i ? Math.round(s) : s;\n}, xo = class extends Ni {\n  constructor(t, e) {\n    super(t), this.auxTarget = new fi(), this.auxWriter = this.auxTarget._createWriter(), this.auxBoxWriter = new ds(this.auxWriter), this.mdat = null, this.trackDatas = [], this.creationTime = Math.floor(Date.now() / 1e3) + To, this.finalizedChunks = [], this.nextFragmentNumber = 1, this.maxWrittenTimestamp = -1 / 0, this.format = e, this.writer = t._writer, this.boxWriter = new ds(this.writer), this.isMov = e instanceof jr;\n    const i = this.writer instanceof Rr ? \"in-memory\" : !1;\n    this.fastStart = e._options.fastStart ?? i, this.isFragmented = this.fastStart === \"fragmented\", (this.fastStart === \"in-memory\" || this.isFragmented) && (this.writer.ensureMonotonicity = !0), this.minimumFragmentDuration = e._options.minimumFragmentDuration ?? 1;\n  }\n  async start() {\n    const t = await this.mutex.acquire(), e = this.output._tracks.some((i) => i.type === \"video\" && i.source._codec === \"avc\");\n    if (this.format._options.onFtyp && this.writer.startTrackingWrites(), this.boxWriter.writeBox(wn({\n      isMov: this.isMov,\n      holdsAvc: e,\n      fragmented: this.isFragmented\n    })), this.format._options.onFtyp) {\n      const { data: i, start: s } = this.writer.stopTrackingWrites();\n      this.format._options.onFtyp(i, s);\n    }\n    this.fastStart === \"in-memory\" ? this.mdat = Gt(!1) : this.isFragmented || (this.format._options.onMdat && this.writer.startTrackingWrites(), this.mdat = Gt(!0), this.boxWriter.writeBox(this.mdat)), await this.writer.flush(), t();\n  }\n  getVideoTrackData(t, e, i) {\n    const s = this.trackDatas.find((c) => c.track === t);\n    if (s)\n      return s;\n    ur(i), f(i), f(i.decoderConfig);\n    const r = { ...i.decoderConfig };\n    f(r.codedWidth !== void 0), f(r.codedHeight !== void 0);\n    let a = !1;\n    if (t.source._codec === \"avc\" && !r.description) {\n      const c = wr(e.data);\n      if (!c)\n        throw new Error(\n          \"Couldn't extract an AVCDecoderConfigurationRecord from the AVC packet. Make sure the packets are in Annex B format (as specified in ITU-T-REC-H.264) when not providing a description, or provide a description (must be an AVCDecoderConfigurationRecord as specified in ISO 14496-15) and ensure the packets are in AVCC format.\"\n        );\n      r.description = an(c), a = !0;\n    } else if (t.source._codec === \"hevc\" && !r.description) {\n      const c = yr(e.data);\n      if (!c)\n        throw new Error(\n          \"Couldn't extract an HEVCDecoderConfigurationRecord from the HEVC packet. Make sure the packets are in Annex B format (as specified in ITU-T-REC-H.265) when not providing a description, or provide a description (must be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15) and ensure the packets are in HEVC format.\"\n        );\n      r.description = mn(c), a = !0;\n    }\n    const n = Va(1 / (t.metadata.frameRate ?? 57600), 1e6).denominator, o = {\n      track: t,\n      type: \"video\",\n      info: {\n        width: r.codedWidth,\n        height: r.codedHeight,\n        decoderConfig: r,\n        requiresAnnexBTransformation: a\n      },\n      timescale: n,\n      samples: [],\n      sampleQueue: [],\n      timestampProcessingQueue: [],\n      timeToSampleTable: [],\n      compositionTimeOffsetTable: [],\n      lastTimescaleUnits: null,\n      lastSample: null,\n      finalizedChunks: [],\n      currentChunk: null,\n      compactlyCodedChunkTable: []\n    };\n    return this.trackDatas.push(o), this.trackDatas.sort((c, l) => c.track.id - l.track.id), o;\n  }\n  getAudioTrackData(t, e) {\n    const i = this.trackDatas.find((r) => r.track === t);\n    if (i)\n      return i;\n    zi(e), f(e), f(e.decoderConfig);\n    const s = {\n      track: t,\n      type: \"audio\",\n      info: {\n        numberOfChannels: e.decoderConfig.numberOfChannels,\n        sampleRate: e.decoderConfig.sampleRate,\n        decoderConfig: e.decoderConfig,\n        requiresPcmTransformation: !this.isFragmented && K.includes(t.source._codec)\n      },\n      timescale: e.decoderConfig.sampleRate,\n      samples: [],\n      sampleQueue: [],\n      timestampProcessingQueue: [],\n      timeToSampleTable: [],\n      compositionTimeOffsetTable: [],\n      lastTimescaleUnits: null,\n      lastSample: null,\n      finalizedChunks: [],\n      currentChunk: null,\n      compactlyCodedChunkTable: []\n    };\n    return this.trackDatas.push(s), this.trackDatas.sort((r, a) => r.track.id - a.track.id), s;\n  }\n  getSubtitleTrackData(t, e) {\n    const i = this.trackDatas.find((r) => r.track === t);\n    if (i)\n      return i;\n    fr(e), f(e), f(e.config);\n    const s = {\n      track: t,\n      type: \"subtitle\",\n      info: {\n        config: e.config\n      },\n      timescale: 1e3,\n      // Reasonable\n      samples: [],\n      sampleQueue: [],\n      timestampProcessingQueue: [],\n      timeToSampleTable: [],\n      compositionTimeOffsetTable: [],\n      lastTimescaleUnits: null,\n      lastSample: null,\n      finalizedChunks: [],\n      currentChunk: null,\n      compactlyCodedChunkTable: [],\n      lastCueEndTimestamp: 0,\n      cueQueue: [],\n      nextSourceId: 0,\n      cueToSourceId: /* @__PURE__ */ new WeakMap()\n    };\n    return this.trackDatas.push(s), this.trackDatas.sort((r, a) => r.track.id - a.track.id), s;\n  }\n  async addEncodedVideoPacket(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getVideoTrackData(t, e, i);\n      let a = e.data;\n      if (r.info.requiresAnnexBTransformation) {\n        const c = rn(a);\n        if (!c)\n          throw new Error(\n            \"Failed to transform packet data. Make sure all packets are provided in Annex B format, as specified in ITU-T-REC-H.264 and ITU-T-REC-H.265.\"\n          );\n        a = c;\n      }\n      const n = this.validateAndNormalizeTimestamp(\n        r.track,\n        e.timestamp,\n        e.type === \"key\"\n      ), o = this.createSampleForTrack(\n        r,\n        a,\n        n,\n        e.duration,\n        e.type\n      );\n      await this.registerSample(r, o);\n    } finally {\n      s();\n    }\n  }\n  async addEncodedAudioPacket(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getAudioTrackData(t, i), a = this.validateAndNormalizeTimestamp(\n        r.track,\n        e.timestamp,\n        e.type === \"key\"\n      ), n = this.createSampleForTrack(\n        r,\n        e.data,\n        a,\n        e.duration,\n        e.type\n      );\n      r.info.requiresPcmTransformation && await this.maybePadWithSilence(r, a), await this.registerSample(r, n);\n    } finally {\n      s();\n    }\n  }\n  async maybePadWithSilence(t, e) {\n    const i = H(t.samples), s = i ? i.timestamp + i.duration : 0, r = e - s, a = Q(r, t.timescale);\n    if (a > 0) {\n      const { sampleSize: n, silentValue: o } = Be(\n        t.info.decoderConfig.codec\n      ), c = a * t.info.numberOfChannels, l = new Uint8Array(n * c).fill(o), d = this.createSampleForTrack(\n        t,\n        new Uint8Array(l.buffer),\n        s,\n        r,\n        \"key\"\n      );\n      await this.registerSample(t, d);\n    }\n  }\n  async addSubtitleCue(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getSubtitleTrackData(t, i);\n      this.validateAndNormalizeTimestamp(r.track, e.timestamp, !0), t.source._codec === \"webvtt\" && (r.cueQueue.push(e), await this.processWebVTTCues(r, e.timestamp));\n    } finally {\n      s();\n    }\n  }\n  async processWebVTTCues(t, e) {\n    for (; t.cueQueue.length > 0; ) {\n      const i = /* @__PURE__ */ new Set([]);\n      for (const c of t.cueQueue)\n        f(c.timestamp <= e), f(t.lastCueEndTimestamp <= c.timestamp + c.duration), i.add(Math.max(c.timestamp, t.lastCueEndTimestamp)), i.add(c.timestamp + c.duration);\n      const s = [...i].sort((c, l) => c - l), r = s[0], a = s[1] ?? r;\n      if (e < a)\n        break;\n      if (t.lastCueEndTimestamp < r) {\n        this.auxWriter.seek(0);\n        const c = uo();\n        this.auxBoxWriter.writeBox(c);\n        const l = this.auxWriter.getSlice(0, this.auxWriter.getPos()), d = this.createSampleForTrack(\n          t,\n          l,\n          t.lastCueEndTimestamp,\n          r - t.lastCueEndTimestamp,\n          \"key\"\n        );\n        await this.registerSample(t, d), t.lastCueEndTimestamp = r;\n      }\n      this.auxWriter.seek(0);\n      for (let c = 0; c < t.cueQueue.length; c++) {\n        const l = t.cueQueue[c];\n        if (l.timestamp >= a)\n          break;\n        Pt.lastIndex = 0;\n        const d = Pt.test(l.text), h = l.timestamp + l.duration;\n        let u = t.cueToSourceId.get(l);\n        if (u === void 0 && a < h && (u = t.nextSourceId++, t.cueToSourceId.set(l, u)), l.notes) {\n          const p = mo(l.notes);\n          this.auxBoxWriter.writeBox(p);\n        }\n        const m = fo(\n          l.text,\n          d ? r : null,\n          l.identifier ?? null,\n          l.settings ?? null,\n          u ?? null\n        );\n        this.auxBoxWriter.writeBox(m), h === a && t.cueQueue.splice(c--, 1);\n      }\n      const n = this.auxWriter.getSlice(0, this.auxWriter.getPos()), o = this.createSampleForTrack(t, n, r, a - r, \"key\");\n      await this.registerSample(t, o), t.lastCueEndTimestamp = a;\n    }\n  }\n  createSampleForTrack(t, e, i, s, r) {\n    return {\n      timestamp: i,\n      decodeTimestamp: i,\n      // This may be refined later\n      duration: s,\n      data: e,\n      size: e.byteLength,\n      type: r,\n      timescaleUnitsToNextSample: Q(s, t.timescale)\n      // Will be refined\n    };\n  }\n  processTimestamps(t) {\n    if (t.timestampProcessingQueue.length === 0)\n      return;\n    if (t.type === \"audio\" && t.info.requiresPcmTransformation) {\n      let i = 0;\n      for (let s = 0; s < t.timestampProcessingQueue.length; s++) {\n        const r = t.timestampProcessingQueue[s], a = Q(r.duration, t.timescale);\n        i += a;\n      }\n      if (t.timeToSampleTable.length === 0)\n        t.timeToSampleTable.push({\n          sampleCount: i,\n          sampleDelta: 1\n        });\n      else {\n        const s = H(t.timeToSampleTable);\n        s.sampleCount += i;\n      }\n      t.timestampProcessingQueue.length = 0;\n      return;\n    }\n    const e = t.timestampProcessingQueue.map((i) => i.timestamp).sort((i, s) => i - s);\n    for (let i = 0; i < t.timestampProcessingQueue.length; i++) {\n      const s = t.timestampProcessingQueue[i];\n      s.decodeTimestamp = e[i], !this.isFragmented && t.lastTimescaleUnits === null && (s.decodeTimestamp = 0);\n      const r = Q(s.timestamp - s.decodeTimestamp, t.timescale), a = Q(s.duration, t.timescale);\n      if (t.lastTimescaleUnits !== null) {\n        f(t.lastSample);\n        const n = Q(s.decodeTimestamp, t.timescale, !1), o = Math.round(n - t.lastTimescaleUnits);\n        if (f(o >= 0), t.lastTimescaleUnits += o, t.lastSample.timescaleUnitsToNextSample = o, !this.isFragmented) {\n          let c = H(t.timeToSampleTable);\n          if (f(c), c.sampleCount === 1) {\n            c.sampleDelta = o;\n            const d = t.timeToSampleTable[t.timeToSampleTable.length - 2];\n            d && d.sampleDelta === o && (d.sampleCount++, t.timeToSampleTable.pop(), c = d);\n          } else c.sampleDelta !== o && (c.sampleCount--, t.timeToSampleTable.push(c = {\n            sampleCount: 1,\n            sampleDelta: o\n          }));\n          c.sampleDelta === a ? c.sampleCount++ : t.timeToSampleTable.push({\n            sampleCount: 1,\n            sampleDelta: a\n          });\n          const l = H(t.compositionTimeOffsetTable);\n          f(l), l.sampleCompositionTimeOffset === r ? l.sampleCount++ : t.compositionTimeOffsetTable.push({\n            sampleCount: 1,\n            sampleCompositionTimeOffset: r\n          });\n        }\n      } else\n        t.lastTimescaleUnits = Q(s.decodeTimestamp, t.timescale, !1), this.isFragmented || (t.timeToSampleTable.push({\n          sampleCount: 1,\n          sampleDelta: a\n        }), t.compositionTimeOffsetTable.push({\n          sampleCount: 1,\n          sampleCompositionTimeOffset: r\n        }));\n      t.lastSample = s;\n    }\n    t.timestampProcessingQueue.length = 0;\n  }\n  async registerSample(t, e) {\n    this.isFragmented ? (t.sampleQueue.push(e), await this.interleaveSamples()) : await this.addSampleToTrack(t, e);\n  }\n  async addSampleToTrack(t, e) {\n    e.type === \"key\" && this.processTimestamps(t), this.isFragmented || t.samples.push(e);\n    let i = !1;\n    if (!t.currentChunk)\n      i = !0;\n    else {\n      const s = e.timestamp - t.currentChunk.startTimestamp;\n      if (this.isFragmented) {\n        const r = this.trackDatas.every((a) => {\n          if (t === a)\n            return e.type === \"key\";\n          const n = a.sampleQueue[0];\n          return n ? n.type === \"key\" : a.track.source._closed;\n        });\n        s >= this.minimumFragmentDuration && r && e.timestamp > this.maxWrittenTimestamp && (i = !0, await this.finalizeFragment());\n      } else\n        i = s >= 0.5;\n    }\n    i && (t.currentChunk && await this.finalizeCurrentChunk(t), t.currentChunk = {\n      startTimestamp: e.timestamp,\n      samples: [],\n      offset: null,\n      moofOffset: null\n    }), f(t.currentChunk), t.currentChunk.samples.push(e), t.timestampProcessingQueue.push(e), this.isFragmented && (this.maxWrittenTimestamp = Math.max(this.maxWrittenTimestamp, e.timestamp));\n  }\n  async finalizeCurrentChunk(t) {\n    if (f(!this.isFragmented), !t.currentChunk) return;\n    t.finalizedChunks.push(t.currentChunk), this.finalizedChunks.push(t.currentChunk);\n    let e = t.currentChunk.samples.length;\n    if (t.type === \"audio\" && t.info.requiresPcmTransformation && (e = t.currentChunk.samples.reduce((i, s) => i + Q(s.duration, t.timescale), 0)), (t.compactlyCodedChunkTable.length === 0 || H(t.compactlyCodedChunkTable).samplesPerChunk !== e) && t.compactlyCodedChunkTable.push({\n      firstChunk: t.finalizedChunks.length,\n      // 1-indexed\n      samplesPerChunk: e\n    }), this.fastStart === \"in-memory\") {\n      t.currentChunk.offset = 0;\n      return;\n    }\n    t.currentChunk.offset = this.writer.getPos();\n    for (const i of t.currentChunk.samples)\n      f(i.data), this.writer.write(i.data), i.data = null;\n    await this.writer.flush();\n  }\n  async interleaveSamples(t = !1) {\n    if (f(this.isFragmented), !t) {\n      for (const e of this.output._tracks)\n        if (!e.source._closed && !this.trackDatas.some((i) => i.track === e))\n          return;\n    }\n    e:\n      for (; ; ) {\n        let e = null, i = 1 / 0;\n        for (const r of this.trackDatas) {\n          if (!t && r.sampleQueue.length === 0 && !r.track.source._closed)\n            break e;\n          r.sampleQueue.length > 0 && r.sampleQueue[0].timestamp < i && (e = r, i = r.sampleQueue[0].timestamp);\n        }\n        if (!e)\n          break;\n        const s = e.sampleQueue.shift();\n        await this.addSampleToTrack(e, s);\n      }\n  }\n  async finalizeFragment(t = !0) {\n    f(this.isFragmented);\n    const e = this.nextFragmentNumber++;\n    if (e === 1) {\n      this.format._options.onMoov && this.writer.startTrackingWrites();\n      const u = yt(this.trackDatas, this.creationTime, !0);\n      if (this.boxWriter.writeBox(u), this.format._options.onMoov) {\n        const { data: m, start: p } = this.writer.stopTrackingWrites();\n        this.format._options.onMoov(m, p);\n      }\n    }\n    const i = this.trackDatas.filter((u) => u.currentChunk), s = us(e, i), r = this.writer.getPos(), a = r + this.boxWriter.measureBox(s), n = 16;\n    let o = a + n, c = 1 / 0;\n    for (const u of i) {\n      u.currentChunk.offset = o, u.currentChunk.moofOffset = r;\n      for (const m of u.currentChunk.samples)\n        o += m.size;\n      c = Math.min(c, u.currentChunk.startTimestamp);\n    }\n    const l = o - a;\n    this.format._options.onMoof && this.writer.startTrackingWrites();\n    const d = us(e, i);\n    if (this.boxWriter.writeBox(d), this.format._options.onMoof) {\n      const { data: u, start: m } = this.writer.stopTrackingWrites();\n      this.format._options.onMoof(u, m, c);\n    }\n    f(this.writer.getPos() === a), this.format._options.onMdat && this.writer.startTrackingWrites();\n    const h = Gt(l >= 2 ** 32);\n    h.size = l, this.boxWriter.writeBox(h), this.writer.seek(a + n);\n    for (const u of i)\n      for (const m of u.currentChunk.samples)\n        this.writer.write(m.data), m.data = null;\n    if (this.format._options.onMdat) {\n      const { data: u, start: m } = this.writer.stopTrackingWrites();\n      this.format._options.onMdat(u, m);\n    }\n    for (const u of i)\n      u.finalizedChunks.push(u.currentChunk), this.finalizedChunks.push(u.currentChunk), u.currentChunk = null;\n    t && await this.writer.flush();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  async onTrackClose(t) {\n    const e = await this.mutex.acquire();\n    if (t.type === \"subtitle\" && t.source._codec === \"webvtt\") {\n      const i = this.trackDatas.find((s) => s.track === t);\n      i && await this.processWebVTTCues(i, 1 / 0);\n    }\n    this.isFragmented && await this.interleaveSamples(), e();\n  }\n  /** Finalizes the file, making it ready for use. Must be called after all video and audio chunks have been added. */\n  async finalize() {\n    const t = await this.mutex.acquire();\n    for (const e of this.trackDatas)\n      e.type === \"subtitle\" && e.track.source._codec === \"webvtt\" && await this.processWebVTTCues(e, 1 / 0);\n    if (this.isFragmented)\n      await this.interleaveSamples(!0), await this.finalizeFragment(!1);\n    else\n      for (const e of this.trackDatas)\n        this.processTimestamps(e), await this.finalizeCurrentChunk(e);\n    if (this.fastStart === \"in-memory\") {\n      f(this.mdat);\n      let e;\n      for (let s = 0; s < 2; s++) {\n        const r = yt(this.trackDatas, this.creationTime), a = this.boxWriter.measureBox(r);\n        e = this.boxWriter.measureBox(this.mdat);\n        let n = this.writer.getPos() + a + e;\n        for (const o of this.finalizedChunks) {\n          o.offset = n;\n          for (const { data: c } of o.samples)\n            f(c), n += c.byteLength, e += c.byteLength;\n        }\n        if (n < 2 ** 32) break;\n        e >= 2 ** 32 && (this.mdat.largeSize = !0);\n      }\n      this.format._options.onMoov && this.writer.startTrackingWrites();\n      const i = yt(this.trackDatas, this.creationTime);\n      if (this.boxWriter.writeBox(i), this.format._options.onMoov) {\n        const { data: s, start: r } = this.writer.stopTrackingWrites();\n        this.format._options.onMoov(s, r);\n      }\n      this.format._options.onMdat && this.writer.startTrackingWrites(), this.mdat.size = e, this.boxWriter.writeBox(this.mdat);\n      for (const s of this.finalizedChunks)\n        for (const r of s.samples)\n          f(r.data), this.writer.write(r.data), r.data = null;\n      if (this.format._options.onMdat) {\n        const { data: s, start: r } = this.writer.stopTrackingWrites();\n        this.format._options.onMdat(s, r);\n      }\n    } else if (this.isFragmented) {\n      const e = this.writer.getPos(), i = co(this.trackDatas);\n      this.boxWriter.writeBox(i);\n      const s = this.writer.getPos() - e;\n      this.writer.seek(this.writer.getPos() - 4), this.boxWriter.writeU32(s);\n    } else {\n      f(this.mdat);\n      const e = this.boxWriter.offsets.get(this.mdat);\n      f(e !== void 0);\n      const i = this.writer.getPos() - e;\n      if (this.mdat.size = i, this.mdat.largeSize = i >= 2 ** 32, this.boxWriter.patchBox(this.mdat), this.format._options.onMdat) {\n        const { data: r, start: a } = this.writer.stopTrackingWrites();\n        this.format._options.onMdat(r, a);\n      }\n      this.format._options.onMoov && this.writer.startTrackingWrites();\n      const s = yt(this.trackDatas, this.creationTime);\n      if (this.boxWriter.writeBox(s), this.format._options.onMoov) {\n        const { data: r, start: a } = this.writer.stopTrackingWrites();\n        this.format._options.onMoov(r, a);\n      }\n    }\n    t();\n  }\n}, pi = class {\n  constructor(t) {\n    this.value = t;\n  }\n}, gi = class {\n  constructor(t) {\n    this.value = t;\n  }\n}, Br = class {\n  constructor(t) {\n    this.value = t;\n  }\n}, Co = [\n  440786851,\n  408125543\n  /* Segment */\n], _o = [\n  17138,\n  17139,\n  290298740,\n  357149030,\n  524531317,\n  374648427,\n  475249515,\n  423732329,\n  272869232,\n  307544935\n  /* Tags */\n], Or = [\n  ...Co,\n  ..._o\n], fs = (t) => t < 256 ? 1 : t < 65536 ? 2 : t < 1 << 24 ? 3 : t < 2 ** 32 ? 4 : t < 2 ** 40 ? 5 : 6, ms = (t) => t >= -64 && t < 64 ? 1 : t >= -8192 && t < 8192 ? 2 : t >= -1048576 && t < 1 << 20 ? 3 : t >= -134217728 && t < 1 << 27 ? 4 : t >= -17179869184 && t < 2 ** 34 ? 5 : 6, Io = (t) => {\n  if (t < 127)\n    return 1;\n  if (t < 16383)\n    return 2;\n  if (t < (1 << 21) - 1)\n    return 3;\n  if (t < (1 << 28) - 1)\n    return 4;\n  if (t < 2 ** 35 - 1)\n    return 5;\n  if (t < 2 ** 42 - 1)\n    return 6;\n  throw new Error(\"EBML varint size not supported \" + t);\n}, Eo = class {\n  constructor(t) {\n    this.writer = t, this.helper = new Uint8Array(8), this.helperView = new DataView(this.helper.buffer), this.offsets = /* @__PURE__ */ new WeakMap(), this.dataOffsets = /* @__PURE__ */ new WeakMap();\n  }\n  writeByte(t) {\n    this.helperView.setUint8(0, t), this.writer.write(this.helper.subarray(0, 1));\n  }\n  writeFloat32(t) {\n    this.helperView.setFloat32(0, t, !1), this.writer.write(this.helper.subarray(0, 4));\n  }\n  writeFloat64(t) {\n    this.helperView.setFloat64(0, t, !1), this.writer.write(this.helper);\n  }\n  writeUnsignedInt(t, e = fs(t)) {\n    let i = 0;\n    switch (e) {\n      case 6:\n        this.helperView.setUint8(i++, t / 2 ** 40 | 0);\n      case 5:\n        this.helperView.setUint8(i++, t / 2 ** 32 | 0);\n      case 4:\n        this.helperView.setUint8(i++, t >> 24);\n      case 3:\n        this.helperView.setUint8(i++, t >> 16);\n      case 2:\n        this.helperView.setUint8(i++, t >> 8);\n      case 1:\n        this.helperView.setUint8(i++, t);\n        break;\n      default:\n        throw new Error(\"Bad unsigned int size \" + e);\n    }\n    this.writer.write(this.helper.subarray(0, i));\n  }\n  writeSignedInt(t, e = ms(t)) {\n    t < 0 && (t += 2 ** (e * 8)), this.writeUnsignedInt(t, e);\n  }\n  writeVarInt(t, e = Io(t)) {\n    let i = 0;\n    switch (e) {\n      case 1:\n        this.helperView.setUint8(i++, 128 | t);\n        break;\n      case 2:\n        this.helperView.setUint8(i++, 64 | t >> 8), this.helperView.setUint8(i++, t);\n        break;\n      case 3:\n        this.helperView.setUint8(i++, 32 | t >> 16), this.helperView.setUint8(i++, t >> 8), this.helperView.setUint8(i++, t);\n        break;\n      case 4:\n        this.helperView.setUint8(i++, 16 | t >> 24), this.helperView.setUint8(i++, t >> 16), this.helperView.setUint8(i++, t >> 8), this.helperView.setUint8(i++, t);\n        break;\n      case 5:\n        this.helperView.setUint8(i++, 8 | t / 2 ** 32 & 7), this.helperView.setUint8(i++, t >> 24), this.helperView.setUint8(i++, t >> 16), this.helperView.setUint8(i++, t >> 8), this.helperView.setUint8(i++, t);\n        break;\n      case 6:\n        this.helperView.setUint8(i++, 4 | t / 2 ** 40 & 3), this.helperView.setUint8(i++, t / 2 ** 32 | 0), this.helperView.setUint8(i++, t >> 24), this.helperView.setUint8(i++, t >> 16), this.helperView.setUint8(i++, t >> 8), this.helperView.setUint8(i++, t);\n        break;\n      default:\n        throw new Error(\"Bad EBML varint size \" + e);\n    }\n    this.writer.write(this.helper.subarray(0, i));\n  }\n  // Assumes the string is ASCII\n  writeString(t) {\n    this.writer.write(new Uint8Array(t.split(\"\").map((e) => e.charCodeAt(0))));\n  }\n  writeEBML(t) {\n    if (t !== null) {\n      if (t instanceof Uint8Array)\n        this.writer.write(t);\n      else if (Array.isArray(t))\n        for (const e of t)\n          this.writeEBML(e);\n      else if (this.offsets.set(t, this.writer.getPos()), this.writeUnsignedInt(t.id), Array.isArray(t.data)) {\n        const e = this.writer.getPos(), i = t.size === -1 ? 1 : t.size ?? 4;\n        t.size === -1 ? this.writeByte(255) : this.writer.seek(this.writer.getPos() + i);\n        const s = this.writer.getPos();\n        if (this.dataOffsets.set(t, s), this.writeEBML(t.data), t.size !== -1) {\n          const r = this.writer.getPos() - s, a = this.writer.getPos();\n          this.writer.seek(e), this.writeVarInt(r, i), this.writer.seek(a);\n        }\n      } else if (typeof t.data == \"number\") {\n        const e = t.size ?? fs(t.data);\n        this.writeVarInt(e), this.writeUnsignedInt(t.data, e);\n      } else if (typeof t.data == \"string\")\n        this.writeVarInt(t.data.length), this.writeString(t.data);\n      else if (t.data instanceof Uint8Array)\n        this.writeVarInt(t.data.byteLength, t.size), this.writer.write(t.data);\n      else if (t.data instanceof pi)\n        this.writeVarInt(4), this.writeFloat32(t.data.value);\n      else if (t.data instanceof gi)\n        this.writeVarInt(8), this.writeFloat64(t.data.value);\n      else if (t.data instanceof Br) {\n        const e = t.size ?? ms(t.data.value);\n        this.writeVarInt(e), this.writeSignedInt(t.data.value, e);\n      }\n    }\n  }\n}, Mr = 8, Ar = 2, je = 4 + Mr, wi = class {\n  constructor(t) {\n    this.reader = t, this.pos = 0;\n  }\n  readBytes(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, new Uint8Array(e.buffer, i, t);\n  }\n  readU8() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 1);\n    return this.pos++, t.getUint8(e);\n  }\n  readS16() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 2);\n    return this.pos += 2, t.getInt16(e, !1);\n  }\n  readVarIntSize() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 1), i = t.getUint8(e);\n    let s = 1, r = 128;\n    for (; !(i & r) && s < 8; )\n      s++, r >>= 1;\n    return s;\n  }\n  readVarInt() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 1), i = t.getUint8(e);\n    let s = 1, r = 128;\n    for (; !(i & r) && s < Mr; )\n      s++, r >>= 1;\n    const { view: a, offset: n } = this.reader.getViewAndOffset(this.pos, this.pos + s);\n    let o = i & r - 1;\n    for (let c = 1; c < s; c++)\n      o *= 256, o += a.getUint8(n + c);\n    return this.pos += s, o;\n  }\n  readUnsignedInt(t) {\n    if (t < 1 || t > 8)\n      throw new Error(\"Bad unsigned int size \" + t);\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    let s = 0;\n    for (let r = 0; r < t; r++)\n      s *= 256, s += e.getUint8(i + r);\n    return this.pos += t, s;\n  }\n  readSignedInt(t) {\n    let e = this.readUnsignedInt(t);\n    return e & 1 << t * 8 - 1 && (e -= 2 ** (t * 8)), e;\n  }\n  readFloat(t) {\n    if (t === 0)\n      return 0;\n    if (t !== 4 && t !== 8)\n      throw new Error(\"Bad float size \" + t);\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t), s = t === 4 ? e.getFloat32(i, !1) : e.getFloat64(i, !1);\n    return this.pos += t, s;\n  }\n  readString(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, String.fromCharCode(...new Uint8Array(e.buffer, i, t));\n  }\n  readElementId() {\n    const t = this.readVarIntSize();\n    return this.readUnsignedInt(t);\n  }\n  readElementSize() {\n    let t = this.readU8();\n    return t === 255 ? t = null : (this.pos--, t = this.readVarInt(), t === 72057594037927940 && (t = null)), t;\n  }\n  readElementHeader() {\n    const t = this.readElementId(), e = this.readElementSize();\n    return { id: t, size: e };\n  }\n  /** Returns the byte offset in the file of the next element with a matching ID. */\n  async searchForNextElementId(t, e) {\n    const s = new Set(t);\n    for (; this.pos < e - je; ) {\n      this.reader.rangeIsLoaded(this.pos, this.pos + je) || await this.reader.loadRange(this.pos, Math.min(this.pos + 1048576, e));\n      const r = this.pos, a = this.readElementHeader();\n      if (s.has(a.id))\n        return r;\n      We(a.size), this.pos += a.size;\n    }\n    return null;\n  }\n}, ae = {\n  avc: \"V_MPEG4/ISO/AVC\",\n  hevc: \"V_MPEGH/ISO/HEVC\",\n  vp8: \"V_VP8\",\n  vp9: \"V_VP9\",\n  av1: \"V_AV1\",\n  aac: \"A_AAC\",\n  mp3: \"A_MPEG/L3\",\n  opus: \"A_OPUS\",\n  vorbis: \"A_VORBIS\",\n  flac: \"A_FLAC\",\n  \"pcm-u8\": \"A_PCM/INT/LIT\",\n  \"pcm-s16\": \"A_PCM/INT/LIT\",\n  \"pcm-s16be\": \"A_PCM/INT/BIG\",\n  \"pcm-s24\": \"A_PCM/INT/LIT\",\n  \"pcm-s24be\": \"A_PCM/INT/BIG\",\n  \"pcm-s32\": \"A_PCM/INT/LIT\",\n  \"pcm-s32be\": \"A_PCM/INT/BIG\",\n  \"pcm-f32\": \"A_PCM/FLOAT/IEEE\",\n  webvtt: \"S_TEXT/WEBVTT\"\n};\nfunction We(t) {\n  if (t === null)\n    throw new Error(\"Undefined element size is used in a place where it is not supported.\");\n}\nvar Po = -32768, Fo = 2 ** 15 - 1, ps = \"https://github.com/Vanilagy/webm-muxer\", gs = 6, ws = 5, Ro = {\n  video: 1,\n  audio: 2,\n  subtitle: 17\n}, Bo = class extends Ni {\n  constructor(t, e) {\n    super(t), this.trackDatas = [], this.segment = null, this.segmentInfo = null, this.seekHead = null, this.tracksElement = null, this.segmentDuration = null, this.cues = null, this.currentCluster = null, this.currentClusterStartMsTimestamp = null, this.currentClusterMaxMsTimestamp = null, this.trackDatasInCurrentCluster = /* @__PURE__ */ new Map(), this.duration = 0, this.writer = t._writer, this.format = e, this.ebmlWriter = new Eo(this.writer), this.format._options.streamable && (this.writer.ensureMonotonicity = !0);\n  }\n  async start() {\n    const t = await this.mutex.acquire();\n    this.writeEBMLHeader(), this.format._options.streamable || this.createSeekHead(), this.createSegmentInfo(), this.createCues(), await this.writer.flush(), t();\n  }\n  writeEBMLHeader() {\n    this.format._options.onEbmlHeader && this.writer.startTrackingWrites();\n    const t = { id: 440786851, data: [\n      { id: 17030, data: 1 },\n      { id: 17143, data: 1 },\n      { id: 17138, data: 4 },\n      { id: 17139, data: 8 },\n      { id: 17026, data: this.format instanceof qr ? \"webm\" : \"matroska\" },\n      { id: 17031, data: 2 },\n      { id: 17029, data: 2 }\n    ] };\n    if (this.ebmlWriter.writeEBML(t), this.format._options.onEbmlHeader) {\n      const { data: e, start: i } = this.writer.stopTrackingWrites();\n      this.format._options.onEbmlHeader(e, i);\n    }\n  }\n  /**\n   * Creates a SeekHead element which is positioned near the start of the file and allows the media player to seek to\n   * relevant sections more easily. Since we don't know the positions of those sections yet, we'll set them later.\n   */\n  createSeekHead() {\n    const t = new Uint8Array([28, 83, 187, 107]), e = new Uint8Array([21, 73, 169, 102]), i = new Uint8Array([22, 84, 174, 107]), s = { id: 290298740, data: [\n      { id: 19899, data: [\n        { id: 21419, data: t },\n        { id: 21420, size: 5, data: 0 }\n      ] },\n      { id: 19899, data: [\n        { id: 21419, data: e },\n        { id: 21420, size: 5, data: 0 }\n      ] },\n      { id: 19899, data: [\n        { id: 21419, data: i },\n        { id: 21420, size: 5, data: 0 }\n      ] }\n    ] };\n    this.seekHead = s;\n  }\n  createSegmentInfo() {\n    const t = { id: 17545, data: new gi(0) };\n    this.segmentDuration = t;\n    const e = { id: 357149030, data: [\n      { id: 2807729, data: 1e6 },\n      { id: 19840, data: ps },\n      { id: 22337, data: ps },\n      this.format._options.streamable ? null : t\n    ] };\n    this.segmentInfo = e;\n  }\n  createTracks() {\n    const t = { id: 374648427, data: [] };\n    this.tracksElement = t;\n    for (const e of this.trackDatas) {\n      const i = ae[e.track.source._codec];\n      f(i);\n      let s = 0;\n      if (e.type === \"audio\" && e.track.source._codec === \"opus\") {\n        s = 1e6 * 80;\n        const r = e.info.decoderConfig.description;\n        if (r) {\n          const a = te(r), n = Vt(a);\n          s = Math.round(1e9 * (n.preSkip / Ai));\n        }\n      }\n      t.data.push({ id: 174, data: [\n        { id: 215, data: e.track.id },\n        { id: 29637, data: e.track.id },\n        { id: 131, data: Ro[e.type] },\n        { id: 156, data: 0 },\n        { id: 2274716, data: e.track.metadata.languageCode ?? fe },\n        { id: 134, data: i },\n        { id: 22186, data: 0 },\n        { id: 22203, data: s },\n        e.type === \"video\" ? this.videoSpecificTrackInfo(e) : null,\n        e.type === \"audio\" ? this.audioSpecificTrackInfo(e) : null,\n        e.type === \"subtitle\" ? this.subtitleSpecificTrackInfo(e) : null\n      ] });\n    }\n  }\n  videoSpecificTrackInfo(t) {\n    const { frameRate: e, rotation: i } = t.track.metadata, s = [\n      t.info.decoderConfig.description ? {\n        id: 25506,\n        data: te(t.info.decoderConfig.description)\n      } : null,\n      e ? {\n        id: 2352003,\n        data: 1e9 / e\n      } : null\n    ], r = i ? Fi(-i) : 0, a = t.info.decoderConfig.colorSpace, n = { id: 224, data: [\n      { id: 176, data: t.info.width },\n      { id: 186, data: t.info.height },\n      Js(a) ? {\n        id: 21936,\n        data: [\n          {\n            id: 21937,\n            data: Ye[a.matrix]\n          },\n          {\n            id: 21946,\n            data: Ge[a.transfer]\n          },\n          {\n            id: 21947,\n            data: Ke[a.primaries]\n          },\n          {\n            id: 21945,\n            data: a.fullRange ? 2 : 1\n          }\n        ]\n      } : null,\n      r ? {\n        id: 30320,\n        data: [\n          {\n            id: 30321,\n            data: 0\n            // rectangular\n          },\n          {\n            id: 30325,\n            data: new pi((r + 180) % 360 - 180)\n            // [0, 270] -> [-180, 90]\n          }\n        ]\n      } : null\n    ] };\n    return s.push(n), s;\n  }\n  audioSpecificTrackInfo(t) {\n    const e = K.includes(t.track.source._codec) ? Be(t.track.source._codec) : null;\n    return [\n      t.info.decoderConfig.description ? {\n        id: 25506,\n        data: te(t.info.decoderConfig.description)\n      } : null,\n      { id: 225, data: [\n        { id: 181, data: new pi(t.info.sampleRate) },\n        { id: 159, data: t.info.numberOfChannels },\n        e ? { id: 25188, data: 8 * e.sampleSize } : null\n      ] }\n    ];\n  }\n  subtitleSpecificTrackInfo(t) {\n    return [\n      { id: 25506, data: he.encode(t.info.config.description) }\n    ];\n  }\n  createSegment() {\n    const t = {\n      id: 408125543,\n      size: this.format._options.streamable ? -1 : gs,\n      data: [\n        this.format._options.streamable ? null : this.seekHead,\n        this.segmentInfo,\n        this.tracksElement\n      ]\n    };\n    if (this.segment = t, this.format._options.onSegmentHeader && this.writer.startTrackingWrites(), this.ebmlWriter.writeEBML(t), this.format._options.onSegmentHeader) {\n      const { data: e, start: i } = this.writer.stopTrackingWrites();\n      this.format._options.onSegmentHeader(e, i);\n    }\n  }\n  createCues() {\n    this.cues = { id: 475249515, data: [] };\n  }\n  get segmentDataOffset() {\n    return f(this.segment), this.ebmlWriter.dataOffsets.get(this.segment);\n  }\n  getVideoTrackData(t, e) {\n    const i = this.trackDatas.find((r) => r.track === t);\n    if (i)\n      return i;\n    ur(e), f(e), f(e.decoderConfig), f(e.decoderConfig.codedWidth !== void 0), f(e.decoderConfig.codedHeight !== void 0);\n    const s = {\n      track: t,\n      type: \"video\",\n      info: {\n        width: e.decoderConfig.codedWidth,\n        height: e.decoderConfig.codedHeight,\n        decoderConfig: e.decoderConfig\n      },\n      chunkQueue: [],\n      lastWrittenMsTimestamp: null\n    };\n    return t.source._codec === \"vp9\" ? s.info.decoderConfig = {\n      ...s.info.decoderConfig,\n      description: new Uint8Array(\n        ja(s.info.decoderConfig.codec)\n      )\n    } : t.source._codec === \"av1\" && (s.info.decoderConfig = {\n      ...s.info.decoderConfig,\n      description: new Uint8Array(\n        nr(s.info.decoderConfig.codec)\n      )\n    }), this.trackDatas.push(s), this.trackDatas.sort((r, a) => r.track.id - a.track.id), s;\n  }\n  getAudioTrackData(t, e) {\n    const i = this.trackDatas.find((r) => r.track === t);\n    if (i)\n      return i;\n    zi(e), f(e), f(e.decoderConfig);\n    const s = {\n      track: t,\n      type: \"audio\",\n      info: {\n        numberOfChannels: e.decoderConfig.numberOfChannels,\n        sampleRate: e.decoderConfig.sampleRate,\n        decoderConfig: e.decoderConfig\n      },\n      chunkQueue: [],\n      lastWrittenMsTimestamp: null\n    };\n    return this.trackDatas.push(s), this.trackDatas.sort((r, a) => r.track.id - a.track.id), s;\n  }\n  getSubtitleTrackData(t, e) {\n    const i = this.trackDatas.find((r) => r.track === t);\n    if (i)\n      return i;\n    fr(e), f(e), f(e.config);\n    const s = {\n      track: t,\n      type: \"subtitle\",\n      info: {\n        config: e.config\n      },\n      chunkQueue: [],\n      lastWrittenMsTimestamp: null\n    };\n    return this.trackDatas.push(s), this.trackDatas.sort((r, a) => r.track.id - a.track.id), s;\n  }\n  async addEncodedVideoPacket(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getVideoTrackData(t, i), a = e.type === \"key\";\n      let n = this.validateAndNormalizeTimestamp(r.track, e.timestamp, a), o = e.duration;\n      t.metadata.frameRate !== void 0 && (n = ni(n, 1 / t.metadata.frameRate), o = ni(o, 1 / t.metadata.frameRate));\n      const c = this.createInternalChunk(e.data, n, o, e.type);\n      t.source._codec === \"vp9\" && this.fixVP9ColorSpace(r, c), r.chunkQueue.push(c), await this.interleaveChunks();\n    } finally {\n      s();\n    }\n  }\n  async addEncodedAudioPacket(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getAudioTrackData(t, i), a = e.type === \"key\", n = this.validateAndNormalizeTimestamp(r.track, e.timestamp, a), o = this.createInternalChunk(e.data, n, e.duration, e.type);\n      r.chunkQueue.push(o), await this.interleaveChunks();\n    } finally {\n      s();\n    }\n  }\n  async addSubtitleCue(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getSubtitleTrackData(t, i), a = this.validateAndNormalizeTimestamp(r.track, e.timestamp, !0);\n      let n = e.text;\n      const o = Math.round(a * 1e3);\n      Pt.lastIndex = 0, n = n.replace(Pt, (h) => {\n        const m = sn(h.slice(1, -1)) - o;\n        return `<${gr(m)}>`;\n      });\n      const c = he.encode(n), l = `${e.settings ?? \"\"}\n${e.identifier ?? \"\"}\n${e.notes ?? \"\"}`, d = this.createInternalChunk(\n        c,\n        a,\n        e.duration,\n        \"key\",\n        l.trim() ? he.encode(l) : null\n      );\n      r.chunkQueue.push(d), await this.interleaveChunks();\n    } finally {\n      s();\n    }\n  }\n  async interleaveChunks(t = !1) {\n    if (!t) {\n      for (const e of this.output._tracks)\n        if (!e.source._closed && !this.trackDatas.some((i) => i.track === e))\n          return;\n    }\n    e:\n      for (; ; ) {\n        let e = null, i = 1 / 0;\n        for (const r of this.trackDatas) {\n          if (!t && r.chunkQueue.length === 0 && !r.track.source._closed)\n            break e;\n          r.chunkQueue.length > 0 && r.chunkQueue[0].timestamp < i && (e = r, i = r.chunkQueue[0].timestamp);\n        }\n        if (!e)\n          break;\n        const s = e.chunkQueue.shift();\n        this.writeBlock(e, s);\n      }\n    t || await this.writer.flush();\n  }\n  /**\n   * Due to [a bug in Chromium](https://bugs.chromium.org/p/chromium/issues/detail?id=1377842), VP9 streams often\n  \t * lack color space information. This method patches in that information.\n   */\n  fixVP9ColorSpace(t, e) {\n    if (e.type !== \"key\" || !t.info.decoderConfig.colorSpace || !t.info.decoderConfig.colorSpace.matrix) return;\n    const i = new Se(e.data);\n    if (i.readBits(2) !== 2) return;\n    const s = i.readBits(1), a = (i.readBits(1) << 1) + s;\n    if (a === 3 && i.skipBits(1), i.readBits(1) || i.readBits(1) !== 0 || (i.skipBits(2), i.readBits(24) !== 4817730)) return;\n    a >= 2 && i.skipBits(1);\n    const l = {\n      rgb: 7,\n      bt709: 2,\n      bt470bg: 1,\n      smpte170m: 3\n    }[t.info.decoderConfig.colorSpace.matrix];\n    Ra(e.data, i.pos, i.pos + 3, l);\n  }\n  /** Converts a read-only external chunk into an internal one for easier use. */\n  createInternalChunk(t, e, i, s, r = null) {\n    return {\n      data: t,\n      type: s,\n      timestamp: e,\n      duration: i,\n      additions: r\n    };\n  }\n  /** Writes a block containing media data to the file. */\n  writeBlock(t, e) {\n    this.segment || (this.createTracks(), this.createSegment());\n    const i = Math.round(1e3 * e.timestamp), s = this.trackDatas.every((l) => {\n      if (t === l)\n        return e.type === \"key\";\n      const d = l.chunkQueue[0];\n      return d ? d.type === \"key\" : l.track.source._closed;\n    });\n    let r = !1;\n    if (!this.currentCluster)\n      r = !0;\n    else {\n      f(this.currentClusterStartMsTimestamp !== null), f(this.currentClusterMaxMsTimestamp !== null);\n      const l = i - this.currentClusterStartMsTimestamp;\n      r = s && i > this.currentClusterMaxMsTimestamp && l >= 1e3 * (this.format._options.minimumClusterDuration ?? 1) || l > Fo;\n    }\n    r && this.createNewCluster(i);\n    const a = i - this.currentClusterStartMsTimestamp;\n    if (a < Po)\n      return;\n    const n = new Uint8Array(4), o = new DataView(n.buffer);\n    o.setUint8(0, 128 | t.track.id), o.setInt16(1, a, !1);\n    const c = Math.round(1e3 * e.duration);\n    if (c === 0 && !e.additions) {\n      o.setUint8(3, +(e.type === \"key\") << 7);\n      const l = { id: 163, data: [\n        n,\n        e.data\n      ] };\n      this.ebmlWriter.writeEBML(l);\n    } else {\n      const l = { id: 160, data: [\n        { id: 161, data: [\n          n,\n          e.data\n        ] },\n        e.type === \"delta\" ? {\n          id: 251,\n          data: new Br(t.lastWrittenMsTimestamp - i)\n        } : null,\n        e.additions ? { id: 30113, data: [\n          { id: 166, data: [\n            { id: 165, data: e.additions },\n            { id: 238, data: 1 }\n          ] }\n        ] } : null,\n        c > 0 ? { id: 155, data: c } : null\n      ] };\n      this.ebmlWriter.writeEBML(l);\n    }\n    this.duration = Math.max(this.duration, i + c), t.lastWrittenMsTimestamp = i, this.trackDatasInCurrentCluster.has(t) || this.trackDatasInCurrentCluster.set(t, {\n      firstMsTimestamp: i\n    }), this.currentClusterMaxMsTimestamp = Math.max(this.currentClusterMaxMsTimestamp, i);\n  }\n  /** Creates a new Cluster element to contain media chunks. */\n  createNewCluster(t) {\n    this.currentCluster && this.finalizeCurrentCluster(), this.format._options.onCluster && this.writer.startTrackingWrites(), this.currentCluster = {\n      id: 524531317,\n      size: this.format._options.streamable ? -1 : ws,\n      data: [\n        { id: 231, data: t }\n      ]\n    }, this.ebmlWriter.writeEBML(this.currentCluster), this.currentClusterStartMsTimestamp = t, this.currentClusterMaxMsTimestamp = t, this.trackDatasInCurrentCluster.clear();\n  }\n  finalizeCurrentCluster() {\n    if (f(this.currentCluster), !this.format._options.streamable) {\n      const s = this.writer.getPos() - this.ebmlWriter.dataOffsets.get(this.currentCluster), r = this.writer.getPos();\n      this.writer.seek(this.ebmlWriter.offsets.get(this.currentCluster) + 4), this.ebmlWriter.writeVarInt(s, ws), this.writer.seek(r);\n    }\n    if (this.format._options.onCluster) {\n      f(this.currentClusterStartMsTimestamp !== null);\n      const { data: s, start: r } = this.writer.stopTrackingWrites();\n      this.format._options.onCluster(s, r, this.currentClusterStartMsTimestamp / 1e3);\n    }\n    const t = this.ebmlWriter.offsets.get(this.currentCluster) - this.segmentDataOffset, e = /* @__PURE__ */ new Map();\n    for (const [s, { firstMsTimestamp: r }] of this.trackDatasInCurrentCluster)\n      e.has(r) || e.set(r, []), e.get(r).push(s);\n    const i = [...e.entries()].sort((s, r) => s[0] - r[0]);\n    for (const [s, r] of i)\n      f(this.cues), this.cues.data.push({ id: 187, data: [\n        { id: 179, data: s },\n        // Create CueTrackPositions for each track that starts at this timestamp\n        ...r.map((a) => ({ id: 183, data: [\n          { id: 247, data: a.track.id },\n          { id: 241, data: t }\n        ] }))\n      ] });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  async onTrackClose() {\n    const t = await this.mutex.acquire();\n    await this.interleaveChunks(), t();\n  }\n  /** Finalizes the file, making it ready for use. Must be called after all media chunks have been added. */\n  async finalize() {\n    const t = await this.mutex.acquire();\n    if (this.segment || (this.createTracks(), this.createSegment()), await this.interleaveChunks(!0), this.currentCluster && this.finalizeCurrentCluster(), f(this.cues), this.ebmlWriter.writeEBML(this.cues), !this.format._options.streamable) {\n      const e = this.writer.getPos(), i = this.writer.getPos() - this.segmentDataOffset;\n      this.writer.seek(this.ebmlWriter.offsets.get(this.segment) + 4), this.ebmlWriter.writeVarInt(i, gs), this.segmentDuration.data = new gi(this.duration), this.writer.seek(this.ebmlWriter.offsets.get(this.segmentDuration)), this.ebmlWriter.writeEBML(this.segmentDuration), this.seekHead.data[0].data[1].data = this.ebmlWriter.offsets.get(this.cues) - this.segmentDataOffset, this.seekHead.data[1].data[1].data = this.ebmlWriter.offsets.get(this.segmentInfo) - this.segmentDataOffset, this.seekHead.data[2].data[1].data = this.ebmlWriter.offsets.get(this.tracksElement) - this.segmentDataOffset, this.writer.seek(this.ebmlWriter.offsets.get(this.seekHead)), this.ebmlWriter.writeEBML(this.seekHead), this.writer.seek(e);\n    }\n    t();\n  }\n}, Oo = 4, Mo = {\n  // Layer 3\n  1: [-1, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1],\n  // Layer 2\n  2: [-1, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1],\n  // Layer 1\n  3: [-1, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1]\n}, Ao = {\n  // Layer 3\n  1: [-1, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, -1],\n  // Layer 2\n  2: [-1, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1],\n  // Layer 1\n  3: [-1, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1]\n}, zo = {\n  // MPEG Version 2.5\n  0: [11025, 12e3, 8e3, -1],\n  // MPEG Version 2 (ISO/IEC 13818-3)\n  2: [22050, 24e3, 16e3, -1],\n  // MPEG Version 1 (ISO/IEC 11172-3)\n  3: [44100, 48e3, 32e3, -1]\n}, Uo = 1483304551, Do = 1231971951, No = (t, e, i, s) => Math.floor(t === 3 ? (12 * e / i + s) * 4 : 144 * e / i + s), Vo = (t, e) => t === 3 ? e === 3 ? 21 : 36 : e === 3 ? 13 : 21, Lo = (t, e) => {\n  const i = e.pos, s = t >>> 24, r = t >>> 16 & 255, a = t >>> 8 & 255, n = t & 255;\n  if (s !== 255 && r !== 255 && a !== 255 && n !== 255)\n    return e.pos += 4, null;\n  if (e.pos += 1, (r & 224) !== 224)\n    return null;\n  const o = r >> 3 & 3, c = r >> 1 & 3, l = a >> 4 & 15, d = a >> 2 & 3, h = a >> 1 & 1, u = n >> 6 & 3, m = n >> 4 & 3, p = n >> 3 & 1, g = n >> 2 & 1, w = n & 3, b = o === 3 ? Mo[c]?.[l] : Ao[c]?.[l];\n  if (!b || b === -1)\n    return null;\n  const x = b * 1e3, S = zo[o]?.[d];\n  if (!S || S === -1)\n    return null;\n  const k = No(c, x, S, h);\n  if (e.fileSize !== null && e.fileSize - i < k)\n    return null;\n  let y;\n  return o === 3 ? y = c === 3 ? 384 : 1152 : c === 3 ? y = 384 : c === 2 ? y = 1152 : y = 576, {\n    startPos: i,\n    totalSize: k,\n    mpegVersionId: o,\n    layer: c,\n    bitrate: x,\n    frequencyIndex: d,\n    sampleRate: S,\n    channel: u,\n    modeExtension: m,\n    copyright: p,\n    original: g,\n    emphasis: w,\n    audioSamplesInFrame: y\n  };\n}, yi = 1399285583, Wo = 79764919, zr = new Uint32Array(256);\nfor (let t = 0; t < 256; t++) {\n  let e = t << 24;\n  for (let i = 0; i < 8; i++)\n    e = e & 2147483648 ? e << 1 ^ Wo : e << 1;\n  zr[t] = e >>> 0 & 4294967295;\n}\nvar Ur = (t) => {\n  const e = Re(t), i = e.getUint32(22, !0);\n  e.setUint32(22, 0, !0);\n  let s = 0;\n  for (let r = 0; r < t.length; r++) {\n    const a = t[r];\n    s = (s << 8 ^ zr[s >>> 24 ^ a]) >>> 0;\n  }\n  return e.setUint32(22, i, !0), s;\n}, Dr = (t, e, i) => {\n  let s = 0, r = null;\n  if (t.length > 0)\n    if (e.codec === \"vorbis\") {\n      f(e.vorbisInfo);\n      const a = e.vorbisInfo.modeBlockflags.length, o = (1 << Da(a - 1)) - 1 << 1, c = (t[0] & o) >> 1;\n      if (c >= e.vorbisInfo.modeBlockflags.length)\n        throw new Error(\"Invalid mode number.\");\n      let l = i;\n      const d = e.vorbisInfo.modeBlockflags[c];\n      if (r = e.vorbisInfo.blocksizes[d], d === 1) {\n        const h = (o | 1) + 1, u = t[0] & h ? 1 : 0;\n        l = e.vorbisInfo.blocksizes[u];\n      }\n      s = l !== null ? l + r >> 2 : 0;\n    } else e.codec === \"opus\" && (s = gn(t).durationInSamples);\n  return {\n    durationInSamples: s,\n    vorbisBlockSize: r\n  };\n}, ct = 27, qe = 282, Nr = qe + 255 * 255, Vr = class {\n  constructor(t) {\n    this.reader = t, this.pos = 0;\n  }\n  readBytes(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, new Uint8Array(e.buffer, i, t);\n  }\n  readU8() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 1);\n    return this.pos += 1, t.getUint8(e);\n  }\n  readU32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getUint32(e, !0);\n  }\n  readI32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getInt32(e, !0);\n  }\n  readI64() {\n    const t = this.readU32();\n    return this.readI32() * 4294967296 + t;\n  }\n  readAscii(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    this.pos += t;\n    let s = \"\";\n    for (let r = 0; r < t; r++)\n      s += String.fromCharCode(e.getUint8(i + r));\n    return s;\n  }\n  readPageHeader() {\n    const t = this.pos;\n    if (this.readU32() !== yi)\n      return null;\n    this.pos += 1;\n    const i = this.readU8(), s = this.readI64(), r = this.readU32(), a = this.readU32(), n = this.readU32(), o = this.readU8(), c = new Uint8Array(o);\n    for (let u = 0; u < o; u++)\n      c[u] = this.readU8();\n    const l = 27 + o, d = c.reduce((u, m) => u + m, 0), h = l + d;\n    return {\n      headerStartPos: t,\n      totalSize: h,\n      dataStartPos: t + l,\n      dataSize: d,\n      headerType: i,\n      granulePosition: s,\n      serialNumber: r,\n      sequenceNumber: a,\n      checksum: n,\n      lacingValues: c\n    };\n  }\n  findNextPageHeader(t) {\n    for (; this.pos < t - 3; ) {\n      const e = this.readU32(), i = e & 255, s = e >>> 8 & 255, r = e >>> 16 & 255, a = e >>> 24 & 255, n = 79;\n      if (!(i !== n && s !== n && r !== n && a !== n)) {\n        if (this.pos -= 4, e === yi)\n          return !0;\n        this.pos += 1;\n      }\n    }\n    return !1;\n  }\n}, Ho = 8192, $o = class extends Ni {\n  constructor(t, e) {\n    super(t), this.trackDatas = [], this.bosPagesWritten = !1, this.pageBytes = new Uint8Array(Nr), this.pageView = new DataView(this.pageBytes.buffer), this.format = e, this.writer = t._writer, this.writer.ensureMonotonicity = !0;\n  }\n  async start() {\n  }\n  addEncodedVideoPacket() {\n    throw new Error(\"Video tracks are not supported.\");\n  }\n  getTrackData(t, e) {\n    const i = this.trackDatas.find((a) => a.track === t);\n    if (i)\n      return i;\n    let s;\n    do\n      s = Math.floor(2 ** 32 * Math.random());\n    while (this.trackDatas.some((a) => a.serialNumber === s));\n    f(t.source._codec === \"vorbis\" || t.source._codec === \"opus\"), zi(e), f(e), f(e.decoderConfig);\n    const r = {\n      track: t,\n      serialNumber: s,\n      internalSampleRate: t.source._codec === \"opus\" ? Ai : e.decoderConfig.sampleRate,\n      codecInfo: {\n        codec: t.source._codec,\n        vorbisInfo: null,\n        opusInfo: null\n      },\n      vorbisLastBlocksize: null,\n      packetQueue: [],\n      currentTimestampInSamples: 0,\n      pagesWritten: 0,\n      currentGranulePosition: 0,\n      currentLacingValues: [],\n      currentPageData: [],\n      currentPageSize: 27,\n      currentPageStartsWithFreshPacket: !0\n    };\n    return this.queueHeaderPackets(r, e), this.trackDatas.push(r), r;\n  }\n  queueHeaderPackets(t, e) {\n    if (f(e.decoderConfig), t.track.source._codec === \"vorbis\") {\n      f(e.decoderConfig.description);\n      const i = te(e.decoderConfig.description);\n      if (i[0] !== 2)\n        throw new TypeError(\"First byte of Vorbis decoder description must be 2.\");\n      let s = 1;\n      const r = () => {\n        let m = 0;\n        for (; ; ) {\n          const p = i[s++];\n          if (p === void 0)\n            throw new TypeError(\"Vorbis decoder description is too short.\");\n          if (m += p, p < 255)\n            return m;\n        }\n      }, a = r(), n = r();\n      if (i.length - s <= 0)\n        throw new TypeError(\"Vorbis decoder description is too short.\");\n      const c = i.subarray(s, s += a), l = i.subarray(s, s += n), d = i.subarray(s);\n      t.packetQueue.push({\n        data: c,\n        endGranulePosition: 0,\n        timestamp: 0,\n        forcePageFlush: !0\n      }, {\n        data: l,\n        endGranulePosition: 0,\n        timestamp: 0,\n        forcePageFlush: !1\n      }, {\n        data: d,\n        endGranulePosition: 0,\n        timestamp: 0,\n        forcePageFlush: !0\n        // The last header packet must flush the page\n      });\n      const u = Re(c).getUint8(28);\n      t.codecInfo.vorbisInfo = {\n        blocksizes: [\n          1 << (u & 15),\n          1 << (u >> 4)\n        ],\n        modeBlockflags: Sr(d).modeBlockflags\n      };\n    } else if (t.track.source._codec === \"opus\") {\n      if (!e.decoderConfig.description)\n        throw new TypeError(\"For Ogg, Opus decoder description is required.\");\n      const i = te(e.decoderConfig.description), s = new Uint8Array(16), r = new DataView(s.buffer);\n      r.setUint32(0, 1332770163, !1), r.setUint32(4, 1415669619, !1), r.setUint32(8, 0, !0), r.setUint32(12, 0, !0), t.packetQueue.push({\n        data: i,\n        endGranulePosition: 0,\n        timestamp: 0,\n        forcePageFlush: !0\n      }, {\n        data: s,\n        endGranulePosition: 0,\n        timestamp: 0,\n        forcePageFlush: !0\n        // The last header packet must flush the page\n      }), t.codecInfo.opusInfo = {\n        preSkip: Vt(i).preSkip\n      };\n    }\n  }\n  async addEncodedAudioPacket(t, e, i) {\n    const s = await this.mutex.acquire();\n    try {\n      const r = this.getTrackData(t, i);\n      this.validateAndNormalizeTimestamp(r.track, e.timestamp, e.type === \"key\");\n      const a = r.currentTimestampInSamples, { durationInSamples: n, vorbisBlockSize: o } = Dr(\n        e.data,\n        r.codecInfo,\n        r.vorbisLastBlocksize\n      );\n      r.currentTimestampInSamples += n, r.vorbisLastBlocksize = o, r.packetQueue.push({\n        data: e.data,\n        endGranulePosition: r.currentTimestampInSamples,\n        timestamp: a / r.internalSampleRate,\n        forcePageFlush: !1\n      }), await this.interleavePages();\n    } finally {\n      s();\n    }\n  }\n  addSubtitleCue() {\n    throw new Error(\"Subtitle tracks are not supported.\");\n  }\n  async interleavePages(t = !1) {\n    if (!this.bosPagesWritten) {\n      for (const e of this.output._tracks)\n        if (!e.source._closed && !this.trackDatas.some((i) => i.track === e))\n          return;\n      for (const e of this.trackDatas)\n        for (; e.packetQueue.length > 0; ) {\n          const i = e.packetQueue.shift();\n          if (this.writePacket(e, i, !1), i.forcePageFlush)\n            break;\n        }\n      this.bosPagesWritten = !0;\n    }\n    e:\n      for (; ; ) {\n        let e = null, i = 1 / 0;\n        for (const a of this.trackDatas) {\n          if (!t && a.packetQueue.length <= 1 && !a.track.source._closed)\n            break e;\n          a.packetQueue.length > 0 && a.packetQueue[0].timestamp < i && (e = a, i = a.packetQueue[0].timestamp);\n        }\n        if (!e)\n          break;\n        const s = e.packetQueue.shift(), r = e.packetQueue.length === 0;\n        this.writePacket(e, s, r);\n      }\n    t || await this.writer.flush();\n  }\n  writePacket(t, e, i) {\n    let s = e.data.length, r = 0, a = 0;\n    for (; ; ) {\n      t.currentLacingValues.length === 0 && r > 0 && (t.currentPageStartsWithFreshPacket = !1);\n      const o = Math.min(255, s);\n      t.currentLacingValues.push(o), t.currentPageSize++, a += o;\n      const c = s < 255;\n      if (t.currentLacingValues.length === 255) {\n        const l = e.data.subarray(r, a);\n        if (r = a, t.currentPageData.push(l), t.currentPageSize += l.length, this.writePage(t, i && c), c)\n          return;\n      }\n      if (c)\n        break;\n      s -= 255;\n    }\n    const n = e.data.subarray(r);\n    t.currentPageData.push(n), t.currentPageSize += n.length, t.currentGranulePosition = e.endGranulePosition, (t.currentPageSize >= Ho || e.forcePageFlush) && this.writePage(t, i);\n  }\n  writePage(t, e) {\n    this.pageView.setUint32(0, yi, !0), this.pageView.setUint8(4, 0);\n    let i = 0;\n    t.currentPageStartsWithFreshPacket || (i |= 1), t.pagesWritten === 0 && (i |= 2), e && (i |= 4), this.pageView.setUint8(5, i);\n    const s = t.currentLacingValues.every((o) => o === 255) ? -1 : t.currentGranulePosition;\n    Ua(this.pageView, 6, s), this.pageView.setUint32(14, t.serialNumber, !0), this.pageView.setUint32(18, t.pagesWritten, !0), this.pageView.setUint32(22, 0, !0), this.pageView.setUint8(26, t.currentLacingValues.length), this.pageBytes.set(t.currentLacingValues, 27);\n    let r = 27 + t.currentLacingValues.length;\n    for (const o of t.currentPageData)\n      this.pageBytes.set(o, r), r += o.length;\n    const a = this.pageBytes.subarray(0, r), n = Ur(a);\n    if (this.pageView.setUint32(22, n, !0), t.pagesWritten++, t.currentLacingValues.length = 0, t.currentPageData.length = 0, t.currentPageSize = 27, t.currentPageStartsWithFreshPacket = !0, this.format._options.onPage && this.writer.startTrackingWrites(), this.writer.write(a), this.format._options.onPage) {\n      const { data: o, start: c } = this.writer.stopTrackingWrites();\n      this.format._options.onPage(o, c, t.track.source);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  async onTrackClose() {\n    const t = await this.mutex.acquire();\n    await this.interleavePages(), t();\n  }\n  async finalize() {\n    const t = await this.mutex.acquire();\n    await this.interleavePages(!0);\n    for (const e of this.trackDatas)\n      e.currentLacingValues.length > 0 && this.writePage(e, !0);\n    t();\n  }\n}, mt = class {\n  constructor(t) {\n    this.input = t;\n  }\n}, me = new Uint8Array(0), G = class bi {\n  constructor(e, i, s, r, a = -1, n) {\n    if (this.data = e, this.type = i, this.timestamp = s, this.duration = r, this.sequenceNumber = a, e === me && n === void 0)\n      throw new Error(\n        \"Internal error: byteLength must be explicitly provided when constructing metadata-only packets.\"\n      );\n    if (n === void 0 && (n = e.byteLength), !(e instanceof Uint8Array))\n      throw new TypeError(\"data must be a Uint8Array.\");\n    if (i !== \"key\" && i !== \"delta\")\n      throw new TypeError('type must be either \"key\" or \"delta\".');\n    if (!Number.isFinite(s))\n      throw new TypeError(\"timestamp must be a number.\");\n    if (!Number.isFinite(r) || r < 0)\n      throw new TypeError(\"duration must be a non-negative number.\");\n    if (!Number.isFinite(a))\n      throw new TypeError(\"sequenceNumber must be a number.\");\n    if (!Number.isInteger(n) || n < 0)\n      throw new TypeError(\"byteLength must be a non-negative integer.\");\n    this.byteLength = n;\n  }\n  /** If this packet is a metadata-only packet. Metadata-only packets don't contain their packet data. */\n  get isMetadataOnly() {\n    return this.data === me;\n  }\n  /** The timestamp of this packet in microseconds. */\n  get microsecondTimestamp() {\n    return Math.trunc(be * this.timestamp);\n  }\n  /** The duration of this packet in microseconds. */\n  get microsecondDuration() {\n    return Math.trunc(be * this.duration);\n  }\n  /** Converts this packet to an EncodedVideoChunk for use with the WebCodecs API. */\n  toEncodedVideoChunk() {\n    if (this.isMetadataOnly)\n      throw new TypeError(\"Metadata-only packets cannot be converted to a video chunk.\");\n    if (typeof EncodedVideoChunk > \"u\")\n      throw new Error(\"Your browser does not support EncodedVideoChunk.\");\n    return new EncodedVideoChunk({\n      data: this.data,\n      type: this.type,\n      timestamp: this.microsecondTimestamp,\n      duration: this.microsecondDuration\n    });\n  }\n  /** Converts this packet to an EncodedAudioChunk for use with the WebCodecs API. */\n  toEncodedAudioChunk() {\n    if (this.isMetadataOnly)\n      throw new TypeError(\"Metadata-only packets cannot be converted to an audio chunk.\");\n    if (typeof EncodedAudioChunk > \"u\")\n      throw new Error(\"Your browser does not support EncodedAudioChunk.\");\n    return new EncodedAudioChunk({\n      data: this.data,\n      type: this.type,\n      timestamp: this.microsecondTimestamp,\n      duration: this.microsecondDuration\n    });\n  }\n  /**\n   * Creates an EncodedPacket from an EncodedVideoChunk or EncodedAudioChunk. This method is useful for converting\n   * chunks from the WebCodecs API to EncodedPackets.\n   */\n  static fromEncodedChunk(e) {\n    if (!(e instanceof EncodedVideoChunk || e instanceof EncodedAudioChunk))\n      throw new TypeError(\"chunk must be an EncodedVideoChunk or EncodedAudioChunk.\");\n    const i = new Uint8Array(e.byteLength);\n    return e.copyTo(i), new bi(\n      i,\n      e.type,\n      e.timestamp / 1e6,\n      (e.duration ?? 0) / 1e6\n    );\n  }\n  /** Clones this packet while optionally updating timing information. */\n  clone(e) {\n    if (e !== void 0 && (typeof e != \"object\" || e === null))\n      throw new TypeError(\"options, when provided, must be an object.\");\n    if (e?.timestamp !== void 0 && !Number.isFinite(e.timestamp))\n      throw new TypeError(\"options.timestamp, when provided, must be a number.\");\n    if (e?.duration !== void 0 && !Number.isFinite(e.duration))\n      throw new TypeError(\"options.duration, when provided, must be a number.\");\n    return new bi(\n      this.data,\n      this.type,\n      e?.timestamp ?? this.timestamp,\n      e?.duration ?? this.duration,\n      this.sequenceNumber,\n      this.byteLength\n    );\n  }\n}, jo = (t) => {\n  let s = t, r = 4096, a = 0, n = 12, o = 0;\n  for (s < 0 && (s = -s, a = 128), s += 33, s > 8191 && (s = 8191); (s & r) !== r && n >= 5; )\n    r >>= 1, n--;\n  return o = s >> n - 4 & 15, ~(a | n - 5 << 4 | o) & 255;\n}, qo = (t) => {\n  let i = 0, s = 0, r = ~t;\n  r & 128 && (r &= -129, i = -1), s = ((r & 240) >> 4) + 5;\n  const a = (1 << s | (r & 15) << s - 4 | 1 << s - 5) - 33;\n  return i === 0 ? a : -a;\n}, Qo = (t) => {\n  let i = 2048, s = 0, r = 11, a = 0, n = t;\n  for (n < 0 && (n = -n, s = 128), n > 4095 && (n = 4095); (n & i) !== i && r >= 5; )\n    i >>= 1, r--;\n  return a = n >> (r === 4 ? 1 : r - 4) & 15, (s | r - 4 << 4 | a) ^ 85;\n}, Xo = (t) => {\n  let e = 0, i = 0, s = t ^ 85;\n  s & 128 && (s &= -129, e = -1), i = ((s & 240) >> 4) + 4;\n  let r = 0;\n  return i !== 4 ? r = 1 << i | (s & 15) << i - 4 | 1 << i - 5 : r = s << 1 | 1, e === 0 ? r : -r;\n}, ki = class rt {\n  constructor(e, i) {\n    if (this._closed = !1, e instanceof ArrayBuffer || ArrayBuffer.isView(e)) {\n      if (!i || typeof i != \"object\")\n        throw new TypeError(\"init must be an object.\");\n      if (!(\"format\" in i) || typeof i.format != \"string\")\n        throw new TypeError(\"init.format must be a string.\");\n      if (!Number.isInteger(i.codedWidth) || i.codedWidth <= 0)\n        throw new TypeError(\"init.codedWidth must be a positive integer.\");\n      if (!Number.isInteger(i.codedHeight) || i.codedHeight <= 0)\n        throw new TypeError(\"init.codedHeight must be a positive integer.\");\n      if (i.rotation !== void 0 && ![0, 90, 180, 270].includes(i.rotation))\n        throw new TypeError(\"init.rotation, when provided, must be 0, 90, 180, or 270.\");\n      if (!Number.isFinite(i.timestamp))\n        throw new TypeError(\"init.timestamp must be a number.\");\n      if (i.duration !== void 0 && (!Number.isFinite(i.duration) || i.duration < 0))\n        throw new TypeError(\"init.duration, when provided, must be a non-negative number.\");\n      this._data = te(e).slice(), this.format = i.format, this.codedWidth = i.codedWidth, this.codedHeight = i.codedHeight, this.rotation = i.rotation ?? 0, this.timestamp = i.timestamp, this.duration = i.duration ?? 0, this.colorSpace = new VideoColorSpace(i.colorSpace);\n    } else if (typeof VideoFrame < \"u\" && e instanceof VideoFrame) {\n      if (i?.rotation !== void 0 && ![0, 90, 180, 270].includes(i.rotation))\n        throw new TypeError(\"init.rotation, when provided, must be 0, 90, 180, or 270.\");\n      if (i?.timestamp !== void 0 && !Number.isFinite(i?.timestamp))\n        throw new TypeError(\"init.timestamp, when provided, must be a number.\");\n      if (i?.duration !== void 0 && (!Number.isFinite(i.duration) || i.duration < 0))\n        throw new TypeError(\"init.duration, when provided, must be a non-negative number.\");\n      this._data = e, this.format = e.format, this.codedWidth = e.codedWidth, this.codedHeight = e.codedHeight, this.rotation = i?.rotation ?? 0, this.timestamp = i?.timestamp ?? e.timestamp / 1e6, this.duration = i?.duration ?? (e.duration ?? 0) / 1e6, this.colorSpace = e.colorSpace;\n    } else if (typeof HTMLImageElement < \"u\" && e instanceof HTMLImageElement || typeof SVGImageElement < \"u\" && e instanceof SVGImageElement || typeof ImageBitmap < \"u\" && e instanceof ImageBitmap || typeof HTMLVideoElement < \"u\" && e instanceof HTMLVideoElement || typeof HTMLCanvasElement < \"u\" && e instanceof HTMLCanvasElement || typeof OffscreenCanvas < \"u\" && e instanceof OffscreenCanvas) {\n      if (!i || typeof i != \"object\")\n        throw new TypeError(\"init must be an object.\");\n      if (i.rotation !== void 0 && ![0, 90, 180, 270].includes(i.rotation))\n        throw new TypeError(\"init.rotation, when provided, must be 0, 90, 180, or 270.\");\n      if (!Number.isFinite(i.timestamp))\n        throw new TypeError(\"init.timestamp must be a number.\");\n      if (i.duration !== void 0 && (!Number.isFinite(i.duration) || i.duration < 0))\n        throw new TypeError(\"init.duration, when provided, must be a non-negative number.\");\n      if (typeof VideoFrame < \"u\")\n        return new rt(\n          new VideoFrame(e, {\n            timestamp: Math.trunc(i.timestamp * be),\n            duration: Math.trunc((i.duration ?? 0) * be)\n          }),\n          i\n        );\n      let s = 0, r = 0;\n      if (\"naturalWidth\" in e ? (s = e.naturalWidth, r = e.naturalHeight) : \"videoWidth\" in e ? (s = e.videoWidth, r = e.videoHeight) : \"width\" in e && (s = Number(e.width), r = Number(e.height)), !s || !r)\n        throw new TypeError(\"Could not determine dimensions.\");\n      const a = new OffscreenCanvas(s, r), n = a.getContext(\"2d\", { alpha: !1, willReadFrequently: !0 });\n      f(n), n.drawImage(e, 0, 0), this._data = a, this.format = \"RGBX\", this.codedWidth = s, this.codedHeight = r, this.rotation = i.rotation ?? 0, this.timestamp = i.timestamp, this.duration = i.duration ?? 0, this.colorSpace = new VideoColorSpace({\n        matrix: \"rgb\",\n        primaries: \"bt709\",\n        transfer: \"iec61966-2-1\",\n        fullRange: !0\n      });\n    } else\n      throw new TypeError(\"Invalid data type: Must be a BufferSource or CanvasImageSource.\");\n  }\n  /** The width of the frame in pixels after rotation. */\n  get displayWidth() {\n    return this.rotation % 180 === 0 ? this.codedWidth : this.codedHeight;\n  }\n  /** The height of the frame in pixels after rotation. */\n  get displayHeight() {\n    return this.rotation % 180 === 0 ? this.codedHeight : this.codedWidth;\n  }\n  /** The presentation timestamp of the frame in microseconds. */\n  get microsecondTimestamp() {\n    return Math.trunc(be * this.timestamp);\n  }\n  /** The duration of the frame in microseconds. */\n  get microsecondDuration() {\n    return Math.trunc(be * this.duration);\n  }\n  /** Clones this video sample. */\n  clone() {\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    return f(this._data !== null), tt(this._data) ? new rt(this._data.clone(), {\n      timestamp: this.timestamp,\n      duration: this.duration\n    }) : this._data instanceof Uint8Array ? new rt(this._data.slice(), {\n      format: this.format,\n      codedWidth: this.codedWidth,\n      codedHeight: this.codedHeight,\n      timestamp: this.timestamp,\n      duration: this.duration,\n      colorSpace: this.colorSpace\n    }) : new rt(this._data, {\n      format: this.format,\n      codedWidth: this.codedWidth,\n      codedHeight: this.codedHeight,\n      timestamp: this.timestamp,\n      duration: this.duration,\n      colorSpace: this.colorSpace\n    });\n  }\n  /**\n   * Closes this video sample, releasing held resources. Video samples should be closed as soon as they are not\n   * needed anymore.\n   */\n  close() {\n    this._closed || (tt(this._data) ? this._data.close() : this._data = null, this._closed = !0);\n  }\n  /** Returns the number of bytes required to hold this video sample's pixel data. */\n  allocationSize() {\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    return f(this._data !== null), tt(this._data) ? this._data.allocationSize() : this._data instanceof Uint8Array ? this._data.byteLength : this.codedWidth * this.codedHeight * 4;\n  }\n  /** Copies this video sample's pixel data to an ArrayBuffer or ArrayBufferView. */\n  async copyTo(e) {\n    if (!Ut(e))\n      throw new TypeError(\"destination must be an ArrayBuffer or an ArrayBuffer view.\");\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    if (f(this._data !== null), tt(this._data))\n      await this._data.copyTo(e);\n    else if (this._data instanceof Uint8Array)\n      te(e).set(this._data);\n    else {\n      const s = this._data.getContext(\"2d\", { alpha: !1 });\n      f(s);\n      const r = s.getImageData(0, 0, this.codedWidth, this.codedHeight);\n      te(e).set(r.data);\n    }\n  }\n  /**\n   * Converts this video sample to a VideoFrame for use with the WebCodecs API. The VideoFrame returned by this\n   * method *must* be closed separately from this video sample.\n   */\n  toVideoFrame() {\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    return f(this._data !== null), tt(this._data) ? new VideoFrame(this._data, {\n      timestamp: this.microsecondTimestamp,\n      duration: this.microsecondDuration || void 0\n      // Drag 0 duration to undefined, glitches some codecs\n    }) : this._data instanceof Uint8Array ? new VideoFrame(this._data, {\n      format: this.format,\n      codedWidth: this.codedWidth,\n      codedHeight: this.codedHeight,\n      timestamp: this.microsecondTimestamp,\n      duration: this.microsecondDuration,\n      colorSpace: this.colorSpace\n    }) : new VideoFrame(this._data, {\n      timestamp: this.microsecondTimestamp,\n      duration: this.microsecondDuration\n    });\n  }\n  /**\n   * Draws the video sample to a 2D canvas context. Rotation metadata will be taken into account.\n   *\n   * @param dx - The x-coordinate in the destination canvas at which to place the top-left corner of the source image.\n   * @param dy - The y-coordinate in the destination canvas at which to place the top-left corner of the source image.\n   * @param dWidth - The width in pixels with which to draw the image in the destination canvas.\n   * @param dHeight - The height in pixels with which to draw the image in the destination canvas.\n   */\n  draw(e, i, s, r = this.displayWidth, a = this.displayHeight) {\n    if (!(typeof CanvasRenderingContext2D < \"u\" && e instanceof CanvasRenderingContext2D || typeof OffscreenCanvasRenderingContext2D < \"u\" && e instanceof OffscreenCanvasRenderingContext2D))\n      throw new TypeError(\"context must be a CanvasRenderingContext2D or OffscreenCanvasRenderingContext2D.\");\n    if (!Number.isFinite(i))\n      throw new TypeError(\"dx must be a number.\");\n    if (!Number.isFinite(s))\n      throw new TypeError(\"dy must be a number.\");\n    if (!Number.isFinite(r) || r < 0)\n      throw new TypeError(\"dWidth must be a non-negative number.\");\n    if (!Number.isFinite(a) || a < 0)\n      throw new TypeError(\"dHeight must be a non-negative number.\");\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    const n = this.toCanvasImageSource();\n    e.save();\n    const o = i + r / 2, c = s + a / 2;\n    e.translate(o, c), e.rotate(this.rotation * Math.PI / 180);\n    const l = this.rotation % 180 === 0 ? 1 : r / a;\n    e.scale(1 / l, l), e.drawImage(\n      n,\n      -r / 2,\n      -a / 2,\n      r,\n      a\n    ), e.restore();\n  }\n  /**\n   * Converts this video sample to a CanvasImageSource for drawing to a canvas.\n   *\n   * You must use the value returned by this method immediately, as any VideoFrame created internally will\n   * automatically be closed in the next microtask.\n   */\n  toCanvasImageSource() {\n    if (this._closed)\n      throw new Error(\"VideoSample is closed.\");\n    if (f(this._data !== null), this._data instanceof Uint8Array) {\n      const e = this.toVideoFrame();\n      return queueMicrotask(() => e.close()), e;\n    } else\n      return this._data;\n  }\n  /** Sets the rotation metadata of this video sample. */\n  setRotation(e) {\n    if (![0, 90, 180, 270].includes(e))\n      throw new TypeError(\"newRotation must be 0, 90, 180, or 270.\");\n    this.rotation = e;\n  }\n  /** Sets the presentation timestamp of this video sample, in seconds. */\n  setTimestamp(e) {\n    if (!Number.isFinite(e))\n      throw new TypeError(\"newTimestamp must be a number.\");\n    this.timestamp = e;\n  }\n  /** Sets the duration of this video sample, in seconds. */\n  setDuration(e) {\n    if (!Number.isFinite(e) || e < 0)\n      throw new TypeError(\"newDuration must be a non-negative number.\");\n    this.duration = e;\n  }\n}, tt = (t) => typeof VideoFrame < \"u\" && t instanceof VideoFrame, ti = /* @__PURE__ */ new Set(\n  [\"f32\", \"f32-planar\", \"s16\", \"s16-planar\", \"s32\", \"s32-planar\", \"u8\", \"u8-planar\"]\n), Ft = class Si {\n  constructor(e) {\n    if (this._closed = !1, st(e)) {\n      if (e.format === null)\n        throw new TypeError(\"AudioData with null format is not supported.\");\n      this._data = e, this.format = e.format, this.sampleRate = e.sampleRate, this.numberOfFrames = e.numberOfFrames, this.numberOfChannels = e.numberOfChannels, this.timestamp = e.timestamp / 1e6, this.duration = e.numberOfFrames / e.sampleRate;\n    } else {\n      if (!e || typeof e != \"object\")\n        throw new TypeError(\"Invalid AudioDataInit: must be an object.\");\n      if (!ti.has(e.format))\n        throw new TypeError(\"Invalid AudioDataInit: invalid format.\");\n      if (!Number.isFinite(e.sampleRate) || e.sampleRate <= 0)\n        throw new TypeError(\"Invalid AudioDataInit: sampleRate must be > 0.\");\n      if (!Number.isInteger(e.numberOfChannels) || e.numberOfChannels === 0)\n        throw new TypeError(\"Invalid AudioDataInit: numberOfChannels must be an integer > 0.\");\n      if (!Number.isFinite(e?.timestamp))\n        throw new TypeError(\"init.timestamp must be a number.\");\n      const i = e.data.byteLength / (it(e.format) * e.numberOfChannels);\n      if (!Number.isInteger(i))\n        throw new TypeError(\"Invalid AudioDataInit: data size is not a multiple of frame size.\");\n      this.format = e.format, this.sampleRate = e.sampleRate, this.numberOfFrames = i, this.numberOfChannels = e.numberOfChannels, this.timestamp = e.timestamp, this.duration = i / e.sampleRate;\n      let s;\n      if (e.data instanceof ArrayBuffer)\n        s = new Uint8Array(e.data);\n      else if (ArrayBuffer.isView(e.data))\n        s = new Uint8Array(e.data.buffer, e.data.byteOffset, e.data.byteLength);\n      else\n        throw new TypeError(\"Invalid AudioDataInit: data is not a BufferSource.\");\n      const r = this.numberOfFrames * this.numberOfChannels * it(this.format);\n      if (s.byteLength < r)\n        throw new TypeError(\"Invalid AudioDataInit: insufficient data size.\");\n      this._data = s;\n    }\n  }\n  /** The presentation timestamp of the sample in microseconds. */\n  get microsecondTimestamp() {\n    return Math.trunc(be * this.timestamp);\n  }\n  /** The duration of the sample in microseconds. */\n  get microsecondDuration() {\n    return Math.trunc(be * this.duration);\n  }\n  /** Returns the number of bytes required to hold the audio sample's data as specified by the given options. */\n  allocationSize(e) {\n    if (!e || typeof e != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (!Number.isInteger(e.planeIndex) || e.planeIndex < 0)\n      throw new TypeError(\"planeIndex must be a non-negative integer.\");\n    if (e.format !== void 0 && !ti.has(e.format))\n      throw new TypeError(\"Invalid format.\");\n    if (e.frameOffset !== void 0 && (!Number.isInteger(e.frameOffset) || e.frameOffset < 0))\n      throw new TypeError(\"frameOffset must be a non-negative integer.\");\n    if (e.frameCount !== void 0 && (!Number.isInteger(e.frameCount) || e.frameCount < 0))\n      throw new TypeError(\"frameCount must be a non-negative integer.\");\n    if (this._closed)\n      throw new Error(\"AudioSample is closed.\");\n    const i = e.format ?? this.format, s = e.frameOffset ?? 0;\n    if (s >= this.numberOfFrames)\n      throw new RangeError(\"frameOffset out of range\");\n    const r = e.frameCount !== void 0 ? e.frameCount : this.numberOfFrames - s;\n    if (r > this.numberOfFrames - s)\n      throw new RangeError(\"frameCount out of range\");\n    const a = it(i), n = bt(i);\n    if (n && e.planeIndex >= this.numberOfChannels)\n      throw new RangeError(\"planeIndex out of range\");\n    if (!n && e.planeIndex !== 0)\n      throw new RangeError(\"planeIndex out of range\");\n    return (n ? r : r * this.numberOfChannels) * a;\n  }\n  /** Copies the audio sample's data to an ArrayBuffer or ArrayBufferView as specified by the given options. */\n  copyTo(e, i) {\n    if (!Ut(e))\n      throw new TypeError(\"destination must be an ArrayBuffer or an ArrayBuffer view.\");\n    if (!i || typeof i != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (!Number.isInteger(i.planeIndex) || i.planeIndex < 0)\n      throw new TypeError(\"planeIndex must be a non-negative integer.\");\n    if (i.format !== void 0 && !ti.has(i.format))\n      throw new TypeError(\"Invalid format.\");\n    if (i.frameOffset !== void 0 && (!Number.isInteger(i.frameOffset) || i.frameOffset < 0))\n      throw new TypeError(\"frameOffset must be a non-negative integer.\");\n    if (i.frameCount !== void 0 && (!Number.isInteger(i.frameCount) || i.frameCount < 0))\n      throw new TypeError(\"frameCount must be a non-negative integer.\");\n    if (this._closed)\n      throw new Error(\"AudioSample is closed.\");\n    const { planeIndex: s, format: r, frameCount: a, frameOffset: n } = i, o = r ?? this.format;\n    if (!o) throw new Error(\"Destination format not determined\");\n    const c = this.numberOfFrames, l = this.numberOfChannels, d = n ?? 0;\n    if (d >= c)\n      throw new RangeError(\"frameOffset out of range\");\n    const h = a !== void 0 ? a : c - d;\n    if (h > c - d)\n      throw new RangeError(\"frameCount out of range\");\n    const u = it(o), m = bt(o);\n    if (m && s >= l)\n      throw new RangeError(\"planeIndex out of range\");\n    if (!m && s !== 0)\n      throw new RangeError(\"planeIndex out of range\");\n    const g = (m ? h : h * l) * u;\n    if (e.byteLength < g)\n      throw new RangeError(\"Destination buffer is too small\");\n    const w = Re(e), b = Go(o);\n    if (st(this._data))\n      if (m)\n        if (o === \"f32-planar\")\n          this._data.copyTo(e, {\n            planeIndex: s,\n            frameOffset: d,\n            frameCount: h,\n            format: \"f32-planar\"\n          });\n        else {\n          const x = new ArrayBuffer(h * 4), S = new Float32Array(x);\n          this._data.copyTo(S, {\n            planeIndex: s,\n            frameOffset: d,\n            frameCount: h,\n            format: \"f32-planar\"\n          });\n          const k = new DataView(x);\n          for (let y = 0; y < h; y++) {\n            const T = y * u, P = k.getFloat32(y * 4, !0);\n            b(w, T, P);\n          }\n        }\n      else {\n        const x = l, S = new Float32Array(h);\n        for (let k = 0; k < x; k++) {\n          this._data.copyTo(S, {\n            planeIndex: k,\n            frameOffset: d,\n            frameCount: h,\n            format: \"f32-planar\"\n          });\n          for (let y = 0; y < h; y++) {\n            const P = (y * x + k) * u;\n            b(w, P, S[y]);\n          }\n        }\n      }\n    else {\n      const x = this._data, S = new DataView(x.buffer, x.byteOffset, x.byteLength), k = this.format, y = Ko(k), T = it(k), P = bt(k);\n      for (let F = 0; F < h; F++)\n        if (m) {\n          const z = F * u;\n          let M;\n          P ? M = (s * c + (F + d)) * T : M = ((F + d) * l + s) * T;\n          const A = y(S, M);\n          b(w, z, A);\n        } else\n          for (let z = 0; z < l; z++) {\n            const A = (F * l + z) * u;\n            let j;\n            P ? j = (z * c + (F + d)) * T : j = ((F + d) * l + z) * T;\n            const Ie = y(S, j);\n            b(w, A, Ie);\n          }\n    }\n  }\n  /** Clones this audio sample. */\n  clone() {\n    if (this._closed)\n      throw new Error(\"AudioSample is closed.\");\n    if (st(this._data)) {\n      const e = new Si(this._data.clone());\n      return e.setTimestamp(this.timestamp), e;\n    } else\n      return new Si({\n        format: this.format,\n        sampleRate: this.sampleRate,\n        numberOfFrames: this.numberOfFrames,\n        numberOfChannels: this.numberOfChannels,\n        timestamp: this.timestamp,\n        data: this._data\n      });\n  }\n  /**\n   * Closes this audio sample, releasing held resources. Audio samples should be closed as soon as they are not\n   * needed anymore.\n   */\n  close() {\n    this._closed || (st(this._data) ? this._data.close() : this._data = new Uint8Array(0), this._closed = !0);\n  }\n  /**\n   * Converts this audio sample to an AudioData for use with the WebCodecs API. The AudioData returned by this\n   * method *must* be closed separately from this audio sample.\n   */\n  toAudioData() {\n    if (this._closed)\n      throw new Error(\"AudioSample is closed.\");\n    if (st(this._data)) {\n      if (this._data.timestamp === this.microsecondTimestamp)\n        return this._data.clone();\n      if (bt(this.format)) {\n        const e = this.allocationSize({ planeIndex: 0, format: this.format }), i = new ArrayBuffer(e * this.numberOfChannels);\n        for (let s = 0; s < this.numberOfChannels; s++)\n          this.copyTo(new Uint8Array(i, s * e, e), { planeIndex: s, format: this.format });\n        return new AudioData({\n          format: this.format,\n          sampleRate: this.sampleRate,\n          numberOfFrames: this.numberOfFrames,\n          numberOfChannels: this.numberOfChannels,\n          timestamp: this.microsecondTimestamp,\n          data: i\n        });\n      } else {\n        const e = new ArrayBuffer(this.allocationSize({ planeIndex: 0, format: this.format }));\n        return this.copyTo(new DataView(e), { planeIndex: 0, format: this.format }), new AudioData({\n          format: this.format,\n          sampleRate: this.sampleRate,\n          numberOfFrames: this.numberOfFrames,\n          numberOfChannels: this.numberOfChannels,\n          timestamp: this.microsecondTimestamp,\n          data: e\n        });\n      }\n    } else\n      return new AudioData({\n        format: this.format,\n        sampleRate: this.sampleRate,\n        numberOfFrames: this.numberOfFrames,\n        numberOfChannels: this.numberOfChannels,\n        timestamp: this.microsecondTimestamp,\n        data: this._data\n      });\n  }\n  /** Convert this audio sample to an AudioBuffer for use with the Web Audio API. */\n  toAudioBuffer() {\n    if (this._closed)\n      throw new Error(\"AudioSample is closed.\");\n    const e = new AudioBuffer({\n      numberOfChannels: this.numberOfChannels,\n      length: this.numberOfFrames,\n      sampleRate: this.sampleRate\n    }), i = new Float32Array(this.allocationSize({ planeIndex: 0, format: \"f32-planar\" }) / 4);\n    for (let s = 0; s < this.numberOfChannels; s++)\n      this.copyTo(i, { planeIndex: s, format: \"f32-planar\" }), e.copyToChannel(i, s);\n    return e;\n  }\n  /** Sets the presentation timestamp of this audio sample, in seconds. */\n  setTimestamp(e) {\n    if (!Number.isFinite(e))\n      throw new TypeError(\"newTimestamp must be a number.\");\n    this.timestamp = e;\n  }\n}, it = (t) => {\n  switch (t) {\n    case \"u8\":\n    case \"u8-planar\":\n      return 1;\n    case \"s16\":\n    case \"s16-planar\":\n      return 2;\n    case \"s32\":\n    case \"s32-planar\":\n      return 4;\n    case \"f32\":\n    case \"f32-planar\":\n      return 4;\n    default:\n      throw new Error(\"Unknown AudioSampleFormat\");\n  }\n}, bt = (t) => {\n  switch (t) {\n    case \"u8-planar\":\n    case \"s16-planar\":\n    case \"s32-planar\":\n    case \"f32-planar\":\n      return !0;\n    default:\n      return !1;\n  }\n}, Ko = (t) => {\n  switch (t) {\n    case \"u8\":\n    case \"u8-planar\":\n      return (e, i) => (e.getUint8(i) - 128) / 128;\n    case \"s16\":\n    case \"s16-planar\":\n      return (e, i) => e.getInt16(i, !0) / 32768;\n    case \"s32\":\n    case \"s32-planar\":\n      return (e, i) => e.getInt32(i, !0) / 2147483648;\n    case \"f32\":\n    case \"f32-planar\":\n      return (e, i) => e.getFloat32(i, !0);\n  }\n}, Go = (t) => {\n  switch (t) {\n    case \"u8\":\n    case \"u8-planar\":\n      return (e, i, s) => e.setUint8(i, J((s + 1) * 127.5, 0, 255));\n    case \"s16\":\n    case \"s16-planar\":\n      return (e, i, s) => e.setInt16(i, J(Math.round(s * 32767), -32768, 32767), !0);\n    case \"s32\":\n    case \"s32-planar\":\n      return (e, i, s) => e.setInt32(i, J(Math.round(s * 2147483647), -2147483648, 2147483647), !0);\n    case \"f32\":\n    case \"f32-planar\":\n      return (e, i, s) => e.setFloat32(i, s, !0);\n  }\n}, st = (t) => typeof AudioData < \"u\" && t instanceof AudioData, Ne = (t) => {\n  if (!t || typeof t != \"object\")\n    throw new TypeError(\"options must be an object.\");\n  if (t.metadataOnly !== void 0 && typeof t.metadataOnly != \"boolean\")\n    throw new TypeError(\"options.metadataOnly, when defined, must be a boolean.\");\n}, ue = (t) => {\n  if (typeof t != \"number\" || Number.isNaN(t))\n    throw new TypeError(\"timestamp must be a number.\");\n}, Li = class {\n  constructor(t) {\n    if (!(t instanceof Hi))\n      throw new TypeError(\"track must be an InputTrack.\");\n    this._track = t;\n  }\n  /**\n   * Retrieves the track's first packet (in decode order), or null if it has no packets. The first packet is very\n   * likely to be a key packet.\n   */\n  getFirstPacket(t = {}) {\n    return Ne(t), this._track._backing.getFirstPacket(t);\n  }\n  /**\n   * Retrieves the packet corresponding to the given timestamp, in seconds. More specifically, returns the last packet\n   * (in presentation order) with a start timestamp less than or equal to the given timestamp. This method can be\n   * used to retrieve a track's last packet using `getPacket(Infinity)`. The method returns null if the timestamp\n   * is before the first packet in the track.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  getPacket(t, e = {}) {\n    return ue(t), Ne(e), this._track._backing.getPacket(t, e);\n  }\n  /**\n   * Retrieves the packet following the given packet (in decode order), or null if the given packet is the\n   * last packet.\n   */\n  getNextPacket(t, e = {}) {\n    if (!(t instanceof G))\n      throw new TypeError(\"packet must be an EncodedPacket.\");\n    return Ne(e), this._track._backing.getNextPacket(t, e);\n  }\n  /**\n   * Retrieves the key packet corresponding to the given timestamp, in seconds. More specifically, returns the last\n   * key packet (in presentation order) with a start timestamp less than or equal to the given timestamp. A key packet\n   * is a packet that doesn't require previous packets to be decoded. This method can be used to retrieve a track's\n   * last key packet using `getKeyPacket(Infinity)`. The method returns null if the timestamp is before the first\n   * key packet in the track.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  getKeyPacket(t, e = {}) {\n    return ue(t), Ne(e), this._track._backing.getKeyPacket(t, e);\n  }\n  /**\n   * Retrieves the key packet following the given packet (in decode order), or null if the given packet is the last\n   * key packet.\n   */\n  getNextKeyPacket(t, e = {}) {\n    if (!(t instanceof G))\n      throw new TypeError(\"packet must be an EncodedPacket.\");\n    return Ne(e), this._track._backing.getNextKeyPacket(t, e);\n  }\n  /**\n   * Creates an async iterator that yields the packets in this track in decode order. To enable fast iteration, this\n   * method will intelligently preload packets based on the speed of the consumer.\n   *\n   * @param startPacket - (optional) The packet from which iteration should begin. This packet will also be yielded.\n   * @param endTimestamp - (optional) The timestamp at which iteration should end. This packet will _not_ be yielded.\n   */\n  packets(t, e, i = {}) {\n    if (t !== void 0 && !(t instanceof G))\n      throw new TypeError(\"startPacket must be an EncodedPacket.\");\n    if (t !== void 0 && t.isMetadataOnly && !i?.metadataOnly)\n      throw new TypeError(\"startPacket can only be metadata-only if options.metadataOnly is enabled.\");\n    if (e !== void 0 && !(e instanceof G))\n      throw new TypeError(\"endPacket must be an EncodedPacket.\");\n    Ne(i);\n    const s = [];\n    let { promise: r, resolve: a } = Z(), { promise: n, resolve: o } = Z(), c = !1, l = !1, d = null;\n    const h = [], u = () => Math.max(2, h.length);\n    return (async () => {\n      let m = t ?? await this.getFirstPacket(i);\n      for (; m && !l && !(e && m.sequenceNumber >= e?.sequenceNumber); ) {\n        if (s.length > u()) {\n          ({ promise: n, resolve: o } = Z()), await n;\n          continue;\n        }\n        s.push(m), a(), { promise: r, resolve: a } = Z(), m = await this.getNextPacket(m, i);\n      }\n      c = !0, a();\n    })().catch((m) => {\n      d || (d = m, a());\n    }), {\n      async next() {\n        for (; ; ) {\n          if (l)\n            return { value: void 0, done: !0 };\n          if (d)\n            throw d;\n          if (s.length > 0) {\n            const m = s.shift(), p = performance.now();\n            for (h.push(p); h.length > 0 && p - h[0] >= 1e3; )\n              h.shift();\n            return o(), { value: m, done: !1 };\n          } else {\n            if (c)\n              return { value: void 0, done: !0 };\n            await r;\n          }\n        }\n      },\n      async return() {\n        return l = !0, o(), a(), { value: void 0, done: !0 };\n      },\n      async throw(m) {\n        throw m;\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      }\n    };\n  }\n}, Wi = class {\n  constructor(t, e) {\n    this.onSample = t, this.onError = e;\n  }\n}, Lr = class {\n  /** @internal */\n  mediaSamplesInRange(t = 0, e = 1 / 0) {\n    ue(t), ue(e);\n    const i = [];\n    let s = !1, r = null, { promise: a, resolve: n } = Z(), { promise: o, resolve: c } = Z(), l = !1, d = !1, h = !1, u = null;\n    return (async () => {\n      const m = new Error(), p = await this._createDecoder((k) => {\n        if (c(), k.timestamp >= e && (d = !0), d) {\n          k.close();\n          return;\n        }\n        r && (k.timestamp > t ? (i.push(r), s = !0) : r.close()), k.timestamp >= t && (i.push(k), s = !0), r = s ? null : k, i.length > 0 && (n(), { promise: a, resolve: n } = Z());\n      }, (k) => {\n        u || (k.stack = m.stack, u = k, n());\n      }), g = this._createPacketSink(), w = await g.getKeyPacket(t) ?? await g.getFirstPacket();\n      if (!w)\n        return;\n      let b = w, x;\n      if (e < 1 / 0) {\n        const k = await g.getPacket(e), y = k ? k.type === \"key\" && k.timestamp === e ? k : await g.getNextKeyPacket(k) : null;\n        y && (x = y);\n      }\n      const S = g.packets(w, x);\n      for (await S.next(); b && !d; ) {\n        const k = ys(i.length);\n        if (i.length + p.getDecodeQueueSize() > k) {\n          ({ promise: o, resolve: c } = Z()), await o;\n          continue;\n        }\n        p.decode(b);\n        const y = await S.next();\n        if (y.done)\n          break;\n        b = y.value;\n      }\n      await S.return(), h || await p.flush(), p.close(), !s && r && i.push(r), l = !0, n();\n    })().catch((m) => {\n      u || (u = m, n());\n    }), {\n      async next() {\n        for (; ; ) {\n          if (h)\n            return { value: void 0, done: !0 };\n          if (u)\n            throw u;\n          if (i.length > 0) {\n            const m = i.shift();\n            return c(), { value: m, done: !1 };\n          } else if (!l)\n            await a;\n          else\n            return { value: void 0, done: !0 };\n        }\n      },\n      async return() {\n        h = !0, d = !0, c(), n(), r?.close();\n        for (const m of i)\n          m.close();\n        return { value: void 0, done: !0 };\n      },\n      async throw(m) {\n        throw m;\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      }\n    };\n  }\n  /** @internal */\n  mediaSamplesAtTimestamps(t) {\n    Ma(t);\n    const e = Oa(t), i = [], s = [];\n    let { promise: r, resolve: a } = Z(), { promise: n, resolve: o } = Z(), c = !1, l = !1, d = null;\n    const h = (u) => {\n      s.push(u), a(), { promise: r, resolve: a } = Z();\n    };\n    return (async () => {\n      const u = new Error(), m = await this._createDecoder((k) => {\n        if (o(), l) {\n          k.close();\n          return;\n        }\n        let y = 0;\n        for (; i.length > 0 && k.timestamp - i[0] > -1e-10; )\n          y++, i.shift();\n        if (y > 0)\n          for (let T = 0; T < y; T++)\n            h(T < y - 1 ? k.clone() : k);\n        else\n          k.close();\n      }, (k) => {\n        d || (k.stack = u.stack, d = k, a());\n      }), p = this._createPacketSink();\n      let g = null, w = null, b = -1;\n      const x = async () => {\n        f(w);\n        let k = w;\n        for (m.decode(k); k.sequenceNumber < b; ) {\n          const y = ys(s.length);\n          for (; s.length + m.getDecodeQueueSize() > y && !l; )\n            ({ promise: n, resolve: o } = Z()), await n;\n          if (l)\n            break;\n          const T = await p.getNextPacket(k);\n          f(T), k = T, m.decode(T);\n        }\n        b = -1;\n      }, S = async () => {\n        await m.flush();\n        for (let k = 0; k < i.length; k++)\n          h(null);\n        i.length = 0;\n      };\n      for await (const k of e) {\n        if (ue(k), l)\n          break;\n        const y = await p.getPacket(k), T = y && await p.getKeyPacket(k);\n        if (!T) {\n          b !== -1 && (await x(), await S()), h(null), g = null;\n          continue;\n        }\n        g && (T.sequenceNumber !== w.sequenceNumber || y.timestamp < g.timestamp) && (await x(), y.timestamp < g.timestamp && await S()), i.push(y.timestamp), b = Math.max(y.sequenceNumber, b), g = y, w = T;\n      }\n      l || (b !== -1 && await x(), await S()), m.close(), c = !0, a();\n    })().catch((u) => {\n      d || (d = u, a());\n    }), {\n      async next() {\n        for (; ; ) {\n          if (l)\n            return { value: void 0, done: !0 };\n          if (d)\n            throw d;\n          if (s.length > 0) {\n            const u = s.shift();\n            return f(u !== void 0), o(), { value: u, done: !1 };\n          } else if (!c)\n            await r;\n          else\n            return { value: void 0, done: !0 };\n        }\n      },\n      async return() {\n        l = !0, o(), a();\n        for (const u of s)\n          u?.close();\n        return { value: void 0, done: !0 };\n      },\n      async throw(u) {\n        throw u;\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      }\n    };\n  }\n}, ys = (t) => t === 0 ? 40 : 8, Yo = class extends Wi {\n  constructor(t, e, i, s, r, a) {\n    super(t, e), this.rotation = r, this.timeResolution = a, this.decoder = null, this.customDecoder = null, this.customDecoderCallSerializer = new Dt(), this.customDecoderQueueSize = 0, this.sampleQueue = [];\n    const n = (c) => {\n      if (this.sampleQueue.length > 0 && c.timestamp >= H(this.sampleQueue).timestamp) {\n        for (const d of this.sampleQueue)\n          this.finalizeAndEmitSample(d);\n        this.sampleQueue.length = 0;\n      }\n      const l = N(\n        this.sampleQueue,\n        c.timestamp,\n        (d) => d.timestamp\n      );\n      this.sampleQueue.splice(l + 1, 0, c);\n    }, o = rr.find((c) => c.supports(i, s));\n    o ? (this.customDecoder = new o(), this.customDecoder.codec = i, this.customDecoder.config = s, this.customDecoder.onSample = (c) => {\n      if (!(c instanceof ki))\n        throw new TypeError(\"The argument passed to onSample must be a VideoSample.\");\n      n(c);\n    }, this.customDecoderCallSerializer.call(() => this.customDecoder.init())) : (this.decoder = new VideoDecoder({\n      output: (c) => n(new ki(c)),\n      error: e\n    }), this.decoder.configure(s));\n  }\n  finalizeAndEmitSample(t) {\n    t.setTimestamp(Math.round(t.timestamp * this.timeResolution) / this.timeResolution), t.setDuration(Math.round(t.duration * this.timeResolution) / this.timeResolution), this.onSample(t);\n  }\n  getDecodeQueueSize() {\n    return this.customDecoder ? this.customDecoderQueueSize : (f(this.decoder), this.decoder.decodeQueueSize);\n  }\n  decode(t) {\n    this.customDecoder ? (this.customDecoderQueueSize++, this.customDecoderCallSerializer.call(() => this.customDecoder.decode(t)).then(() => this.customDecoderQueueSize--)) : (f(this.decoder), this.decoder.decode(t.toEncodedVideoChunk()));\n  }\n  async flush() {\n    this.customDecoder ? await this.customDecoderCallSerializer.call(() => this.customDecoder.flush()) : (f(this.decoder), await this.decoder.flush());\n    for (const t of this.sampleQueue)\n      this.finalizeAndEmitSample(t);\n    this.sampleQueue.length = 0;\n  }\n  close() {\n    this.customDecoder ? this.customDecoderCallSerializer.call(() => this.customDecoder.close()) : (f(this.decoder), this.decoder.close());\n    for (const t of this.sampleQueue)\n      t.close();\n    this.sampleQueue.length = 0;\n  }\n}, Wr = class extends Lr {\n  constructor(t) {\n    if (!(t instanceof pt))\n      throw new TypeError(\"videoTrack must be an InputVideoTrack.\");\n    super(), this._videoTrack = t;\n  }\n  /** @internal */\n  async _createDecoder(t, e) {\n    if (!await this._videoTrack.canDecode())\n      throw new Error(\n        \"This video track cannot be decoded by this browser. Make sure to check decodability before using a track.\"\n      );\n    const i = this._videoTrack.codec, s = this._videoTrack.rotation, r = await this._videoTrack.getDecoderConfig(), a = this._videoTrack.timeResolution;\n    return f(i && r), new Yo(t, e, i, r, s, a);\n  }\n  /** @internal */\n  _createPacketSink() {\n    return new Li(this._videoTrack);\n  }\n  /**\n   * Retrieves the video sample (frame) corresponding to the given timestamp, in seconds. More specifically, returns\n   * the last video sample (in presentation order) with a start timestamp less than or equal to the given timestamp.\n   * Returns null if the timestamp is before the track's first timestamp.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  async getSample(t) {\n    ue(t);\n    for await (const e of this.mediaSamplesAtTimestamps([t]))\n      return e;\n    throw new Error(\"Internal error: Iterator returned nothing.\");\n  }\n  /**\n   * Creates an async iterator that yields the video samples (frames) of this track in presentation order. This method\n   * will intelligently pre-decode a few frames ahead to enable fast iteration.\n   *\n   * @param startTimestamp - The timestamp in seconds at which to start yielding samples (inclusive).\n   * @param endTimestamp - The timestamp in seconds at which to stop yielding samples (exclusive).\n   */\n  samples(t = 0, e = 1 / 0) {\n    return this.mediaSamplesInRange(t, e);\n  }\n  /**\n   * Creates an async iterator that yields a video sample (frame) for each timestamp in the argument. This method\n   * uses an optimized decoding pipeline if these timestamps are monotonically sorted, decoding each packet at most\n   * once, and is therefore more efficient than manually getting the sample for every timestamp. The iterator may\n   * yield null if no frame is available for a given timestamp.\n   *\n   * @param timestamps - An iterable or async iterable of timestamps in seconds.\n   */\n  samplesAtTimestamps(t) {\n    return this.mediaSamplesAtTimestamps(t);\n  }\n}, Jo = class {\n  constructor(t, e = {}) {\n    if (this._nextCanvasIndex = 0, !(t instanceof pt))\n      throw new TypeError(\"videoTrack must be an InputVideoTrack.\");\n    if (e && typeof e != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (e.width !== void 0 && (!Number.isInteger(e.width) || e.width <= 0))\n      throw new TypeError(\"options.width, when defined, must be a positive integer.\");\n    if (e.height !== void 0 && (!Number.isInteger(e.height) || e.height <= 0))\n      throw new TypeError(\"options.height, when defined, must be a positive integer.\");\n    if (e.fit !== void 0 && ![\"fill\", \"contain\", \"cover\"].includes(e.fit))\n      throw new TypeError('options.fit, when provided, must be one of \"fill\", \"contain\", or \"cover\".');\n    if (e.width !== void 0 && e.height !== void 0 && e.fit === void 0)\n      throw new TypeError(\n        \"When both options.width and options.height are provided, options.fit must also be provided.\"\n      );\n    if (e.rotation !== void 0 && ![0, 90, 180, 270].includes(e.rotation))\n      throw new TypeError(\"options.rotation, when provided, must be 0, 90, 180 or 270.\");\n    if (e.poolSize !== void 0 && (typeof e.poolSize != \"number\" || !Number.isInteger(e.poolSize) || e.poolSize < 0))\n      throw new TypeError(\"poolSize must be a non-negative integer.\");\n    const i = e.rotation ?? t.rotation;\n    let [s, r] = i % 180 === 0 ? [t.codedWidth, t.codedHeight] : [t.codedHeight, t.codedWidth];\n    const a = s / r;\n    e.width !== void 0 && e.height === void 0 ? (s = e.width, r = Math.round(s / a)) : e.width === void 0 && e.height !== void 0 ? (r = e.height, s = Math.round(r * a)) : e.width !== void 0 && e.height !== void 0 && (s = e.width, r = e.height), this._videoTrack = t, this._width = s, this._height = r, this._rotation = i, this._fit = e.fit ?? \"fill\", this._videoSampleSink = new Wr(t), this._canvasPool = Array.from({ length: e.poolSize ?? 0 }, () => null);\n  }\n  /** @internal */\n  _videoSampleToWrappedCanvas(t) {\n    let e = this._canvasPool[this._nextCanvasIndex];\n    e || (typeof OffscreenCanvas < \"u\" ? e = new OffscreenCanvas(this._width, this._height) : (e = document.createElement(\"canvas\"), e.width = this._width, e.height = this._height), this._canvasPool.length > 0 && (this._canvasPool[this._nextCanvasIndex] = e)), this._canvasPool.length > 0 && (this._nextCanvasIndex = (this._nextCanvasIndex + 1) % this._canvasPool.length);\n    const i = e.getContext(\"2d\", { alpha: !1 });\n    f(i), i.resetTransform();\n    let s, r, a, n;\n    if (this._fit === \"fill\")\n      s = 0, r = 0, a = this._width, n = this._height;\n    else {\n      const [l, d] = this._rotation % 180 === 0 ? [t.codedWidth, t.codedHeight] : [t.codedHeight, t.codedWidth], h = this._fit === \"contain\" ? Math.min(this._width / l, this._height / d) : Math.max(this._width / l, this._height / d);\n      a = l * h, n = d * h, s = (this._width - a) / 2, r = (this._height - n) / 2;\n    }\n    const o = this._rotation % 180 === 0 ? 1 : a / n;\n    i.translate(this._width / 2, this._height / 2), i.rotate(this._rotation * Math.PI / 180), i.scale(1 / o, o), i.translate(-this._width / 2, -this._height / 2), i.drawImage(t.toCanvasImageSource(), s, r, a, n);\n    const c = {\n      canvas: e,\n      timestamp: t.timestamp,\n      duration: t.duration\n    };\n    return t.close(), c;\n  }\n  /**\n   * Retrieves a canvas with the video frame corresponding to the given timestamp, in seconds. More specifically,\n   * returns the last video frame (in presentation order) with a start timestamp less than or equal to the given\n   * timestamp. Returns null if the timestamp is before the track's first timestamp.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  async getCanvas(t) {\n    ue(t);\n    const e = await this._videoSampleSink.getSample(t);\n    return e && this._videoSampleToWrappedCanvas(e);\n  }\n  /**\n   * Creates an async iterator that yields canvases with the video frames of this track in presentation order. This\n   * method will intelligently pre-decode a few frames ahead to enable fast iteration.\n   *\n   * @param startTimestamp - The timestamp in seconds at which to start yielding canvases (inclusive).\n   * @param endTimestamp - The timestamp in seconds at which to stop yielding canvases (exclusive).\n   */\n  canvases(t = 0, e = 1 / 0) {\n    return _t(\n      this._videoSampleSink.samples(t, e),\n      (i) => this._videoSampleToWrappedCanvas(i)\n    );\n  }\n  /**\n   * Creates an async iterator that yields a canvas for each timestamp in the argument. This method uses an optimized\n   * decoding pipeline if these timestamps are monotonically sorted, decoding each packet at most once, and is\n   * therefore more efficient than manually getting the canvas for every timestamp. The iterator may yield null if\n   * no frame is available for a given timestamp.\n   *\n   * @param timestamps - An iterable or async iterable of timestamps in seconds.\n   */\n  canvasesAtTimestamps(t) {\n    return _t(\n      this._videoSampleSink.samplesAtTimestamps(t),\n      (e) => e && this._videoSampleToWrappedCanvas(e)\n    );\n  }\n}, Zo = class extends Wi {\n  constructor(t, e, i, s) {\n    super(t, e), this.decoder = null, this.customDecoder = null, this.customDecoderCallSerializer = new Dt(), this.customDecoderQueueSize = 0;\n    const r = (n) => {\n      const o = s.sampleRate;\n      n.setTimestamp(Math.round(n.timestamp * o) / o), t(n);\n    }, a = ar.find((n) => n.supports(i, s));\n    a ? (this.customDecoder = new a(), this.customDecoder.codec = i, this.customDecoder.config = s, this.customDecoder.onSample = (n) => {\n      if (!(n instanceof Ft))\n        throw new TypeError(\"The argument passed to onSample must be an AudioSample.\");\n      r(n);\n    }, this.customDecoderCallSerializer.call(() => this.customDecoder.init())) : (this.decoder = new AudioDecoder({\n      output: (n) => r(new Ft(n)),\n      error: e\n    }), this.decoder.configure(s));\n  }\n  getDecodeQueueSize() {\n    return this.customDecoder ? this.customDecoderQueueSize : (f(this.decoder), this.decoder.decodeQueueSize);\n  }\n  decode(t) {\n    this.customDecoder ? (this.customDecoderQueueSize++, this.customDecoderCallSerializer.call(() => this.customDecoder.decode(t)).then(() => this.customDecoderQueueSize--)) : (f(this.decoder), this.decoder.decode(t.toEncodedAudioChunk()));\n  }\n  flush() {\n    return this.customDecoder ? this.customDecoderCallSerializer.call(() => this.customDecoder.flush()) : (f(this.decoder), this.decoder.flush());\n  }\n  close() {\n    this.customDecoder ? this.customDecoderCallSerializer.call(() => this.customDecoder.close()) : (f(this.decoder), this.decoder.close());\n  }\n}, ec = class extends Wi {\n  constructor(t, e, i) {\n    super(t, e), this.decoderConfig = i, this.currentTimestamp = null, f(K.includes(i.codec)), this.codec = i.codec;\n    const { dataType: s, sampleSize: r, littleEndian: a } = Be(this.codec);\n    switch (this.inputSampleSize = r, r) {\n      case 1:\n        s === \"unsigned\" ? this.readInputValue = (n, o) => n.getUint8(o) - 2 ** 7 : s === \"signed\" ? this.readInputValue = (n, o) => n.getInt8(o) : s === \"ulaw\" ? this.readInputValue = (n, o) => qo(n.getUint8(o)) : s === \"alaw\" ? this.readInputValue = (n, o) => Xo(n.getUint8(o)) : f(!1);\n        break;\n      case 2:\n        s === \"unsigned\" ? this.readInputValue = (n, o) => n.getUint16(o, a) - 2 ** 15 : s === \"signed\" ? this.readInputValue = (n, o) => n.getInt16(o, a) : f(!1);\n        break;\n      case 3:\n        s === \"unsigned\" ? this.readInputValue = (n, o) => tr(n, o, a) - 2 ** 23 : s === \"signed\" ? this.readInputValue = (n, o) => Aa(n, o, a) : f(!1);\n        break;\n      case 4:\n        s === \"unsigned\" ? this.readInputValue = (n, o) => n.getUint32(o, a) - 2 ** 31 : s === \"signed\" ? this.readInputValue = (n, o) => n.getInt32(o, a) : s === \"float\" ? this.readInputValue = (n, o) => n.getFloat32(o, a) : f(!1);\n        break;\n    }\n    switch (r) {\n      case 1:\n        s === \"ulaw\" || s === \"alaw\" ? (this.outputSampleSize = 2, this.outputFormat = \"s16\", this.writeOutputValue = (n, o, c) => n.setInt16(o, c, !0)) : (this.outputSampleSize = 1, this.outputFormat = \"u8\", this.writeOutputValue = (n, o, c) => n.setUint8(o, c + 2 ** 7));\n        break;\n      case 2:\n        this.outputSampleSize = 2, this.outputFormat = \"s16\", this.writeOutputValue = (n, o, c) => n.setInt16(o, c, !0);\n        break;\n      case 3:\n        this.outputSampleSize = 4, this.outputFormat = \"s32\", this.writeOutputValue = (n, o, c) => n.setInt32(o, c << 8, !0);\n        break;\n      case 4:\n        this.outputSampleSize = 4, s === \"float\" ? (this.outputFormat = \"f32\", this.writeOutputValue = (n, o, c) => n.setFloat32(o, c, !0)) : (this.outputFormat = \"s32\", this.writeOutputValue = (n, o, c) => n.setInt32(o, c, !0));\n        break;\n    }\n  }\n  getDecodeQueueSize() {\n    return 0;\n  }\n  decode(t) {\n    const e = Re(t.data), i = t.byteLength / this.decoderConfig.numberOfChannels / this.inputSampleSize, s = i * this.decoderConfig.numberOfChannels * this.outputSampleSize, r = new ArrayBuffer(s), a = new DataView(r);\n    for (let l = 0; l < i * this.decoderConfig.numberOfChannels; l++) {\n      const d = l * this.inputSampleSize, h = l * this.outputSampleSize, u = this.readInputValue(e, d);\n      this.writeOutputValue(a, h, u);\n    }\n    const n = i / this.decoderConfig.sampleRate;\n    (this.currentTimestamp === null || Math.abs(t.timestamp - this.currentTimestamp) >= n) && (this.currentTimestamp = t.timestamp);\n    const o = this.currentTimestamp;\n    this.currentTimestamp += n;\n    const c = new Ft({\n      format: this.outputFormat,\n      data: r,\n      numberOfChannels: this.decoderConfig.numberOfChannels,\n      sampleRate: this.decoderConfig.sampleRate,\n      numberOfFrames: i,\n      timestamp: o\n    });\n    this.onSample(c);\n  }\n  async flush() {\n  }\n  close() {\n  }\n}, tc = class extends Lr {\n  constructor(t) {\n    if (!(t instanceof xe))\n      throw new TypeError(\"audioTrack must be an InputAudioTrack.\");\n    super(), this._audioTrack = t;\n  }\n  /** @internal */\n  async _createDecoder(t, e) {\n    if (!await this._audioTrack.canDecode())\n      throw new Error(\n        \"This audio track cannot be decoded by this browser. Make sure to check decodability before using a track.\"\n      );\n    const i = this._audioTrack.codec, s = await this._audioTrack.getDecoderConfig();\n    return f(i && s), K.includes(s.codec) ? new ec(t, e, s) : new Zo(t, e, i, s);\n  }\n  /** @internal */\n  _createPacketSink() {\n    return new Li(this._audioTrack);\n  }\n  /**\n   * Retrieves the audio sample corresponding to the given timestamp, in seconds. More specifically, returns\n   * the last audio sample (in presentation order) with a start timestamp less than or equal to the given timestamp.\n   * Returns null if the timestamp is before the track's first timestamp.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  async getSample(t) {\n    ue(t);\n    for await (const e of this.mediaSamplesAtTimestamps([t]))\n      return e;\n    throw new Error(\"Internal error: Iterator returned nothing.\");\n  }\n  /**\n   * Creates an async iterator that yields the audio samples of this track in presentation order. This method\n   * will intelligently pre-decode a few samples ahead to enable fast iteration.\n   *\n   * @param startTimestamp - The timestamp in seconds at which to start yielding samples (inclusive).\n   * @param endTimestamp - The timestamp in seconds at which to stop yielding samples (exclusive).\n   */\n  samples(t = 0, e = 1 / 0) {\n    return this.mediaSamplesInRange(t, e);\n  }\n  /**\n   * Creates an async iterator that yields an audio sample for each timestamp in the argument. This method\n   * uses an optimized decoding pipeline if these timestamps are monotonically sorted, decoding each packet at most\n   * once, and is therefore more efficient than manually getting the sample for every timestamp. The iterator may\n   * yield null if no sample is available for a given timestamp.\n   *\n   * @param timestamps - An iterable or async iterable of timestamps in seconds.\n   */\n  samplesAtTimestamps(t) {\n    return this.mediaSamplesAtTimestamps(t);\n  }\n}, ic = class {\n  constructor(t) {\n    if (!(t instanceof xe))\n      throw new TypeError(\"audioTrack must be an InputAudioTrack.\");\n    this._audioSampleSink = new tc(t);\n  }\n  /** @internal */\n  _audioSampleToWrappedArrayBuffer(t) {\n    return {\n      buffer: t.toAudioBuffer(),\n      timestamp: t.timestamp,\n      duration: t.duration\n    };\n  }\n  /**\n   * Retrieves the audio buffer corresponding to the given timestamp, in seconds. More specifically, returns\n   * the last audio buffer (in presentation order) with a start timestamp less than or equal to the given timestamp.\n   * Returns null if the timestamp is before the track's first timestamp.\n   *\n   * @param timestamp - The timestamp used for retrieval, in seconds.\n   */\n  async getBuffer(t) {\n    ue(t);\n    const e = await this._audioSampleSink.getSample(t);\n    return e && this._audioSampleToWrappedArrayBuffer(e);\n  }\n  /**\n   * Creates an async iterator that yields audio buffers of this track in presentation order. This method\n   * will intelligently pre-decode a few buffers ahead to enable fast iteration.\n   *\n   * @param startTimestamp - The timestamp in seconds at which to start yielding buffers (inclusive).\n   * @param endTimestamp - The timestamp in seconds at which to stop yielding buffers (exclusive).\n   */\n  buffers(t = 0, e = 1 / 0) {\n    return _t(\n      this._audioSampleSink.samples(t, e),\n      (i) => this._audioSampleToWrappedArrayBuffer(i)\n    );\n  }\n  /**\n   * Creates an async iterator that yields an audio buffer for each timestamp in the argument. This method\n   * uses an optimized decoding pipeline if these timestamps are monotonically sorted, decoding each packet at most\n   * once, and is therefore more efficient than manually getting the buffer for every timestamp. The iterator may\n   * yield null if no buffer is available for a given timestamp.\n   *\n   * @param timestamps - An iterable or async iterable of timestamps in seconds.\n   */\n  buffersAtTimestamps(t) {\n    return _t(\n      this._audioSampleSink.samplesAtTimestamps(t),\n      (e) => e && this._audioSampleToWrappedArrayBuffer(e)\n    );\n  }\n}, Hi = class {\n  /** @internal */\n  constructor(t) {\n    this._backing = t;\n  }\n  /** Returns true iff this track is a video track. */\n  isVideoTrack() {\n    return this instanceof pt;\n  }\n  /** Returns true iff this track is an audio track. */\n  isAudioTrack() {\n    return this instanceof xe;\n  }\n  /** The unique ID of this track in the input file. */\n  get id() {\n    return this._backing.getId();\n  }\n  /** The ISO 639-2/T language code for this track. If the language is unknown, this field is 'und' (undetermined). */\n  get languageCode() {\n    return this._backing.getLanguageCode();\n  }\n  /**\n   * A positive number x such that all timestamps and durations of all packets of this track are\n   * integer multiples of 1/x.\n   */\n  get timeResolution() {\n    return this._backing.getTimeResolution();\n  }\n  /**\n   * Returns the start timestamp of the first packet of this track, in seconds. While often near zero, this value\n   * may be positive or even negative. A negative starting timestamp means the track's timing has been offset. Samples\n   * with a negative timestamp should not be presented.\n   */\n  getFirstTimestamp() {\n    return this._backing.getFirstTimestamp();\n  }\n  /** Returns the end timestamp of the last packet of this track, in seconds. */\n  computeDuration() {\n    return this._backing.computeDuration();\n  }\n  /** Computes aggregate packet statistics for this track, such as average packet rate or bitrate. */\n  async computePacketStats() {\n    const t = new Li(this);\n    let e = 1 / 0, i = -1 / 0, s = 0, r = 0;\n    for await (const a of t.packets(void 0, void 0, { metadataOnly: !0 }))\n      e = Math.min(e, a.timestamp), i = Math.max(i, a.timestamp + a.duration), s++, r += a.byteLength;\n    return {\n      packetCount: s,\n      averagePacketRate: s ? Number((s / (i - e)).toPrecision(16)) : 0,\n      averageBitrate: s ? Number((8 * r / (i - e)).toPrecision(16)) : 0\n    };\n  }\n}, pt = class extends Hi {\n  /** @internal */\n  constructor(t) {\n    super(t), this._backing = t;\n  }\n  get type() {\n    return \"video\";\n  }\n  get codec() {\n    return this._backing.getCodec();\n  }\n  /** The width in pixels of the track's coded samples, before any transformations or rotations. */\n  get codedWidth() {\n    return this._backing.getCodedWidth();\n  }\n  /** The height in pixels of the track's coded samples, before any transformations or rotations. */\n  get codedHeight() {\n    return this._backing.getCodedHeight();\n  }\n  /** The angle in degrees by which the track's frames should be rotated (clockwise). */\n  get rotation() {\n    return this._backing.getRotation();\n  }\n  /** The width in pixels of the track's frames after rotation. */\n  get displayWidth() {\n    return this._backing.getRotation() % 180 === 0 ? this._backing.getCodedWidth() : this._backing.getCodedHeight();\n  }\n  /** The height in pixels of the track's frames after rotation. */\n  get displayHeight() {\n    return this._backing.getRotation() % 180 === 0 ? this._backing.getCodedHeight() : this._backing.getCodedWidth();\n  }\n  /** Returns the color space of the track's samples. */\n  getColorSpace() {\n    return this._backing.getColorSpace();\n  }\n  /** If this method returns true, the track's samples use a high dynamic range (HDR). */\n  async hasHighDynamicRange() {\n    const t = await this._backing.getColorSpace();\n    return t.primaries === \"bt2020\" || t.primaries === \"smpte432\" || t.transfer === \"pg\" || t.transfer === \"hlg\" || t.matrix === \"bt2020-ncl\";\n  }\n  /** Returns the decoder configuration for decoding the track's packets using a VideoDecoder. */\n  getDecoderConfig() {\n    return this._backing.getDecoderConfig();\n  }\n  async getCodecParameterString() {\n    return (await this._backing.getDecoderConfig())?.codec ?? null;\n  }\n  async canDecode() {\n    try {\n      const t = await this._backing.getDecoderConfig();\n      if (!t)\n        return !1;\n      const e = this._backing.getCodec();\n      return f(e !== null), rr.some((s) => s.supports(e, t)) ? !0 : typeof VideoDecoder > \"u\" ? !1 : (await VideoDecoder.isConfigSupported(t)).supported === !0;\n    } catch (t) {\n      return console.error(\"Error during decodability check:\", t), !1;\n    }\n  }\n}, xe = class extends Hi {\n  /** @internal */\n  constructor(t) {\n    super(t), this._backing = t;\n  }\n  get type() {\n    return \"audio\";\n  }\n  get codec() {\n    return this._backing.getCodec();\n  }\n  /** The number of audio channels in the track. */\n  get numberOfChannels() {\n    return this._backing.getNumberOfChannels();\n  }\n  /** The track's audio sample rate in hertz. */\n  get sampleRate() {\n    return this._backing.getSampleRate();\n  }\n  /** Returns the decoder configuration for decoding the track's packets using an AudioDecoder. */\n  getDecoderConfig() {\n    return this._backing.getDecoderConfig();\n  }\n  async getCodecParameterString() {\n    return (await this._backing.getDecoderConfig())?.codec ?? null;\n  }\n  async canDecode() {\n    try {\n      const t = await this._backing.getDecoderConfig();\n      if (!t)\n        return !1;\n      const e = this._backing.getCodec();\n      return f(e !== null), ar.some((i) => i.supports(e, t)) || t.codec.startsWith(\"pcm-\") ? !0 : typeof AudioDecoder > \"u\" ? !1 : (await AudioDecoder.isConfigSupported(t)).supported === !0;\n    } catch (t) {\n      return console.error(\"Error during decodability check:\", t), !1;\n    }\n  }\n}, gt = class {\n  constructor(t, e = 1 / 0) {\n    this.source = t, this.maxStorableBytes = e, this.loadedSegments = [], this.loadingSegments = [], this.sourceSizePromise = null, this.nextAge = 0, this.totalStoredBytes = 0;\n  }\n  async loadRange(t, e) {\n    if (e = Math.min(e, await this.source.getSize()), t >= e)\n      return;\n    const i = this.loadingSegments.find((o) => o.start <= t && o.end >= e);\n    if (i) {\n      await i.promise;\n      return;\n    }\n    const s = N(\n      this.loadedSegments,\n      t,\n      (o) => o.start\n    );\n    if (s !== -1)\n      for (let o = s; o < this.loadedSegments.length; o++) {\n        const c = this.loadedSegments[o];\n        if (c.start > t)\n          break;\n        if (c.end >= e)\n          return;\n      }\n    this.source.onread?.(t, e);\n    const r = this.source._read(t, e), a = { start: t, end: e, promise: r };\n    this.loadingSegments.push(a);\n    const n = await r;\n    Ba(this.loadingSegments, a), this.insertIntoLoadedSegments(t, n);\n  }\n  rangeIsLoaded(t, e) {\n    if (e <= t)\n      return !0;\n    const i = N(this.loadedSegments, t, (s) => s.start);\n    if (i === -1)\n      return !1;\n    for (let s = i; s < this.loadedSegments.length; s++) {\n      const r = this.loadedSegments[s];\n      if (r.start > t)\n        break;\n      if (r.end >= e)\n        return !0;\n    }\n    return !1;\n  }\n  insertIntoLoadedSegments(t, e) {\n    const i = {\n      start: t,\n      end: t + e.byteLength,\n      bytes: e,\n      view: new DataView(e.buffer),\n      age: this.nextAge++\n    };\n    let s = N(this.loadedSegments, t, (r) => r.start);\n    (s === -1 || this.loadedSegments[s].start < i.start) && s++, this.loadedSegments.splice(s, 0, i), this.totalStoredBytes += e.byteLength;\n    for (let r = s + 1; r < this.loadedSegments.length; r++) {\n      const a = this.loadedSegments[r];\n      if (a.start >= i.end)\n        break;\n      i.start <= a.start && a.end <= i.end && (this.loadedSegments.splice(r, 1), r--);\n    }\n    for (; this.totalStoredBytes > this.maxStorableBytes && this.loadedSegments.length > 1; ) {\n      let r = null, a = -1;\n      for (let n = 0; n < this.loadedSegments.length; n++) {\n        const o = this.loadedSegments[n];\n        (!r || o.age < r.age) && (r = o, a = n);\n      }\n      f(r), this.totalStoredBytes -= r.bytes.byteLength, this.loadedSegments.splice(a, 1);\n    }\n  }\n  getViewAndOffset(t, e) {\n    const i = N(this.loadedSegments, t, (r) => r.start);\n    let s = null;\n    if (i !== -1)\n      for (let r = i; r < this.loadedSegments.length; r++) {\n        const a = this.loadedSegments[r];\n        if (a.start > t)\n          break;\n        if (e <= a.end) {\n          s = a;\n          break;\n        }\n      }\n    if (!s)\n      throw new Error(`No segment loaded for range [${t}, ${e}).`);\n    return s.age = this.nextAge++, {\n      view: s.view,\n      offset: s.bytes.byteOffset + t - s.start\n    };\n  }\n  forgetRange(t, e) {\n    if (e <= t)\n      return;\n    const i = N(this.loadedSegments, t, (r) => r.start);\n    if (i === -1)\n      return;\n    const s = this.loadedSegments[i];\n    s.start !== t || s.end !== e || (this.loadedSegments.splice(i, 1), this.totalStoredBytes -= s.bytes.byteLength);\n  }\n}, vi = class {\n  constructor(t) {\n    this.reader = t, this.pos = 0, this.littleEndian = !0;\n  }\n  readBytes(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, new Uint8Array(e.buffer, i, t);\n  }\n  readU16() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 2);\n    return this.pos += 2, t.getUint16(e, this.littleEndian);\n  }\n  readU32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getUint32(e, this.littleEndian);\n  }\n  readAscii(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    this.pos += t;\n    let s = \"\";\n    for (let r = 0; r < t; r++)\n      s += String.fromCharCode(e.getUint8(i + r));\n    return s;\n  }\n}, sc = class extends mt {\n  constructor(t) {\n    super(t), this.metadataPromise = null, this.dataStart = -1, this.dataSize = -1, this.audioInfo = null, this.tracks = [], this.metadataReader = new vi(t._mainReader), this.chunkReader = new vi(new gt(t.source, 64 * 2 ** 20));\n  }\n  async readMetadata() {\n    return this.metadataPromise ??= (async () => {\n      const t = this.metadataReader.readAscii(4);\n      this.metadataReader.littleEndian = t === \"RIFF\";\n      const e = this.metadataReader.readU32() + 8;\n      if (this.metadataReader.readAscii(4) !== \"WAVE\")\n        throw new Error(\"Invalid WAVE file - wrong format\");\n      for (this.metadataReader.pos = 12; this.metadataReader.pos < e; ) {\n        await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + 8);\n        const r = this.metadataReader.readAscii(4), a = this.metadataReader.readU32(), n = this.metadataReader.pos;\n        r === \"fmt \" ? await this.parseFmtChunk(a) : r === \"data\" && (this.dataStart = this.metadataReader.pos, this.dataSize = a), this.metadataReader.pos = n + a + (a & 1);\n      }\n      if (!this.audioInfo)\n        throw new Error('Invalid WAVE file - missing \"fmt \" chunk');\n      if (this.dataStart === -1)\n        throw new Error('Invalid WAVE file - missing \"data\" chunk');\n      const s = this.audioInfo.blockSizeInBytes;\n      this.dataSize = Math.floor(this.dataSize / s) * s, this.tracks.push(new xe(new rc(this)));\n    })();\n  }\n  async parseFmtChunk(t) {\n    await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + t);\n    let e = this.metadataReader.readU16();\n    const i = this.metadataReader.readU16(), s = this.metadataReader.readU32();\n    this.metadataReader.pos += 4;\n    const r = this.metadataReader.readU16();\n    let a;\n    if (t === 14 ? a = 8 : a = this.metadataReader.readU16(), t >= 18 && e !== 357) {\n      const n = this.metadataReader.readU16(), o = t - 18;\n      if (Math.min(o, n) >= 22 && e === 65534) {\n        this.metadataReader.pos += 6;\n        const l = this.metadataReader.readBytes(16);\n        e = l[0] | l[1] << 8;\n      }\n    }\n    (e === 7 || e === 6) && (a = 8), this.audioInfo = {\n      format: e,\n      numberOfChannels: i,\n      sampleRate: s,\n      sampleSizeInBytes: Math.ceil(a / 8),\n      blockSizeInBytes: r\n    };\n  }\n  getCodec() {\n    if (f(this.audioInfo), this.audioInfo.format === 7)\n      return \"ulaw\";\n    if (this.audioInfo.format === 6)\n      return \"alaw\";\n    if (this.audioInfo.format === 1) {\n      if (this.audioInfo.sampleSizeInBytes === 1)\n        return \"pcm-u8\";\n      if (this.audioInfo.sampleSizeInBytes === 2)\n        return \"pcm-s16\";\n      if (this.audioInfo.sampleSizeInBytes === 3)\n        return \"pcm-s24\";\n      if (this.audioInfo.sampleSizeInBytes === 4)\n        return \"pcm-s32\";\n    }\n    return this.audioInfo.format === 3 && this.audioInfo.sampleSizeInBytes === 4 ? \"pcm-f32\" : null;\n  }\n  async getMimeType() {\n    return \"audio/wav\";\n  }\n  async computeDuration() {\n    return await this.readMetadata(), f(this.audioInfo), this.dataSize / this.audioInfo.blockSizeInBytes / this.audioInfo.sampleRate;\n  }\n  async getTracks() {\n    return await this.readMetadata(), this.tracks;\n  }\n}, Ve = 2048, rc = class {\n  constructor(t) {\n    this.demuxer = t;\n  }\n  getId() {\n    return 1;\n  }\n  getCodec() {\n    return this.demuxer.getCodec();\n  }\n  async getDecoderConfig() {\n    const t = this.demuxer.getCodec();\n    return t ? (f(this.demuxer.audioInfo), {\n      codec: t,\n      numberOfChannels: this.demuxer.audioInfo.numberOfChannels,\n      sampleRate: this.demuxer.audioInfo.sampleRate\n    }) : null;\n  }\n  computeDuration() {\n    return this.demuxer.computeDuration();\n  }\n  getNumberOfChannels() {\n    return f(this.demuxer.audioInfo), this.demuxer.audioInfo.numberOfChannels;\n  }\n  getSampleRate() {\n    return f(this.demuxer.audioInfo), this.demuxer.audioInfo.sampleRate;\n  }\n  getTimeResolution() {\n    return f(this.demuxer.audioInfo), this.demuxer.audioInfo.sampleRate;\n  }\n  getLanguageCode() {\n    return fe;\n  }\n  async getFirstTimestamp() {\n    return 0;\n  }\n  async getPacketAtIndex(t, e) {\n    f(this.demuxer.audioInfo);\n    const i = t * Ve * this.demuxer.audioInfo.blockSizeInBytes;\n    if (i >= this.demuxer.dataSize)\n      return null;\n    const s = Math.min(\n      Ve * this.demuxer.audioInfo.blockSizeInBytes,\n      this.demuxer.dataSize - i\n    );\n    let r;\n    if (e.metadataOnly)\n      r = me;\n    else {\n      const o = Ve * this.demuxer.audioInfo.blockSizeInBytes, c = Math.ceil(2 ** 19 / o) * o, l = Math.floor(i / c) * c, d = l + c;\n      await this.demuxer.chunkReader.reader.loadRange(\n        this.demuxer.dataStart + l,\n        this.demuxer.dataStart + d\n      ), this.demuxer.chunkReader.pos = this.demuxer.dataStart + i, r = this.demuxer.chunkReader.readBytes(s);\n    }\n    const a = t * Ve / this.demuxer.audioInfo.sampleRate, n = s / this.demuxer.audioInfo.blockSizeInBytes / this.demuxer.audioInfo.sampleRate;\n    return new G(\n      r,\n      \"key\",\n      a,\n      n,\n      t,\n      s\n    );\n  }\n  getFirstPacket(t) {\n    return this.getPacketAtIndex(0, t);\n  }\n  getPacket(t, e) {\n    f(this.demuxer.audioInfo);\n    const i = Math.floor(t * this.demuxer.audioInfo.sampleRate / Ve);\n    return this.getPacketAtIndex(i, e);\n  }\n  getNextPacket(t, e) {\n    f(this.demuxer.audioInfo);\n    const i = Math.round(t.timestamp * this.demuxer.audioInfo.sampleRate / Ve);\n    return this.getPacketAtIndex(i + 1, e);\n  }\n  getKeyPacket(t, e) {\n    return this.getPacket(t, e);\n  }\n  getNextKeyPacket(t, e) {\n    return this.getNextPacket(t, e);\n  }\n}, Lt = class {\n  /** Returns a list of video codecs that this output format can contain. */\n  getSupportedVideoCodecs() {\n    return this.getSupportedCodecs().filter((e) => re.includes(e));\n  }\n  /** Returns a list of audio codecs that this output format can contain. */\n  getSupportedAudioCodecs() {\n    return this.getSupportedCodecs().filter((e) => ne.includes(e));\n  }\n  /** Returns a list of subtitle codecs that this output format can contain. */\n  getSupportedSubtitleCodecs() {\n    return this.getSupportedCodecs().filter((e) => ve.includes(e));\n  }\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _codecUnsupportedHint(e) {\n    return \"\";\n  }\n}, Hr = class extends Lt {\n  constructor(t = {}) {\n    if (!t || typeof t != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (t.fastStart !== void 0 && ![!1, \"in-memory\", \"fragmented\"].includes(t.fastStart))\n      throw new TypeError('options.fastStart, when provided, must be false, \"in-memory\", or \"fragmented\".');\n    if (t.minimumFragmentDuration !== void 0 && (!Number.isFinite(t.minimumFragmentDuration) || t.minimumFragmentDuration < 0))\n      throw new TypeError(\"options.minimumFragmentDuration, when provided, must be a non-negative number.\");\n    if (t.onFtyp !== void 0 && typeof t.onFtyp != \"function\")\n      throw new TypeError(\"options.onFtyp, when provided, must be a function.\");\n    if (t.onMoov !== void 0 && typeof t.onMoov != \"function\")\n      throw new TypeError(\"options.onMoov, when provided, must be a function.\");\n    if (t.onMdat !== void 0 && typeof t.onMdat != \"function\")\n      throw new TypeError(\"options.onMdat, when provided, must be a function.\");\n    if (t.onMoof !== void 0 && typeof t.onMoof != \"function\")\n      throw new TypeError(\"options.onMoof, when provided, must be a function.\");\n    super(), this._options = t;\n  }\n  getSupportedTrackCounts() {\n    return {\n      video: { min: 0, max: 1 / 0 },\n      audio: { min: 0, max: 1 / 0 },\n      subtitle: { min: 0, max: 1 / 0 },\n      total: { min: 1, max: 2 ** 32 - 1 }\n      // Have fun reaching this one\n    };\n  }\n  get supportsVideoRotationMetadata() {\n    return !0;\n  }\n  /** @internal */\n  _createMuxer(t) {\n    return new xo(t, this);\n  }\n}, $r = class extends Hr {\n  /** @internal */\n  get _name() {\n    return \"MP4\";\n  }\n  get fileExtension() {\n    return \".mp4\";\n  }\n  get mimeType() {\n    return \"video/mp4\";\n  }\n  getSupportedCodecs() {\n    return [\n      ...re,\n      ...Mi,\n      ...ve\n    ];\n  }\n  /** @internal */\n  _codecUnsupportedHint(t) {\n    return new jr().getSupportedCodecs().includes(t) ? \" Switching to MOV will grant support for this codec.\" : \"\";\n  }\n}, jr = class extends Hr {\n  /** @internal */\n  get _name() {\n    return \"MOV\";\n  }\n  get fileExtension() {\n    return \".mov\";\n  }\n  get mimeType() {\n    return \"video/quicktime\";\n  }\n  getSupportedCodecs() {\n    return [\n      ...re,\n      ...ne\n    ];\n  }\n  /** @internal */\n  _codecUnsupportedHint(t) {\n    return new $r().getSupportedCodecs().includes(t) ? \" Switching to MP4 will grant support for this codec.\" : \"\";\n  }\n}, bs = class extends Lt {\n  constructor(t = {}) {\n    if (!t || typeof t != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (t.streamable !== void 0 && typeof t.streamable != \"boolean\")\n      throw new TypeError(\"options.streamable, when provided, must be a boolean.\");\n    if (t.minimumClusterDuration !== void 0 && (!Number.isFinite(t.minimumClusterDuration) || t.minimumClusterDuration < 0))\n      throw new TypeError(\"options.minimumClusterDuration, when provided, must be a non-negative number.\");\n    if (t.onEbmlHeader !== void 0 && typeof t.onEbmlHeader != \"function\")\n      throw new TypeError(\"options.onEbmlHeader, when provided, must be a function.\");\n    if (t.onSegmentHeader !== void 0 && typeof t.onSegmentHeader != \"function\")\n      throw new TypeError(\"options.onHeader, when provided, must be a function.\");\n    if (t.onCluster !== void 0 && typeof t.onCluster != \"function\")\n      throw new TypeError(\"options.onCluster, when provided, must be a function.\");\n    super(), this._options = t;\n  }\n  /** @internal */\n  _createMuxer(t) {\n    return new Bo(t, this);\n  }\n  /** @internal */\n  get _name() {\n    return \"Matroska\";\n  }\n  getSupportedTrackCounts() {\n    return {\n      video: { min: 0, max: 1 / 0 },\n      audio: { min: 0, max: 1 / 0 },\n      subtitle: { min: 0, max: 1 / 0 },\n      total: { min: 1, max: 127 }\n    };\n  }\n  get fileExtension() {\n    return \".mkv\";\n  }\n  get mimeType() {\n    return \"video/x-matroska\";\n  }\n  getSupportedCodecs() {\n    return [\n      ...re,\n      ...Mi,\n      ...K.filter((t) => ![\"pcm-s8\", \"pcm-f32be\", \"ulaw\", \"alaw\"].includes(t)),\n      ...ve\n    ];\n  }\n  get supportsVideoRotationMetadata() {\n    return !1;\n  }\n}, qr = class extends bs {\n  getSupportedCodecs() {\n    return [\n      ...re.filter((t) => [\"vp8\", \"vp9\", \"av1\"].includes(t)),\n      ...ne.filter((t) => [\"opus\", \"vorbis\"].includes(t)),\n      ...ve\n    ];\n  }\n  /** @internal */\n  get _name() {\n    return \"WebM\";\n  }\n  get fileExtension() {\n    return \".webm\";\n  }\n  get mimeType() {\n    return \"video/webm\";\n  }\n  /** @internal */\n  _codecUnsupportedHint(t) {\n    return new bs().getSupportedCodecs().includes(t) ? \" Switching to MKV will grant support for this codec.\" : \"\";\n  }\n}, ac = class extends Lt {\n  constructor(t = {}) {\n    if (!t || typeof t != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (t.onPage !== void 0 && typeof t.onPage != \"function\")\n      throw new TypeError(\"options.onPage, when provided, must be a function.\");\n    super(), this._options = t;\n  }\n  /** @internal */\n  _createMuxer(t) {\n    return new $o(t, this);\n  }\n  /** @internal */\n  get _name() {\n    return \"Ogg\";\n  }\n  getSupportedTrackCounts() {\n    return {\n      video: { min: 0, max: 0 },\n      audio: { min: 0, max: 1 / 0 },\n      subtitle: { min: 0, max: 0 },\n      total: { min: 1, max: 2 ** 32 }\n    };\n  }\n  get fileExtension() {\n    return \".ogg\";\n  }\n  get mimeType() {\n    return \"application/ogg\";\n  }\n  getSupportedCodecs() {\n    return [\n      ...ne.filter((t) => [\"vorbis\", \"opus\"].includes(t))\n    ];\n  }\n  get supportsVideoRotationMetadata() {\n    return !1;\n  }\n}, $i = class {\n  constructor() {\n    this._connectedTrack = null, this._closingPromise = null, this._closed = !1, this._timestampOffset = 0;\n  }\n  /** @internal */\n  _ensureValidAdd() {\n    if (!this._connectedTrack)\n      throw new Error(\"Source is not connected to an output track.\");\n    if (this._connectedTrack.output.state === \"canceled\")\n      throw new Error(\"Output has been canceled.\");\n    if (this._connectedTrack.output.state === \"finalizing\" || this._connectedTrack.output.state === \"finalized\")\n      throw new Error(\"Output has been finalized.\");\n    if (this._connectedTrack.output.state === \"pending\")\n      throw new Error(\"Output has not started.\");\n    if (this._closed)\n      throw new Error(\"Source is closed.\");\n  }\n  /** @internal */\n  _start() {\n  }\n  /** @internal */\n  async _flushAndClose() {\n  }\n  /**\n   * Closes this source. This prevents future samples from being added and signals to the output file that no further\n   * samples will come in for this track. Calling `.close()` is optional but recommended after adding the\n   * last sample - for improved performance and reduced memory usage.\n   */\n  close() {\n    if (this._closingPromise)\n      throw new Error(\"Source already closed.\");\n    const t = this._connectedTrack;\n    if (!t)\n      throw new Error(\"Cannot call close without connecting the source to an output track.\");\n    if (t.output.state === \"pending\")\n      throw new Error(\"Cannot call close before output has been started.\");\n    return this._closingPromise = (async () => {\n      await this._flushAndClose(), this._closed = !0, !(t.output.state === \"finalizing\" || t.output.state === \"finalized\") && t.output._muxer.onTrackClose(t);\n    })();\n  }\n  /** @internal */\n  async _flushOrWaitForClose() {\n    return this._closingPromise ? this._closingPromise : this._flushAndClose();\n  }\n}, Qr = class extends $i {\n  constructor(e) {\n    if (super(), this._connectedTrack = null, !re.includes(e))\n      throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${re.join(\", \")}.`);\n    this._codec = e;\n  }\n}, nc = (t) => {\n  if (!t || typeof t != \"object\")\n    throw new TypeError(\"Encoding config must be an object.\");\n  if (!re.includes(t.codec))\n    throw new TypeError(`Invalid video codec '${t.codec}'. Must be one of: ${re.join(\", \")}.`);\n  if (!(t.bitrate instanceof Nt) && (!Number.isInteger(t.bitrate) || t.bitrate <= 0))\n    throw new TypeError(\"config.bitrate must be a positive integer or a quality.\");\n  if (t.latencyMode !== void 0 && ![\"quality\", \"realtime\"].includes(t.latencyMode))\n    throw new TypeError(\"config.latencyMode, when provided, must be 'quality' or 'realtime'.\");\n  if (t.keyFrameInterval !== void 0 && (!Number.isFinite(t.keyFrameInterval) || t.keyFrameInterval < 0))\n    throw new TypeError(\"config.keyFrameInterval, when provided, must be a non-negative number.\");\n  if (t.fullCodecString !== void 0 && typeof t.fullCodecString != \"string\")\n    throw new TypeError(\"config.fullCodecString, when provided, must be a string.\");\n  if (t.fullCodecString !== void 0 && hr(t.fullCodecString) !== t.codec)\n    throw new TypeError(\n      `config.fullCodecString, when provided, must be a string that matches the specified codec (${t.codec}).`\n    );\n  if (t.onEncodedPacket !== void 0 && typeof t.onEncodedPacket != \"function\")\n    throw new TypeError(\"config.onEncodedChunk, when provided, must be a function.\");\n  if (t.onEncoderError !== void 0 && typeof t.onEncoderError != \"function\")\n    throw new TypeError(\"config.onEncodingError, when provided, must be a function.\");\n  if (t.onEncoderConfig !== void 0 && typeof t.onEncoderConfig != \"function\")\n    throw new TypeError(\"config.onEncoderConfig, when provided, must be a function.\");\n}, oc = class {\n  constructor(t, e) {\n    this.source = t, this.encodingConfig = e, this.ensureEncoderPromise = null, this.encoderInitialized = !1, this.encoder = null, this.muxer = null, this.lastMultipleOfKeyFrameInterval = -1, this.lastWidth = null, this.lastHeight = null, this.customEncoder = null, this.customEncoderCallSerializer = new Dt(), this.customEncoderQueueSize = 0;\n  }\n  async add(t, e, i) {\n    if (this.source._ensureValidAdd(), this.lastWidth !== null && this.lastHeight !== null) {\n      if (t.codedWidth !== this.lastWidth || t.codedHeight !== this.lastHeight)\n        throw new Error(\n          `Video sample size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${t.codedWidth}x${t.codedHeight}.`\n        );\n    } else\n      this.lastWidth = t.codedWidth, this.lastHeight = t.codedHeight;\n    this.encoderInitialized || (this.ensureEncoderPromise || this.ensureEncoder(t), this.encoderInitialized || await this.ensureEncoderPromise), f(this.encoderInitialized);\n    const s = this.encodingConfig.keyFrameInterval ?? 5, r = Math.floor(t.timestamp / s), a = {\n      ...i,\n      keyFrame: i?.keyFrame || s === 0 || r !== this.lastMultipleOfKeyFrameInterval\n    };\n    if (this.lastMultipleOfKeyFrameInterval = r, this.customEncoder) {\n      this.customEncoderQueueSize++;\n      const n = this.customEncoderCallSerializer.call(() => this.customEncoder.encode(t, a)).then(() => {\n        this.customEncoderQueueSize--, e && t.close();\n      });\n      this.customEncoderQueueSize >= 4 && await n;\n    } else {\n      f(this.encoder);\n      const n = t.toVideoFrame();\n      this.encoder.encode(n, a), n.close(), e && t.close(), this.encoder.encodeQueueSize >= 4 && await new Promise((o) => this.encoder.addEventListener(\"dequeue\", o, { once: !0 }));\n    }\n    await this.muxer.mutex.currentPromise;\n  }\n  async ensureEncoder(t) {\n    if (this.encoder)\n      return;\n    const { promise: e, resolve: i } = Z();\n    this.ensureEncoderPromise = e;\n    const s = t.codedWidth, r = t.codedHeight, a = this.encodingConfig.bitrate instanceof Nt ? this.encodingConfig.bitrate._toVideoBitrate(this.encodingConfig.codec, s, r) : this.encodingConfig.bitrate, n = {\n      codec: this.encodingConfig.fullCodecString ?? ci(\n        this.encodingConfig.codec,\n        s,\n        r,\n        a\n      ),\n      width: s,\n      height: r,\n      bitrate: a,\n      framerate: this.source._connectedTrack?.metadata.frameRate,\n      latencyMode: this.encodingConfig.latencyMode,\n      ...di(this.encodingConfig.codec)\n    };\n    this.encodingConfig.onEncoderConfig?.(n);\n    const o = It.find((c) => c.supports(\n      this.encodingConfig.codec,\n      n\n    ));\n    if (o)\n      this.customEncoder = new o(), this.customEncoder.codec = this.encodingConfig.codec, this.customEncoder.config = n, this.customEncoder.onPacket = (c, l) => {\n        if (!(c instanceof G))\n          throw new TypeError(\"The first argument passed to onPacket must be an EncodedPacket.\");\n        if (l !== void 0 && (!l || typeof l != \"object\"))\n          throw new TypeError(\"The second argument passed to onPacket must be an object or undefined.\");\n        this.encodingConfig.onEncodedPacket?.(c, l), this.muxer.addEncodedVideoPacket(this.source._connectedTrack, c, l);\n      }, await this.customEncoder.init();\n    else {\n      if (typeof VideoEncoder > \"u\")\n        throw new Error(\"VideoEncoder is not supported by this browser.\");\n      if (!(await VideoEncoder.isConfigSupported(n)).supported)\n        throw new Error(\n          \"This specific encoder configuration is not supported by this browser. Consider using another codec or changing your video parameters.\"\n        );\n      this.encoder = new VideoEncoder({\n        output: (l, d) => {\n          const h = G.fromEncodedChunk(l);\n          this.encodingConfig.onEncodedPacket?.(h, d), this.muxer.addEncodedVideoPacket(this.source._connectedTrack, h, d);\n        },\n        error: this.encodingConfig.onEncoderError ?? ((l) => console.error(\"VideoEncoder error:\", l))\n      }), this.encoder.configure(n);\n    }\n    f(this.source._connectedTrack), this.muxer = this.source._connectedTrack.output._muxer, this.encoderInitialized = !0, i();\n  }\n  async flushAndClose() {\n    this.customEncoder ? (this.customEncoderCallSerializer.call(() => this.customEncoder.flush()), await this.customEncoderCallSerializer.call(() => this.customEncoder.close())) : this.encoder && (await this.encoder.flush(), this.encoder.close());\n  }\n  getQueueSize() {\n    return this.customEncoder ? this.customEncoderQueueSize : this.encoder?.encodeQueueSize ?? 0;\n  }\n}, cc = class extends Qr {\n  constructor(t, e) {\n    if (!(typeof HTMLCanvasElement < \"u\" && t instanceof HTMLCanvasElement) && !(typeof OffscreenCanvas < \"u\" && t instanceof OffscreenCanvas))\n      throw new TypeError(\"canvas must be an HTMLCanvasElement or OffscreenCanvas.\");\n    nc(e), super(e.codec), this._encoder = new oc(this, e), this._canvas = t;\n  }\n  /**\n   * Captures the current canvas state as a video sample (frame), encodes it and adds it to the output.\n   *\n   * @param timestamp - The timestamp of the sample, in seconds.\n   * @param duration - The duration of the sample, in seconds.\n   *\n   * @returns A Promise that resolves once the output is ready to receive more samples. You should await this Promise\n   * to respect writer and encoder backpressure.\n   */\n  add(t, e = 0, i) {\n    if (!Number.isFinite(t) || t < 0)\n      throw new TypeError(\"timestamp must be a non-negative number.\");\n    if (!Number.isFinite(e) || e < 0)\n      throw new TypeError(\"duration must be a non-negative number.\");\n    const s = new ki(this._canvas, { timestamp: t, duration: e });\n    return this._encoder.add(s, !0, i);\n  }\n  /** @internal */\n  _flushAndClose() {\n    return this._encoder.flushAndClose();\n  }\n}, Xr = class extends $i {\n  constructor(e) {\n    if (super(), this._connectedTrack = null, !ne.includes(e))\n      throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${ne.join(\", \")}.`);\n    this._codec = e;\n  }\n}, lc = (t) => {\n  if (!t || typeof t != \"object\")\n    throw new TypeError(\"Encoding config must be an object.\");\n  if (!ne.includes(t.codec))\n    throw new TypeError(`Invalid audio codec '${t.codec}'. Must be one of: ${ne.join(\", \")}.`);\n  if (t.bitrate === void 0 && (!K.includes(t.codec) || t.codec === \"flac\"))\n    throw new TypeError(\"config.bitrate must be provided for compressed audio codecs.\");\n  if (t.bitrate !== void 0 && !(t.bitrate instanceof Nt) && (!Number.isInteger(t.bitrate) || t.bitrate <= 0))\n    throw new TypeError(\"config.bitrate, when provided, must be a positive integer or a quality.\");\n  if (t.fullCodecString !== void 0 && typeof t.fullCodecString != \"string\")\n    throw new TypeError(\"config.fullCodecString, when provided, must be a string.\");\n  if (t.fullCodecString !== void 0 && hr(t.fullCodecString) !== t.codec)\n    throw new TypeError(\n      `config.fullCodecString, when provided, must be a string that matches the specified codec (${t.codec}).`\n    );\n  if (t.onEncodedPacket !== void 0 && typeof t.onEncodedPacket != \"function\")\n    throw new TypeError(\"config.onEncodedChunk, when provided, must be a function.\");\n  if (t.onEncoderError !== void 0 && typeof t.onEncoderError != \"function\")\n    throw new TypeError(\"config.onEncodingError, when provided, must be a function.\");\n  if (t.onEncoderConfig !== void 0 && typeof t.onEncoderConfig != \"function\")\n    throw new TypeError(\"config.onEncoderConfig, when provided, must be a function.\");\n}, dc = class {\n  constructor(t, e) {\n    this.source = t, this.encodingConfig = e, this.ensureEncoderPromise = null, this.encoderInitialized = !1, this.encoder = null, this.muxer = null, this.lastNumberOfChannels = null, this.lastSampleRate = null, this.isPcmEncoder = !1, this.outputSampleSize = null, this.writeOutputValue = null, this.customEncoder = null, this.customEncoderCallSerializer = new Dt(), this.customEncoderQueueSize = 0;\n  }\n  async add(t, e) {\n    if (this.source._ensureValidAdd(), this.lastNumberOfChannels !== null && this.lastSampleRate !== null) {\n      if (t.numberOfChannels !== this.lastNumberOfChannels || t.sampleRate !== this.lastSampleRate)\n        throw new Error(\n          `Audio parameters must remain constant. Expected ${this.lastNumberOfChannels} channels at ${this.lastSampleRate} Hz, got ${t.numberOfChannels} channels at ${t.sampleRate} Hz.`\n        );\n    } else\n      this.lastNumberOfChannels = t.numberOfChannels, this.lastSampleRate = t.sampleRate;\n    if (this.encoderInitialized || (this.ensureEncoderPromise || this.ensureEncoder(t), this.encoderInitialized || await this.ensureEncoderPromise), f(this.encoderInitialized), this.customEncoder) {\n      this.customEncoderQueueSize++;\n      const i = this.customEncoderCallSerializer.call(() => this.customEncoder.encode(t)).then(() => {\n        this.customEncoderQueueSize--, e && t.close();\n      });\n      this.customEncoderQueueSize >= 4 && await i, await this.muxer.mutex.currentPromise;\n    } else if (this.isPcmEncoder)\n      await this.doPcmEncoding(t, e);\n    else {\n      f(this.encoder);\n      const i = t.toAudioData();\n      this.encoder.encode(i), i.close(), e && t.close(), this.encoder.encodeQueueSize >= 4 && await new Promise((s) => this.encoder.addEventListener(\"dequeue\", s, { once: !0 })), await this.muxer.mutex.currentPromise;\n    }\n  }\n  async doPcmEncoding(t, e) {\n    f(this.outputSampleSize), f(this.writeOutputValue);\n    const { numberOfChannels: i, numberOfFrames: s, sampleRate: r, timestamp: a } = t, n = 2048, o = [];\n    for (let h = 0; h < s; h += n) {\n      const u = Math.min(n, t.numberOfFrames - h), m = u * i * this.outputSampleSize, p = new ArrayBuffer(m), g = new DataView(p);\n      o.push({ frameCount: u, view: g });\n    }\n    const c = t.allocationSize({ planeIndex: 0, format: \"f32-planar\" }), l = new Float32Array(c / Float32Array.BYTES_PER_ELEMENT);\n    for (let h = 0; h < i; h++) {\n      t.copyTo(l, { planeIndex: h, format: \"f32-planar\" });\n      for (let u = 0; u < o.length; u++) {\n        const { frameCount: m, view: p } = o[u];\n        for (let g = 0; g < m; g++)\n          this.writeOutputValue(\n            p,\n            (g * i + h) * this.outputSampleSize,\n            l[u * n + g]\n          );\n      }\n    }\n    e && t.close();\n    const d = {\n      decoderConfig: {\n        codec: this.encodingConfig.codec,\n        numberOfChannels: i,\n        sampleRate: r\n      }\n    };\n    for (let h = 0; h < o.length; h++) {\n      const { frameCount: u, view: m } = o[h], p = m.buffer, g = h * n, w = new G(\n        new Uint8Array(p),\n        \"key\",\n        a + g / r,\n        u / r\n      );\n      this.encodingConfig.onEncodedPacket?.(w, d), await this.muxer.addEncodedAudioPacket(this.source._connectedTrack, w, d);\n    }\n  }\n  async ensureEncoder(t) {\n    if (this.encoderInitialized)\n      return;\n    const { promise: e, resolve: i } = Z();\n    this.ensureEncoderPromise = e;\n    const { numberOfChannels: s, sampleRate: r } = t, a = this.encodingConfig.bitrate instanceof Nt ? this.encodingConfig.bitrate._toAudioBitrate(this.encodingConfig.codec) : this.encodingConfig.bitrate, n = {\n      codec: this.encodingConfig.fullCodecString ?? li(\n        this.encodingConfig.codec,\n        s,\n        r\n      ),\n      numberOfChannels: s,\n      sampleRate: r,\n      bitrate: a,\n      ...hi(this.encodingConfig.codec)\n    };\n    this.encodingConfig.onEncoderConfig?.(n);\n    const o = Et.find((c) => c.supports(\n      this.encodingConfig.codec,\n      n\n    ));\n    if (o)\n      this.customEncoder = new o(), this.customEncoder.codec = this.encodingConfig.codec, this.customEncoder.config = n, this.customEncoder.onPacket = (c, l) => {\n        if (!(c instanceof G))\n          throw new TypeError(\"The first argument passed to onPacket must be an EncodedPacket.\");\n        if (l !== void 0 && (!l || typeof l != \"object\"))\n          throw new TypeError(\"The second argument passed to onPacket must be an object or undefined.\");\n        this.encodingConfig.onEncodedPacket?.(c, l), this.muxer.addEncodedAudioPacket(this.source._connectedTrack, c, l);\n      }, await this.customEncoder.init();\n    else if (K.includes(this.encodingConfig.codec))\n      this.initPcmEncoder();\n    else {\n      if (typeof AudioEncoder > \"u\")\n        throw new Error(\"AudioEncoder is not supported by this browser.\");\n      if (!(await AudioEncoder.isConfigSupported(n)).supported)\n        throw new Error(\n          \"This specific encoder configuration not supported by this browser. Consider using another codec or changing your audio parameters.\"\n        );\n      this.encoder = new AudioEncoder({\n        output: (l, d) => {\n          const h = G.fromEncodedChunk(l);\n          this.encodingConfig.onEncodedPacket?.(h, d), this.muxer.addEncodedAudioPacket(this.source._connectedTrack, h, d);\n        },\n        error: this.encodingConfig.onEncoderError ?? ((l) => console.error(\"AudioEncoder error:\", l))\n      }), this.encoder.configure(n);\n    }\n    f(this.source._connectedTrack), this.muxer = this.source._connectedTrack.output._muxer, this.encoderInitialized = !0, i();\n  }\n  initPcmEncoder() {\n    this.isPcmEncoder = !0;\n    const t = this.encodingConfig.codec, { dataType: e, sampleSize: i, littleEndian: s } = Be(t);\n    switch (this.outputSampleSize = i, i) {\n      case 1:\n        e === \"unsigned\" ? this.writeOutputValue = (r, a, n) => r.setUint8(a, J((n + 1) * 127.5, 0, 255)) : e === \"signed\" ? this.writeOutputValue = (r, a, n) => {\n          r.setInt8(a, J(Math.round(n * 128), -128, 127));\n        } : e === \"ulaw\" ? this.writeOutputValue = (r, a, n) => {\n          const o = J(Math.floor(n * 32767), -32768, 32767);\n          r.setUint8(a, jo(o));\n        } : e === \"alaw\" ? this.writeOutputValue = (r, a, n) => {\n          const o = J(Math.floor(n * 32767), -32768, 32767);\n          r.setUint8(a, Qo(o));\n        } : f(!1);\n        break;\n      case 2:\n        e === \"unsigned\" ? this.writeOutputValue = (r, a, n) => r.setUint16(a, J((n + 1) * 32767.5, 0, 65535), s) : e === \"signed\" ? this.writeOutputValue = (r, a, n) => r.setInt16(a, J(Math.round(n * 32767), -32768, 32767), s) : f(!1);\n        break;\n      case 3:\n        e === \"unsigned\" ? this.writeOutputValue = (r, a, n) => ir(r, a, J((n + 1) * 83886075e-1, 0, 16777215), s) : e === \"signed\" ? this.writeOutputValue = (r, a, n) => za(\n          r,\n          a,\n          J(Math.round(n * 8388607), -8388608, 8388607),\n          s\n        ) : f(!1);\n        break;\n      case 4:\n        e === \"unsigned\" ? this.writeOutputValue = (r, a, n) => r.setUint32(a, J((n + 1) * 21474836475e-1, 0, 4294967295), s) : e === \"signed\" ? this.writeOutputValue = (r, a, n) => r.setInt32(\n          a,\n          J(Math.round(n * 2147483647), -2147483648, 2147483647),\n          s\n        ) : e === \"float\" ? this.writeOutputValue = (r, a, n) => r.setFloat32(a, n, s) : f(!1);\n    }\n  }\n  async flushAndClose() {\n    this.customEncoder ? (this.customEncoderCallSerializer.call(() => this.customEncoder.flush()), await this.customEncoderCallSerializer.call(() => this.customEncoder.close())) : this.encoder && (await this.encoder.flush(), this.encoder.close());\n  }\n  getQueueSize() {\n    return this.customEncoder ? this.customEncoderQueueSize : this.isPcmEncoder ? 0 : this.encoder?.encodeQueueSize ?? 0;\n  }\n}, hc = class extends Xr {\n  constructor(t) {\n    lc(t), super(t.codec), this._accumulatedFrameCount = 0, this._encoder = new dc(this, t);\n  }\n  /**\n   * Converts an AudioBuffer to audio samples, encodes them and adds them to the output. The first AudioBuffer will\n   * be played at timestamp 0, and any subsequent AudioBuffer will have a timestamp equal to the total duration of\n   * all previous AudioBuffers.\n   *\n   * @returns A Promise that resolves once the output is ready to receive more samples. You should await this Promise\n   * to respect writer and encoder backpressure.\n   */\n  add(t) {\n    if (!(t instanceof AudioBuffer))\n      throw new TypeError(\"audioBuffer must be an AudioBuffer.\");\n    const e = 64 * 1024 * 1024, i = t.numberOfChannels, s = t.sampleRate, r = t.length, a = Math.floor(e / i);\n    let n = 0, o = r;\n    const c = [];\n    for (; o > 0; ) {\n      const l = Math.min(a, o), d = new Float32Array(i * l);\n      for (let u = 0; u < i; u++)\n        t.copyFromChannel(\n          d.subarray(u * l, u * l + l),\n          u,\n          n\n        );\n      const h = new Ft({\n        format: \"f32-planar\",\n        sampleRate: s,\n        numberOfFrames: l,\n        numberOfChannels: i,\n        timestamp: (this._accumulatedFrameCount + n) / s,\n        data: d\n      });\n      c.push(this._encoder.add(h, !0)), n += l, o -= l;\n    }\n    return this._accumulatedFrameCount += r, Promise.all(c);\n  }\n  /** @internal */\n  _flushAndClose() {\n    return this._encoder.flushAndClose();\n  }\n}, uc = class extends $i {\n  constructor(t) {\n    if (super(), this._connectedTrack = null, !ve.includes(t))\n      throw new TypeError(`Invalid subtitle codec '${t}'. Must be one of: ${ve.join(\", \")}.`);\n    this._codec = t;\n  }\n}, fc = [\"video\", \"audio\", \"subtitle\"], ii = (t) => {\n  if (!t || typeof t != \"object\")\n    throw new TypeError(\"metadata must be an object.\");\n  if (t.languageCode !== void 0 && !Oi(t.languageCode))\n    throw new TypeError(\"metadata.languageCode must be a three-letter, ISO 639-2/T language code.\");\n}, mc = class {\n  constructor(t) {\n    if (this.state = \"pending\", this._tracks = [], this._startPromise = null, this._cancelPromise = null, this._finalizePromise = null, this._mutex = new ft(), !t || typeof t != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (!(t.format instanceof Lt))\n      throw new TypeError(\"options.format must be an OutputFormat.\");\n    if (!(t.target instanceof Vi))\n      throw new TypeError(\"options.target must be a Target.\");\n    if (t.target._output)\n      throw new Error(\"Target is already used for another output.\");\n    t.target._output = this, this.format = t.format, this.target = t.target, this._writer = t.target._createWriter(), this._muxer = t.format._createMuxer(this);\n  }\n  /** Adds a video track to the output with the given source. Must be called before output is started. */\n  addVideoTrack(t, e = {}) {\n    if (!(t instanceof Qr))\n      throw new TypeError(\"source must be a VideoSource.\");\n    if (ii(e), e.rotation !== void 0 && ![0, 90, 180, 270].includes(e.rotation))\n      throw new TypeError(`Invalid video rotation: ${e.rotation}. Has to be 0, 90, 180 or 270.`);\n    if (!this.format.supportsVideoRotationMetadata && e.rotation)\n      throw new Error(`${this.format._name} does not support video rotation metadata.`);\n    if (e.frameRate !== void 0 && (!Number.isFinite(e.frameRate) || e.frameRate <= 0))\n      throw new TypeError(\n        `Invalid video frame rate: ${e.frameRate}. Must be a positive number.`\n      );\n    this._addTrack(\"video\", t, e);\n  }\n  /** Adds an audio track to the output with the given source. Must be called before output is started. */\n  addAudioTrack(t, e = {}) {\n    if (!(t instanceof Xr))\n      throw new TypeError(\"source must be an AudioSource.\");\n    ii(e), this._addTrack(\"audio\", t, e);\n  }\n  /** Adds a subtitle track to the output with the given source. Must be called before output is started. */\n  addSubtitleTrack(t, e = {}) {\n    if (!(t instanceof uc))\n      throw new TypeError(\"source must be a SubtitleSource.\");\n    ii(e), this._addTrack(\"subtitle\", t, e);\n  }\n  /** @internal */\n  _addTrack(t, e, i) {\n    if (this.state !== \"pending\")\n      throw new Error(\"Cannot add track after output has been started or canceled.\");\n    if (e._connectedTrack)\n      throw new Error(\"Source is already used for a track.\");\n    const s = this.format.getSupportedTrackCounts(), r = this._tracks.reduce(\n      (c, l) => c + (l.type === t ? 1 : 0),\n      0\n    ), a = s[t].max;\n    if (r === a)\n      throw new Error(\n        a === 0 ? `${this.format._name} does not support ${t} tracks.` : `${this.format._name} does not support more than ${a} ${t} track${a === 1 ? \"\" : \"s\"}.`\n      );\n    const n = s.total.max;\n    if (this._tracks.length === n)\n      throw new Error(\n        `${this.format._name} does not support more than ${n} tracks${n === 1 ? \"\" : \"s\"} in total.`\n      );\n    const o = {\n      id: this._tracks.length + 1,\n      output: this,\n      type: t,\n      source: e,\n      metadata: i\n    };\n    if (o.type === \"video\") {\n      const c = this.format.getSupportedVideoCodecs();\n      if (c.length === 0)\n        throw new Error(\n          `${this.format._name} does not support video tracks.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n      if (!c.includes(o.source._codec))\n        throw new Error(\n          `Codec '${o.source._codec}' cannot be contained within ${this.format._name}. Supported video codecs are: ${c.map((l) => `'${l}'`).join(\", \")}.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n    } else if (o.type === \"audio\") {\n      const c = this.format.getSupportedAudioCodecs();\n      if (c.length === 0)\n        throw new Error(\n          `${this.format._name} does not support audio tracks.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n      if (!c.includes(o.source._codec))\n        throw new Error(\n          `Codec '${o.source._codec}' cannot be contained within ${this.format._name}. Supported audio codecs are: ${c.map((l) => `'${l}'`).join(\", \")}.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n    } else if (o.type === \"subtitle\") {\n      const c = this.format.getSupportedSubtitleCodecs();\n      if (c.length === 0)\n        throw new Error(\n          `${this.format._name} does not support subtitle tracks.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n      if (!c.includes(o.source._codec))\n        throw new Error(\n          `Codec '${o.source._codec}' cannot be contained within ${this.format._name}. Supported subtitle codecs are: ${c.map((l) => `'${l}'`).join(\", \")}.` + this.format._codecUnsupportedHint(o.source._codec)\n        );\n    }\n    this._tracks.push(o), e._connectedTrack = o;\n  }\n  /**\n   * Starts the creation of the output file. This method should be called after all tracks have been added. Only after\n   * the output has started can media samples be added to the tracks.\n   *\n   * @returns A promise that resolves when the output has successfully started and is ready to receive media samples.\n   */\n  async start() {\n    const t = this.format.getSupportedTrackCounts();\n    for (const i of fc) {\n      const s = this._tracks.reduce(\n        (a, n) => a + (n.type === i ? 1 : 0),\n        0\n      ), r = t[i].min;\n      if (s < r)\n        throw new Error(\n          r === t[i].max ? `${this.format._name} requires exactly ${r} ${i} track${r === 1 ? \"\" : \"s\"}.` : `${this.format._name} requires at least ${r} ${i} track${r === 1 ? \"\" : \"s\"}.`\n        );\n    }\n    const e = t.total.min;\n    if (this._tracks.length < e)\n      throw new Error(\n        e === t.total.max ? `${this.format._name} requires exactly ${e} track${e === 1 ? \"\" : \"s\"}.` : `${this.format._name} requires at least ${e} track${e === 1 ? \"\" : \"s\"}.`\n      );\n    if (this.state === \"canceled\")\n      throw new Error(\"Output has been canceled.\");\n    return this._startPromise ? (console.warn(\"Output has already been started.\"), this._startPromise) : this._startPromise = (async () => {\n      this.state = \"started\", this._writer.start();\n      const i = await this._mutex.acquire();\n      await this._muxer.start();\n      for (const s of this._tracks)\n        s.source._start();\n      i();\n    })();\n  }\n  /**\n   * Cancels the creation of the output file, releasing internal resources like encoders and preventing further\n   * samples from being added.\n   *\n   * @returns A promise that resolves once all internal resources have been released.\n   */\n  async cancel() {\n    if (this._cancelPromise)\n      return console.warn(\"Output has already been canceled.\"), this._cancelPromise;\n    if (this.state === \"finalizing\" || this.state === \"finalized\") {\n      console.warn(\"Output has already been finalized.\");\n      return;\n    }\n    return this._cancelPromise = (async () => {\n      this.state = \"canceled\";\n      const t = await this._mutex.acquire(), e = this._tracks.map((i) => i.source._flushOrWaitForClose());\n      await Promise.all(e), await this._writer.close(), t();\n    })();\n  }\n  /**\n   * Finalizes the output file. This method must be called after all media samples across all tracks have been added.\n   * Once the Promise returned by this method completes, the output file is ready.\n   */\n  async finalize() {\n    if (this.state === \"pending\")\n      throw new Error(\"Cannot finalize before starting.\");\n    if (this.state === \"canceled\")\n      throw new Error(\"Cannot finalize after canceling.\");\n    return this._finalizePromise ? (console.warn(\"Output has already been finalized.\"), this._finalizePromise) : this._finalizePromise = (async () => {\n      this.state = \"finalizing\";\n      const t = await this._mutex.acquire(), e = this._tracks.map((i) => i.source._flushOrWaitForClose());\n      await Promise.all(e), await this._muxer.finalize(), await this._writer.flush(), await this._writer.finalize(), this.state = \"finalized\", t();\n    })();\n  }\n}, ji = class {\n  constructor() {\n    this._sizePromise = null, this.onread = null;\n  }\n  /**\n   * Resolves with the total size of the file in bytes. This function is memoized, meaning only the first call\n   * will retrieve the size.\n   */\n  getSize() {\n    return this._sizePromise ??= this._retrieveSize();\n  }\n}, ks = class extends ji {\n  constructor(t) {\n    if (!(t instanceof Blob))\n      throw new TypeError(\"blob must be a Blob.\");\n    super(), this._blob = t;\n  }\n  /** @internal */\n  async _read(t, e) {\n    const s = await this._blob.slice(t, e).arrayBuffer();\n    return new Uint8Array(s);\n  }\n  /** @internal */\n  async _retrieveSize() {\n    return this._blob.size;\n  }\n}, pc = class extends ji {\n  constructor(t, e = {}) {\n    if (typeof t != \"string\" && !(t instanceof URL))\n      throw new TypeError(\"url must be a string or URL.\");\n    if (!e || typeof e != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (e.requestInit !== void 0 && (!e.requestInit || typeof e.requestInit != \"object\"))\n      throw new TypeError(\"options.requestInit, when provided, must be an object.\");\n    if (e.getRetryDelay !== void 0 && typeof e.getRetryDelay != \"function\")\n      throw new TypeError(\"options.getRetryDelay, when provided, must be a function.\");\n    super(), this._fullData = null, this._url = t, this._options = e;\n  }\n  /** @internal */\n  async _makeRequest(t) {\n    const e = {};\n    t && (e.Range = `bytes=${t.start}-${t.end - 1}`);\n    const i = await ts(\n      this._url,\n      oi(this._options.requestInit ?? {}, {\n        method: \"GET\",\n        headers: e\n      }),\n      this._options.getRetryDelay ?? (() => null)\n    );\n    if (!i.ok)\n      throw new Error(`Error fetching ${this._url}: ${i.status} ${i.statusText}`);\n    const s = await i.arrayBuffer();\n    return t || (this._fullData = s), {\n      response: s,\n      statusCode: i.status\n    };\n  }\n  /** @internal */\n  async _read(t, e) {\n    if (this._fullData)\n      return new Uint8Array(this._fullData, t, e - t);\n    const { response: i, statusCode: s } = await this._makeRequest({ start: t, end: e });\n    return s === 200 ? new Uint8Array(i).subarray(t, e) : new Uint8Array(i);\n  }\n  /** @internal */\n  async _retrieveSize() {\n    if (this._fullData)\n      return this._fullData.byteLength;\n    const t = await ts(\n      this._url,\n      oi(this._options.requestInit ?? {}, {\n        method: \"GET\",\n        headers: { Range: \"bytes=0-0\" }\n      }),\n      this._options.getRetryDelay ?? (() => null)\n    );\n    if (t.status === 206) {\n      const i = t.headers.get(\"Content-Range\");\n      if (i) {\n        const s = i.match(/bytes \\d+-\\d+\\/(\\d+)/);\n        if (s && s[1])\n          return parseInt(s[1], 10);\n      }\n    }\n    const { response: e } = await this._makeRequest();\n    return e.byteLength;\n  }\n}, xt = 16, Ti = class {\n  constructor(t) {\n    this.reader = t, this.pos = 0;\n  }\n  readBytes(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, new Uint8Array(e.buffer, i, t);\n  }\n  readU8() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 1);\n    return this.pos++, t.getUint8(e);\n  }\n  readU16() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 2);\n    return this.pos += 2, t.getUint16(e, !1);\n  }\n  readI16() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 2);\n    return this.pos += 2, t.getInt16(e, !1);\n  }\n  readU24() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 3);\n    this.pos += 3;\n    const i = t.getUint16(e, !1), s = t.getUint8(e + 2);\n    return i * 256 + s;\n  }\n  readU32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getUint32(e, !1);\n  }\n  readI32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getInt32(e, !1);\n  }\n  readU64() {\n    const t = this.readU32(), e = this.readU32();\n    return t * 4294967296 + e;\n  }\n  readI64() {\n    const t = this.readI32(), e = this.readU32();\n    return t * 4294967296 + e;\n  }\n  readF64() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 8);\n    return this.pos += 8, t.getFloat64(e, !1);\n  }\n  readFixed_16_16() {\n    return this.readI32() / 65536;\n  }\n  readFixed_2_30() {\n    return this.readI32() / 1073741824;\n  }\n  readAscii(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    this.pos += t;\n    let s = \"\";\n    for (let r = 0; r < t; r++)\n      s += String.fromCharCode(e.getUint8(i + r));\n    return s;\n  }\n  readIsomVariableInteger() {\n    let t = 0;\n    for (let e = 0; e < 4; e++) {\n      t <<= 7;\n      const i = this.readU8();\n      if (t |= i & 127, !(i & 128))\n        break;\n    }\n    return t;\n  }\n  readBoxHeader() {\n    let t = this.readU32();\n    const e = this.readAscii(4);\n    let i = 8;\n    return t === 1 && (t = this.readU64(), i = 16), { name: e, totalSize: t, headerSize: i, contentSize: t - i };\n  }\n}, gc = class extends mt {\n  constructor(t) {\n    super(t), this.currentTrack = null, this.tracks = [], this.metadataPromise = null, this.movieTimescale = -1, this.movieDurationInTimescale = -1, this.isQuickTime = !1, this.isFragmented = !1, this.fragmentTrackDefaults = [], this.fragments = [], this.currentFragment = null, this.fragmentLookupMutex = new ft(), this.metadataReader = new Ti(t._mainReader), this.chunkReader = new Ti(new gt(t.source, 64 * 2 ** 20));\n  }\n  async computeDuration() {\n    const t = await this.getTracks(), e = await Promise.all(t.map((i) => i.computeDuration()));\n    return Math.max(0, ...e);\n  }\n  async getTracks() {\n    return await this.readMetadata(), this.tracks.map((t) => t.inputTrack);\n  }\n  async getMimeType() {\n    await this.readMetadata();\n    let e = (this.tracks.some((i) => i.info?.type === \"video\") ? \"video/\" : this.tracks.some((i) => i.info?.type === \"audio\") ? \"audio/\" : \"application/\") + (this.isQuickTime ? \"quicktime\" : \"mp4\");\n    if (this.tracks.length > 0) {\n      const i = await Promise.all(this.tracks.map((r) => r.inputTrack.getCodecParameterString())), s = [...new Set(i.filter(Boolean))];\n      e += `; codecs=\"${s.join(\", \")}\"`;\n    }\n    return e;\n  }\n  readMetadata() {\n    return this.metadataPromise ??= (async () => {\n      const t = await this.metadataReader.reader.source.getSize();\n      for (; this.metadataReader.pos < t; ) {\n        await this.metadataReader.reader.loadRange(\n          this.metadataReader.pos,\n          this.metadataReader.pos + xt\n        );\n        const e = this.metadataReader.pos, i = this.metadataReader.readBoxHeader();\n        if (i.name === \"ftyp\") {\n          const s = this.metadataReader.readAscii(4);\n          this.isQuickTime = s === \"qt  \";\n        } else if (i.name === \"moov\") {\n          await this.metadataReader.reader.loadRange(\n            this.metadataReader.pos,\n            this.metadataReader.pos + i.contentSize\n          ), this.readContiguousBoxes(i.contentSize);\n          for (const s of this.tracks) {\n            const r = s.editListPreviousSegmentDurations / this.movieTimescale;\n            s.editListOffset -= Math.round(r * s.timescale);\n          }\n          break;\n        }\n        this.metadataReader.pos = e + i.totalSize;\n      }\n      if (this.isFragmented) {\n        await this.metadataReader.reader.loadRange(t - 4, t), this.metadataReader.pos = t - 4;\n        const e = this.metadataReader.readU32(), i = t - e;\n        if (i >= 0 && i < t) {\n          await this.metadataReader.reader.loadRange(i, t), this.metadataReader.pos = i;\n          const s = this.metadataReader.readBoxHeader();\n          s.name === \"mfra\" && this.readContiguousBoxes(s.contentSize);\n        }\n      }\n    })();\n  }\n  getSampleTableForTrack(t) {\n    if (t.sampleTable)\n      return t.sampleTable;\n    const e = {\n      sampleTimingEntries: [],\n      sampleCompositionTimeOffsets: [],\n      sampleSizes: [],\n      keySampleIndices: null,\n      chunkOffsets: [],\n      sampleToChunk: [],\n      presentationTimestamps: null,\n      presentationTimestampIndexMap: null\n    };\n    if (t.sampleTable = e, this.metadataReader.pos = t.sampleTableByteOffset, this.currentTrack = t, this.traverseBox(), this.currentTrack = null, t.info?.type === \"audio\" && t.info.codec && K.includes(t.info.codec) && e.sampleCompositionTimeOffsets.length === 0) {\n      const s = [], r = [];\n      for (let a = 0; a < e.sampleToChunk.length; a++) {\n        const n = e.sampleToChunk[a], o = e.sampleToChunk[a + 1], c = (o ? o.startChunkIndex : e.chunkOffsets.length) - n.startChunkIndex;\n        for (let l = 0; l < c; l++) {\n          const d = n.startSampleIndex + l * n.samplesPerChunk, h = d + n.samplesPerChunk, u = N(\n            e.sampleTimingEntries,\n            d,\n            (y) => y.startIndex\n          ), m = e.sampleTimingEntries[u], p = N(\n            e.sampleTimingEntries,\n            h,\n            (y) => y.startIndex\n          ), g = e.sampleTimingEntries[p], w = m.startDecodeTimestamp + (d - m.startIndex) * m.delta, x = g.startDecodeTimestamp + (h - g.startIndex) * g.delta - w, S = H(s);\n          S && S.delta === x ? S.count++ : s.push({\n            startIndex: n.startChunkIndex + l,\n            startDecodeTimestamp: w,\n            count: 1,\n            delta: x\n          });\n          let k = 0;\n          if (e.sampleSizes.length === 1)\n            k = e.sampleSizes[0] * n.samplesPerChunk;\n          else\n            for (let y = d; y < h; y++)\n              k += e.sampleSizes[y];\n          r.push(k);\n        }\n        n.startSampleIndex = n.startChunkIndex, n.samplesPerChunk = 1;\n      }\n      e.sampleTimingEntries = s, e.sampleSizes = r;\n    }\n    if (e.sampleCompositionTimeOffsets.length > 0) {\n      e.presentationTimestamps = [];\n      for (const s of e.sampleTimingEntries)\n        for (let r = 0; r < s.count; r++)\n          e.presentationTimestamps.push({\n            presentationTimestamp: s.startDecodeTimestamp + r * s.delta,\n            sampleIndex: s.startIndex + r\n          });\n      for (const s of e.sampleCompositionTimeOffsets)\n        for (let r = 0; r < s.count; r++) {\n          const a = s.startIndex + r, n = e.presentationTimestamps[a];\n          n && (n.presentationTimestamp += s.offset);\n        }\n      e.presentationTimestamps.sort((s, r) => s.presentationTimestamp - r.presentationTimestamp), e.presentationTimestampIndexMap = Array(e.presentationTimestamps.length).fill(-1);\n      for (let s = 0; s < e.presentationTimestamps.length; s++)\n        e.presentationTimestampIndexMap[e.presentationTimestamps[s].sampleIndex] = s;\n    }\n    return e;\n  }\n  async readFragment() {\n    const t = this.metadataReader.pos;\n    await this.metadataReader.reader.loadRange(\n      this.metadataReader.pos,\n      this.metadataReader.pos + xt\n    );\n    const e = this.metadataReader.readBoxHeader();\n    f(e.name === \"moof\");\n    const i = this.metadataReader.pos;\n    await this.metadataReader.reader.loadRange(i, i + e.contentSize), this.metadataReader.pos = t, this.traverseBox();\n    const s = X(this.fragments, t, (a) => a.moofOffset);\n    f(s !== -1);\n    const r = this.fragments[s];\n    f(r.moofOffset === t), this.metadataReader.reader.forgetRange(i, i + e.contentSize);\n    for (const [a, n] of r.trackData) {\n      if (n.startTimestampIsFinal)\n        continue;\n      const o = this.tracks.find((u) => u.id === a);\n      this.metadataReader.pos = 0;\n      let c = null, l = null;\n      const d = N(\n        o.fragments,\n        t - 1,\n        (u) => u.moofOffset\n      );\n      d !== -1 && (c = o.fragments[d], l = c, this.metadataReader.pos = c.moofOffset + c.moofSize);\n      let h = this.metadataReader.pos === 0;\n      for (; this.metadataReader.pos < t; ) {\n        if (c?.nextFragment)\n          c = c.nextFragment, this.metadataReader.pos = c.moofOffset + c.moofSize;\n        else {\n          await this.metadataReader.reader.loadRange(\n            this.metadataReader.pos,\n            this.metadataReader.pos + xt\n          );\n          const u = this.metadataReader.pos, m = this.metadataReader.readBoxHeader();\n          if (m.name === \"moof\") {\n            const p = X(this.fragments, u, (w) => w.moofOffset);\n            let g;\n            p === -1 ? (this.metadataReader.pos = u, g = await this.readFragment()) : g = this.fragments[p], c && (c.nextFragment = g), c = g, h && (g.isKnownToBeFirstFragment = !0, h = !1);\n          }\n          this.metadataReader.pos = u + m.totalSize;\n        }\n        c && c.trackData.has(a) && (l = c);\n      }\n      if (l) {\n        const u = l.trackData.get(a);\n        f(u.startTimestampIsFinal), vs(n, u.endTimestamp);\n      }\n      n.startTimestampIsFinal = !0;\n    }\n    return r;\n  }\n  readContiguousBoxes(t) {\n    const e = this.metadataReader.pos;\n    for (; this.metadataReader.pos - e < t; )\n      this.traverseBox();\n  }\n  traverseBox() {\n    const t = this.metadataReader.pos, e = this.metadataReader.readBoxHeader(), i = t + e.totalSize;\n    switch (e.name) {\n      case \"mdia\":\n      case \"minf\":\n      case \"dinf\":\n      case \"mfra\":\n      case \"edts\":\n        this.readContiguousBoxes(e.contentSize);\n        break;\n      case \"mvhd\":\n        {\n          const s = this.metadataReader.readU8();\n          this.metadataReader.pos += 3, s === 1 ? (this.metadataReader.pos += 16, this.movieTimescale = this.metadataReader.readU32(), this.movieDurationInTimescale = this.metadataReader.readU64()) : (this.metadataReader.pos += 8, this.movieTimescale = this.metadataReader.readU32(), this.movieDurationInTimescale = this.metadataReader.readU32());\n        }\n        break;\n      case \"trak\":\n        {\n          const s = {\n            id: -1,\n            demuxer: this,\n            inputTrack: null,\n            info: null,\n            timescale: -1,\n            durationInMovieTimescale: -1,\n            durationInMediaTimescale: -1,\n            rotation: 0,\n            languageCode: fe,\n            sampleTableByteOffset: -1,\n            sampleTable: null,\n            fragmentLookupTable: null,\n            currentFragmentState: null,\n            fragments: [],\n            editListPreviousSegmentDurations: 0,\n            editListOffset: 0\n          };\n          if (this.currentTrack = s, this.readContiguousBoxes(e.contentSize), s.id !== -1 && s.timescale !== -1 && s.info !== null) {\n            if (s.info.type === \"video\" && s.info.width !== -1) {\n              const r = s;\n              s.inputTrack = new pt(new wc(r)), this.tracks.push(s);\n            } else if (s.info.type === \"audio\" && s.info.numberOfChannels !== -1) {\n              const r = s;\n              s.inputTrack = new xe(new yc(r)), this.tracks.push(s);\n            }\n          }\n          this.currentTrack = null;\n        }\n        break;\n      case \"tkhd\":\n        {\n          const s = this.currentTrack;\n          f(s);\n          const r = this.metadataReader.readU8();\n          if (!((this.metadataReader.readU24() & 1) !== 0))\n            break;\n          if (r === 0)\n            this.metadataReader.pos += 8, s.id = this.metadataReader.readU32(), this.metadataReader.pos += 4, s.durationInMovieTimescale = this.metadataReader.readU32();\n          else if (r === 1)\n            this.metadataReader.pos += 16, s.id = this.metadataReader.readU32(), this.metadataReader.pos += 4, s.durationInMovieTimescale = this.metadataReader.readU64();\n          else\n            throw new Error(`Incorrect track header version ${r}.`);\n          this.metadataReader.pos += 2 * 4 + 2 + 2 + 2 + 2;\n          const o = [\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_2_30(),\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_2_30(),\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_16_16(),\n            this.metadataReader.readFixed_2_30()\n          ], c = Fi(ni(vc(o), 90));\n          f(c === 0 || c === 90 || c === 180 || c === 270), s.rotation = c;\n        }\n        break;\n      case \"elst\":\n        {\n          const s = this.currentTrack;\n          f(s);\n          const r = this.metadataReader.readU8();\n          this.metadataReader.pos += 3;\n          let a = !1, n = 0;\n          const o = this.metadataReader.readU32();\n          for (let c = 0; c < o; c++) {\n            const l = r === 1 ? this.metadataReader.readU64() : this.metadataReader.readU32(), d = r === 1 ? this.metadataReader.readI64() : this.metadataReader.readI32(), h = this.metadataReader.readFixed_16_16();\n            if (l !== 0) {\n              if (a)\n                throw new Error(\"Unsupported edit list: multiple edits are not supported.\");\n              if (d === -1) {\n                n += l;\n                continue;\n              }\n              if (h !== 1)\n                throw new Error(\"Unsupported edit list: media rate must be 1.\");\n              s.editListPreviousSegmentDurations = n, s.editListOffset = d, a = !0;\n            }\n          }\n        }\n        break;\n      case \"mdhd\":\n        {\n          const s = this.currentTrack;\n          f(s);\n          const r = this.metadataReader.readU8();\n          this.metadataReader.pos += 3, r === 0 ? (this.metadataReader.pos += 8, s.timescale = this.metadataReader.readU32(), s.durationInMediaTimescale = this.metadataReader.readU32()) : r === 1 && (this.metadataReader.pos += 16, s.timescale = this.metadataReader.readU32(), s.durationInMediaTimescale = this.metadataReader.readU64());\n          let a = this.metadataReader.readU16();\n          if (a > 0) {\n            s.languageCode = \"\";\n            for (let n = 0; n < 3; n++)\n              s.languageCode = String.fromCharCode(96 + (a & 31)) + s.languageCode, a >>= 5;\n            Oi(s.languageCode) || (s.languageCode = fe);\n          }\n        }\n        break;\n      case \"hdlr\":\n        {\n          const s = this.currentTrack;\n          f(s), this.metadataReader.pos += 8;\n          const r = this.metadataReader.readAscii(4);\n          r === \"vide\" ? s.info = {\n            type: \"video\",\n            width: -1,\n            height: -1,\n            codec: null,\n            codecDescription: null,\n            colorSpace: null,\n            avcCodecInfo: null,\n            hevcCodecInfo: null,\n            vp9CodecInfo: null,\n            av1CodecInfo: null\n          } : r === \"soun\" && (s.info = {\n            type: \"audio\",\n            numberOfChannels: -1,\n            sampleRate: -1,\n            codec: null,\n            codecDescription: null,\n            aacCodecInfo: null\n          });\n        }\n        break;\n      case \"stbl\":\n        {\n          const s = this.currentTrack;\n          f(s), s.sampleTableByteOffset = t, this.readContiguousBoxes(e.contentSize);\n        }\n        break;\n      case \"stsd\":\n        {\n          const s = this.currentTrack;\n          if (f(s), s.info === null || s.sampleTable)\n            break;\n          const r = this.metadataReader.readU8();\n          this.metadataReader.pos += 3;\n          const a = this.metadataReader.readU32();\n          for (let n = 0; n < a; n++) {\n            const o = this.metadataReader.readBoxHeader(), c = o.name.toLowerCase();\n            if (s.info.type === \"video\")\n              c === \"avc1\" ? s.info.codec = \"avc\" : c === \"hvc1\" || c === \"hev1\" ? s.info.codec = \"hevc\" : c === \"vp08\" ? s.info.codec = \"vp8\" : c === \"vp09\" ? s.info.codec = \"vp9\" : c === \"av01\" ? s.info.codec = \"av1\" : console.warn(`Unsupported video codec (sample entry type '${o.name}').`), this.metadataReader.pos += 6 * 1 + 2 + 2 + 2 + 3 * 4, s.info.width = this.metadataReader.readU16(), s.info.height = this.metadataReader.readU16(), this.metadataReader.pos += 50, this.readContiguousBoxes(t + o.totalSize - this.metadataReader.pos);\n            else {\n              c === \"mp4a\" || (c === \"opus\" ? s.info.codec = \"opus\" : c === \"flac\" ? s.info.codec = \"flac\" : c === \"twos\" || c === \"sowt\" || c === \"raw \" || c === \"in24\" || c === \"in32\" || c === \"fl32\" || c === \"lpcm\" || (c === \"ulaw\" ? s.info.codec = \"ulaw\" : c === \"alaw\" ? s.info.codec = \"alaw\" : console.warn(`Unsupported audio codec (sample entry type '${o.name}').`))), this.metadataReader.pos += 6 * 1 + 2;\n              const l = this.metadataReader.readU16();\n              this.metadataReader.pos += 3 * 2;\n              let d = this.metadataReader.readU16(), h = this.metadataReader.readU16();\n              this.metadataReader.pos += 2 * 2;\n              let u = this.metadataReader.readU32() / 65536;\n              if (r === 0 && l > 0) {\n                if (l === 1)\n                  this.metadataReader.pos += 4, h = 8 * this.metadataReader.readU32(), this.metadataReader.pos += 2 * 4;\n                else if (l === 2) {\n                  this.metadataReader.pos += 4, u = this.metadataReader.readF64(), d = this.metadataReader.readU32(), this.metadataReader.pos += 4, h = this.metadataReader.readU32();\n                  const m = this.metadataReader.readU32();\n                  if (this.metadataReader.pos += 2 * 4, c === \"lpcm\") {\n                    const p = h + 7 >> 3, g = !!(m & 1), w = !!(m & 2), b = m & 4 ? -1 : 0;\n                    h > 0 && h <= 64 && (g ? h === 32 && (s.info.codec = w ? \"pcm-f32be\" : \"pcm-f32\") : b & 1 << p - 1 ? p === 1 ? s.info.codec = \"pcm-s8\" : p === 2 ? s.info.codec = w ? \"pcm-s16be\" : \"pcm-s16\" : p === 3 ? s.info.codec = w ? \"pcm-s24be\" : \"pcm-s24\" : p === 4 && (s.info.codec = w ? \"pcm-s32be\" : \"pcm-s32\") : p === 1 && (s.info.codec = \"pcm-u8\")), s.info.codec === null && console.warn(\"Unsupported PCM format.\");\n                  }\n                }\n              }\n              if (s.info.numberOfChannels = d, s.info.sampleRate = u, c === \"twos\")\n                if (h === 8)\n                  s.info.codec = \"pcm-s8\";\n                else if (h === 16)\n                  s.info.codec = \"pcm-s16be\";\n                else\n                  throw new Error(`Unsupported sample size ${h} for codec 'twos'.`);\n              else if (c === \"sowt\")\n                if (h === 8)\n                  s.info.codec = \"pcm-s8\";\n                else if (h === 16)\n                  s.info.codec = \"pcm-s16\";\n                else\n                  throw new Error(`Unsupported sample size ${h} for codec 'sowt'.`);\n              else c === \"raw \" ? s.info.codec = \"pcm-u8\" : c === \"in24\" ? s.info.codec = \"pcm-s24be\" : c === \"in32\" ? s.info.codec = \"pcm-s32be\" : c === \"fl32\" && (s.info.codec = \"pcm-f32be\");\n              this.readContiguousBoxes(t + o.totalSize - this.metadataReader.pos);\n            }\n          }\n        }\n        break;\n      case \"avcC\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info), s.info.codecDescription = this.metadataReader.readBytes(e.contentSize);\n        }\n        break;\n      case \"hvcC\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info), s.info.codecDescription = this.metadataReader.readBytes(e.contentSize);\n        }\n        break;\n      case \"vpcC\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"video\"), this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU8(), a = this.metadataReader.readU8(), n = this.metadataReader.readU8(), o = n >> 4, c = n >> 1 & 7, l = n & 1, d = this.metadataReader.readU8(), h = this.metadataReader.readU8(), u = this.metadataReader.readU8();\n          s.info.vp9CodecInfo = {\n            profile: r,\n            level: a,\n            bitDepth: o,\n            chromaSubsampling: c,\n            videoFullRangeFlag: l,\n            colourPrimaries: d,\n            transferCharacteristics: h,\n            matrixCoefficients: u\n          };\n        }\n        break;\n      case \"av1C\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"video\"), this.metadataReader.pos += 1;\n          const r = this.metadataReader.readU8(), a = r >> 5, n = r & 31, o = this.metadataReader.readU8(), c = o >> 7, l = o >> 6 & 1, d = o >> 5 & 1, h = o >> 4 & 1, u = o >> 3 & 1, m = o >> 2 & 1, p = o & 3, g = a == 2 && l ? d ? 12 : 10 : l ? 10 : 8;\n          s.info.av1CodecInfo = {\n            profile: a,\n            level: n,\n            tier: c,\n            bitDepth: g,\n            monochrome: h,\n            chromaSubsamplingX: u,\n            chromaSubsamplingY: m,\n            chromaSamplePosition: p\n          };\n        }\n        break;\n      case \"colr\":\n        {\n          const s = this.currentTrack;\n          if (f(s && s.info?.type === \"video\"), this.metadataReader.readAscii(4) !== \"nclx\")\n            break;\n          const a = this.metadataReader.readU16(), n = this.metadataReader.readU16(), o = this.metadataReader.readU16(), c = !!(this.metadataReader.readU8() & 128);\n          s.info.colorSpace = {\n            primaries: Ks[a],\n            transfer: Gs[n],\n            matrix: Ys[o],\n            fullRange: c\n          };\n        }\n        break;\n      case \"wave\":\n        e.totalSize > 8 && this.readContiguousBoxes(e.contentSize);\n        break;\n      case \"esds\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"audio\"), this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU8();\n          f(r === 3), this.metadataReader.readIsomVariableInteger(), this.metadataReader.pos += 2;\n          const a = this.metadataReader.readU8(), n = (a & 128) !== 0, o = (a & 64) !== 0, c = (a & 32) !== 0;\n          if (n && (this.metadataReader.pos += 2), o) {\n            const m = this.metadataReader.readU8();\n            this.metadataReader.pos += m;\n          }\n          c && (this.metadataReader.pos += 2);\n          const l = this.metadataReader.readU8();\n          f(l === 4);\n          const d = this.metadataReader.readIsomVariableInteger(), h = this.metadataReader.pos, u = this.metadataReader.readU8();\n          if (u === 64 || u === 103 ? (s.info.codec = \"aac\", s.info.aacCodecInfo = { isMpeg2: u === 103 }) : u === 105 || u === 107 ? s.info.codec = \"mp3\" : u === 221 ? s.info.codec = \"vorbis\" : console.warn(\n            `Unsupported audio codec (objectTypeIndication ${u}) - discarding track.`\n          ), this.metadataReader.pos += 12, d > this.metadataReader.pos - h) {\n            const m = this.metadataReader.readU8();\n            f(m === 5);\n            const p = this.metadataReader.readIsomVariableInteger();\n            if (s.info.codecDescription = this.metadataReader.readBytes(p), s.info.codec === \"aac\") {\n              const g = lr(s.info.codecDescription);\n              g.numberOfChannels !== null && (s.info.numberOfChannels = g.numberOfChannels), g.sampleRate !== null && (s.info.sampleRate = g.sampleRate);\n            }\n          }\n        }\n        break;\n      case \"enda\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"audio\"), this.metadataReader.readU16() & 255 && (s.info.codec === \"pcm-s16be\" ? s.info.codec = \"pcm-s16\" : s.info.codec === \"pcm-s24be\" ? s.info.codec = \"pcm-s24\" : s.info.codec === \"pcm-s32be\" ? s.info.codec = \"pcm-s32\" : s.info.codec === \"pcm-f32be\" && (s.info.codec = \"pcm-f32\"));\n        }\n        break;\n      case \"dOps\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"audio\"), this.metadataReader.pos += 1;\n          const r = this.metadataReader.readU8(), a = this.metadataReader.readU16(), n = this.metadataReader.readU32(), o = this.metadataReader.readI16(), c = this.metadataReader.readU8();\n          let l;\n          c !== 0 ? l = this.metadataReader.readBytes(2 + r) : l = new Uint8Array(0);\n          const d = new Uint8Array(19 + l.byteLength), h = new DataView(d.buffer);\n          h.setUint32(0, 1332770163, !1), h.setUint32(4, 1214603620, !1), h.setUint8(8, 1), h.setUint8(9, r), h.setUint16(10, a, !0), h.setUint32(12, n, !0), h.setInt16(16, o, !0), h.setUint8(18, c), d.set(l, 19), s.info.codecDescription = d, s.info.numberOfChannels = r, s.info.sampleRate = n;\n        }\n        break;\n      case \"dfLa\":\n        {\n          const s = this.currentTrack;\n          f(s && s.info?.type === \"audio\"), this.metadataReader.pos += 4;\n          const r = 127, a = 128, n = this.metadataReader.pos;\n          for (; this.metadataReader.pos < i; ) {\n            const h = this.metadataReader.readU8(), u = this.metadataReader.readU24();\n            if ((h & r) === 0) {\n              this.metadataReader.pos += 10;\n              const p = this.metadataReader.readU32(), g = p >>> 12, w = (p >> 9 & 7) + 1;\n              s.info.sampleRate = g, s.info.numberOfChannels = w, this.metadataReader.pos += 20;\n            } else\n              this.metadataReader.pos += u;\n            if (h & a)\n              break;\n          }\n          const o = this.metadataReader.pos;\n          this.metadataReader.pos = n;\n          const c = this.metadataReader.readBytes(o - n), l = new Uint8Array(4 + c.byteLength);\n          new DataView(l.buffer).setUint32(0, 1716281667, !1), l.set(c, 4), s.info.codecDescription = l;\n        }\n        break;\n      case \"stts\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32();\n          let a = 0, n = 0;\n          for (let o = 0; o < r; o++) {\n            const c = this.metadataReader.readU32(), l = this.metadataReader.readU32();\n            s.sampleTable.sampleTimingEntries.push({\n              startIndex: a,\n              startDecodeTimestamp: n,\n              count: c,\n              delta: l\n            }), a += c, n += c * l;\n          }\n        }\n        break;\n      case \"ctts\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32();\n          let a = 0;\n          for (let n = 0; n < r; n++) {\n            const o = this.metadataReader.readU32(), c = this.metadataReader.readI32();\n            s.sampleTable.sampleCompositionTimeOffsets.push({\n              startIndex: a,\n              count: o,\n              offset: c\n            }), a += o;\n          }\n        }\n        break;\n      case \"stsz\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32(), a = this.metadataReader.readU32();\n          if (r === 0)\n            for (let n = 0; n < a; n++) {\n              const o = this.metadataReader.readU32();\n              s.sampleTable.sampleSizes.push(o);\n            }\n          else\n            s.sampleTable.sampleSizes.push(r);\n        }\n        break;\n      case \"stz2\":\n        throw new Error(\"Unsupported.\");\n      case \"stss\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4, s.sampleTable.keySampleIndices = [];\n          const r = this.metadataReader.readU32();\n          for (let a = 0; a < r; a++) {\n            const n = this.metadataReader.readU32() - 1;\n            s.sampleTable.keySampleIndices.push(n);\n          }\n        }\n        break;\n      case \"stsc\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32();\n          for (let n = 0; n < r; n++) {\n            const o = this.metadataReader.readU32() - 1, c = this.metadataReader.readU32(), l = this.metadataReader.readU32();\n            s.sampleTable.sampleToChunk.push({\n              startSampleIndex: -1,\n              startChunkIndex: o,\n              samplesPerChunk: c,\n              sampleDescriptionIndex: l\n            });\n          }\n          let a = 0;\n          for (let n = 0; n < s.sampleTable.sampleToChunk.length; n++)\n            if (s.sampleTable.sampleToChunk[n].startSampleIndex = a, n < s.sampleTable.sampleToChunk.length - 1) {\n              const c = s.sampleTable.sampleToChunk[n + 1].startChunkIndex - s.sampleTable.sampleToChunk[n].startChunkIndex;\n              a += c * s.sampleTable.sampleToChunk[n].samplesPerChunk;\n            }\n        }\n        break;\n      case \"stco\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32();\n          for (let a = 0; a < r; a++) {\n            const n = this.metadataReader.readU32();\n            s.sampleTable.chunkOffsets.push(n);\n          }\n        }\n        break;\n      case \"co64\":\n        {\n          const s = this.currentTrack;\n          if (f(s), !s.sampleTable)\n            break;\n          this.metadataReader.pos += 4;\n          const r = this.metadataReader.readU32();\n          for (let a = 0; a < r; a++) {\n            const n = this.metadataReader.readU64();\n            s.sampleTable.chunkOffsets.push(n);\n          }\n        }\n        break;\n      case \"mvex\":\n        this.isFragmented = !0, this.readContiguousBoxes(e.contentSize);\n        break;\n      case \"mehd\":\n        {\n          const s = this.metadataReader.readU8();\n          this.metadataReader.pos += 3;\n          const r = s === 1 ? this.metadataReader.readU64() : this.metadataReader.readU32();\n          this.movieDurationInTimescale = r;\n        }\n        break;\n      case \"trex\":\n        {\n          this.metadataReader.pos += 4;\n          const s = this.metadataReader.readU32(), r = this.metadataReader.readU32(), a = this.metadataReader.readU32(), n = this.metadataReader.readU32(), o = this.metadataReader.readU32();\n          this.fragmentTrackDefaults.push({\n            trackId: s,\n            defaultSampleDescriptionIndex: r,\n            defaultSampleDuration: a,\n            defaultSampleSize: n,\n            defaultSampleFlags: o\n          });\n        }\n        break;\n      case \"tfra\":\n        {\n          const s = this.metadataReader.readU8();\n          this.metadataReader.pos += 3;\n          const r = this.metadataReader.readU32(), a = this.tracks.find((w) => w.id === r);\n          if (!a)\n            break;\n          a.fragmentLookupTable = [];\n          const n = this.metadataReader.readU32(), o = (n & 48) >> 4, c = (n & 12) >> 2, l = n & 3, d = this.metadataReader, h = [d.readU8.bind(d), d.readU16.bind(d), d.readU24.bind(d), d.readU32.bind(d)], u = h[o], m = h[c], p = h[l], g = this.metadataReader.readU32();\n          for (let w = 0; w < g; w++) {\n            const b = s === 1 ? this.metadataReader.readU64() : this.metadataReader.readU32(), x = s === 1 ? this.metadataReader.readU64() : this.metadataReader.readU32();\n            u(), m(), p(), a.fragmentLookupTable.push({\n              timestamp: b,\n              moofOffset: x\n            });\n          }\n        }\n        break;\n      case \"moof\":\n        {\n          this.currentFragment = {\n            moofOffset: t,\n            moofSize: e.totalSize,\n            implicitBaseDataOffset: t,\n            trackData: /* @__PURE__ */ new Map(),\n            dataStart: 1 / 0,\n            dataEnd: 0,\n            nextFragment: null,\n            isKnownToBeFirstFragment: !1\n          }, this.readContiguousBoxes(e.contentSize);\n          const s = N(\n            this.fragments,\n            this.currentFragment.moofOffset,\n            (r) => r.moofOffset\n          );\n          this.fragments.splice(s + 1, 0, this.currentFragment);\n          for (const [, r] of this.currentFragment.trackData) {\n            const a = r.samples[0], n = H(r.samples);\n            this.currentFragment.dataStart = Math.min(\n              this.currentFragment.dataStart,\n              a.byteOffset\n            ), this.currentFragment.dataEnd = Math.max(\n              this.currentFragment.dataEnd,\n              n.byteOffset + n.byteSize\n            );\n          }\n          this.currentFragment = null;\n        }\n        break;\n      case \"traf\":\n        if (f(this.currentFragment), this.readContiguousBoxes(e.contentSize), this.currentTrack) {\n          const s = this.currentFragment.trackData.get(this.currentTrack.id);\n          if (s) {\n            const r = N(\n              this.currentTrack.fragments,\n              this.currentFragment.moofOffset,\n              (n) => n.moofOffset\n            );\n            this.currentTrack.fragments.splice(r + 1, 0, this.currentFragment);\n            const { currentFragmentState: a } = this.currentTrack;\n            f(a), a.startTimestamp !== null && (vs(s, a.startTimestamp), s.startTimestampIsFinal = !0);\n          }\n          this.currentTrack.currentFragmentState = null, this.currentTrack = null;\n        }\n        break;\n      case \"tfhd\":\n        {\n          f(this.currentFragment), this.metadataReader.pos += 1;\n          const s = this.metadataReader.readU24(), r = !!(s & 1), a = !!(s & 2), n = !!(s & 8), o = !!(s & 16), c = !!(s & 32), l = !!(s & 65536), d = !!(s & 131072), h = this.metadataReader.readU32(), u = this.tracks.find((p) => p.id === h);\n          if (!u)\n            break;\n          const m = this.fragmentTrackDefaults.find((p) => p.trackId === h);\n          this.currentTrack = u, u.currentFragmentState = {\n            baseDataOffset: this.currentFragment.implicitBaseDataOffset,\n            sampleDescriptionIndex: m?.defaultSampleDescriptionIndex ?? null,\n            defaultSampleDuration: m?.defaultSampleDuration ?? null,\n            defaultSampleSize: m?.defaultSampleSize ?? null,\n            defaultSampleFlags: m?.defaultSampleFlags ?? null,\n            startTimestamp: null\n          }, r ? u.currentFragmentState.baseDataOffset = this.metadataReader.readU64() : d && (u.currentFragmentState.baseDataOffset = this.currentFragment.moofOffset), a && (u.currentFragmentState.sampleDescriptionIndex = this.metadataReader.readU32()), n && (u.currentFragmentState.defaultSampleDuration = this.metadataReader.readU32()), o && (u.currentFragmentState.defaultSampleSize = this.metadataReader.readU32()), c && (u.currentFragmentState.defaultSampleFlags = this.metadataReader.readU32()), l && (u.currentFragmentState.defaultSampleDuration = 0);\n        }\n        break;\n      case \"tfdt\":\n        {\n          const s = this.currentTrack;\n          if (!s)\n            break;\n          f(s.currentFragmentState);\n          const r = this.metadataReader.readU8();\n          this.metadataReader.pos += 3;\n          const a = r === 0 ? this.metadataReader.readU32() : this.metadataReader.readU64();\n          s.currentFragmentState.startTimestamp = a;\n        }\n        break;\n      case \"trun\":\n        {\n          const s = this.currentTrack;\n          if (!s)\n            break;\n          if (f(this.currentFragment), f(s.currentFragmentState), this.currentFragment.trackData.has(s.id))\n            throw new Error(\"Can't have two trun boxes for the same track in one fragment.\");\n          const r = this.metadataReader.readU8(), a = this.metadataReader.readU24(), n = !!(a & 1), o = !!(a & 4), c = !!(a & 256), l = !!(a & 512), d = !!(a & 1024), h = !!(a & 2048), u = this.metadataReader.readU32();\n          let m = s.currentFragmentState.baseDataOffset;\n          n && (m += this.metadataReader.readI32());\n          let p = null;\n          o && (p = this.metadataReader.readU32());\n          let g = m;\n          if (u === 0) {\n            this.currentFragment.implicitBaseDataOffset = g;\n            break;\n          }\n          let w = 0;\n          const b = {\n            startTimestamp: 0,\n            endTimestamp: 0,\n            samples: [],\n            presentationTimestamps: [],\n            startTimestampIsFinal: !1\n          };\n          this.currentFragment.trackData.set(s.id, b);\n          for (let k = 0; k < u; k++) {\n            let y;\n            c ? y = this.metadataReader.readU32() : (f(s.currentFragmentState.defaultSampleDuration !== null), y = s.currentFragmentState.defaultSampleDuration);\n            let T;\n            l ? T = this.metadataReader.readU32() : (f(s.currentFragmentState.defaultSampleSize !== null), T = s.currentFragmentState.defaultSampleSize);\n            let P;\n            d ? P = this.metadataReader.readU32() : (f(s.currentFragmentState.defaultSampleFlags !== null), P = s.currentFragmentState.defaultSampleFlags), k === 0 && p !== null && (P = p);\n            let F = 0;\n            h && (r === 0 ? F = this.metadataReader.readU32() : F = this.metadataReader.readI32());\n            const z = !(P & 65536);\n            b.samples.push({\n              presentationTimestamp: w + F,\n              duration: y,\n              byteOffset: g,\n              byteSize: T,\n              isKeyFrame: z\n            }), g += T, w += y;\n          }\n          b.presentationTimestamps = b.samples.map((k, y) => ({ presentationTimestamp: k.presentationTimestamp, sampleIndex: y })).sort((k, y) => k.presentationTimestamp - y.presentationTimestamp);\n          for (let k = 0; k < b.presentationTimestamps.length - 1; k++) {\n            const y = b.presentationTimestamps[k], P = b.presentationTimestamps[k + 1].presentationTimestamp - y.presentationTimestamp;\n            b.samples[y.sampleIndex].duration = P;\n          }\n          const x = b.samples[b.presentationTimestamps[0].sampleIndex], S = b.samples[H(b.presentationTimestamps).sampleIndex];\n          b.startTimestamp = x.presentationTimestamp, b.endTimestamp = S.presentationTimestamp + S.duration, this.currentFragment.implicitBaseDataOffset = g;\n        }\n        break;\n    }\n    this.metadataReader.pos = i;\n  }\n}, Kr = class {\n  constructor(t) {\n    this.internalTrack = t, this.packetToSampleIndex = /* @__PURE__ */ new WeakMap(), this.packetToFragmentLocation = /* @__PURE__ */ new WeakMap();\n  }\n  getId() {\n    return this.internalTrack.id;\n  }\n  getCodec() {\n    throw new Error(\"Not implemented on base class.\");\n  }\n  getLanguageCode() {\n    return this.internalTrack.languageCode;\n  }\n  getTimeResolution() {\n    return this.internalTrack.timescale;\n  }\n  async computeDuration() {\n    const t = await this.getPacket(1 / 0, { metadataOnly: !0 });\n    return (t?.timestamp ?? 0) + (t?.duration ?? 0);\n  }\n  async getFirstTimestamp() {\n    return (await this.getFirstPacket({ metadataOnly: !0 }))?.timestamp ?? 0;\n  }\n  async getFirstPacket(t) {\n    return this.internalTrack.demuxer.isFragmented ? this.performFragmentedLookup(\n      () => {\n        const e = this.internalTrack.demuxer.fragments[0] ?? null;\n        if (e?.isKnownToBeFirstFragment) {\n          let i = e;\n          for (; i; ) {\n            if (i.trackData.get(this.internalTrack.id))\n              return {\n                fragmentIndex: X(\n                  this.internalTrack.fragments,\n                  i.moofOffset,\n                  (r) => r.moofOffset\n                ),\n                sampleIndex: 0,\n                correctSampleFound: !0\n              };\n            i = i.nextFragment;\n          }\n        }\n        return {\n          fragmentIndex: -1,\n          sampleIndex: -1,\n          correctSampleFound: !1\n        };\n      },\n      -1 / 0,\n      // Use -Infinity as a search timestamp to avoid using the lookup entries\n      1 / 0,\n      t\n    ) : this.fetchPacketForSampleIndex(0, t);\n  }\n  mapTimestampIntoTimescale(t) {\n    return Bi(t * this.internalTrack.timescale, 14) + this.internalTrack.editListOffset;\n  }\n  async getPacket(t, e) {\n    const i = this.mapTimestampIntoTimescale(t);\n    if (this.internalTrack.demuxer.isFragmented)\n      return this.performFragmentedLookup(\n        () => this.findSampleInFragmentsForTimestamp(i),\n        i,\n        i,\n        e\n      );\n    {\n      const s = this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack), r = Ss(s, i);\n      return this.fetchPacketForSampleIndex(r, e);\n    }\n  }\n  async getNextPacket(t, e) {\n    if (this.internalTrack.demuxer.isFragmented) {\n      const s = this.packetToFragmentLocation.get(t);\n      if (s === void 0)\n        throw new Error(\"Packet was not created from this track.\");\n      const r = s.fragment.trackData.get(this.internalTrack.id), a = r.samples[s.sampleIndex], n = X(\n        this.internalTrack.fragments,\n        s.fragment.moofOffset,\n        (o) => o.moofOffset\n      );\n      return f(n !== -1), this.performFragmentedLookup(\n        () => {\n          if (s.sampleIndex + 1 < r.samples.length)\n            return {\n              fragmentIndex: n,\n              sampleIndex: s.sampleIndex + 1,\n              correctSampleFound: !0\n            };\n          {\n            let o = s.fragment;\n            for (; o.nextFragment; )\n              if (o = o.nextFragment, o.trackData.get(this.internalTrack.id)) {\n                const l = X(\n                  this.internalTrack.fragments,\n                  o.moofOffset,\n                  (d) => d.moofOffset\n                );\n                return f(l !== -1), {\n                  fragmentIndex: l,\n                  sampleIndex: 0,\n                  correctSampleFound: !0\n                };\n              }\n            return {\n              fragmentIndex: n,\n              sampleIndex: -1,\n              correctSampleFound: !1\n            };\n          }\n        },\n        a.presentationTimestamp,\n        1 / 0,\n        e\n      );\n    }\n    const i = this.packetToSampleIndex.get(t);\n    if (i === void 0)\n      throw new Error(\"Packet was not created from this track.\");\n    return this.fetchPacketForSampleIndex(i + 1, e);\n  }\n  async getKeyPacket(t, e) {\n    const i = this.mapTimestampIntoTimescale(t);\n    if (this.internalTrack.demuxer.isFragmented)\n      return this.performFragmentedLookup(\n        () => this.findKeySampleInFragmentsForTimestamp(i),\n        i,\n        i,\n        e\n      );\n    const s = this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack), r = Ss(s, i), a = r === -1 ? -1 : kc(s, r);\n    return this.fetchPacketForSampleIndex(a, e);\n  }\n  async getNextKeyPacket(t, e) {\n    if (this.internalTrack.demuxer.isFragmented) {\n      const a = this.packetToFragmentLocation.get(t);\n      if (a === void 0)\n        throw new Error(\"Packet was not created from this track.\");\n      const n = a.fragment.trackData.get(this.internalTrack.id), o = n.samples[a.sampleIndex], c = X(\n        this.internalTrack.fragments,\n        a.fragment.moofOffset,\n        (l) => l.moofOffset\n      );\n      return f(c !== -1), this.performFragmentedLookup(\n        () => {\n          const l = n.samples.findIndex(\n            (d, h) => d.isKeyFrame && h > a.sampleIndex\n          );\n          if (l !== -1)\n            return {\n              fragmentIndex: c,\n              sampleIndex: l,\n              correctSampleFound: !0\n            };\n          {\n            let d = a.fragment;\n            for (; d.nextFragment; ) {\n              d = d.nextFragment;\n              const h = d.trackData.get(this.internalTrack.id);\n              if (h) {\n                const u = X(\n                  this.internalTrack.fragments,\n                  d.moofOffset,\n                  (p) => p.moofOffset\n                );\n                f(u !== -1);\n                const m = h.samples.findIndex((p) => p.isKeyFrame);\n                if (m === -1)\n                  throw new Error(\"Not supported: Fragment does not contain key sample.\");\n                return {\n                  fragmentIndex: u,\n                  sampleIndex: m,\n                  correctSampleFound: !0\n                };\n              }\n            }\n            return {\n              fragmentIndex: c,\n              sampleIndex: -1,\n              correctSampleFound: !1\n            };\n          }\n        },\n        o.presentationTimestamp,\n        1 / 0,\n        e\n      );\n    }\n    const i = this.packetToSampleIndex.get(t);\n    if (i === void 0)\n      throw new Error(\"Packet was not created from this track.\");\n    const s = this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack), r = Sc(s, i);\n    return this.fetchPacketForSampleIndex(r, e);\n  }\n  async fetchPacketForSampleIndex(t, e) {\n    if (t === -1)\n      return null;\n    const i = this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack), s = bc(i, t);\n    if (!s)\n      return null;\n    let r;\n    e.metadataOnly ? r = me : (await this.internalTrack.demuxer.chunkReader.reader.loadRange(\n      s.chunkOffset,\n      s.chunkOffset + s.chunkSize\n    ), this.internalTrack.demuxer.chunkReader.pos = s.sampleOffset, r = this.internalTrack.demuxer.chunkReader.readBytes(s.sampleSize));\n    const a = (s.presentationTimestamp - this.internalTrack.editListOffset) / this.internalTrack.timescale, n = s.duration / this.internalTrack.timescale, o = new G(\n      r,\n      s.isKeyFrame ? \"key\" : \"delta\",\n      a,\n      n,\n      t,\n      s.sampleSize\n    );\n    return this.packetToSampleIndex.set(o, t), o;\n  }\n  async fetchPacketInFragment(t, e, i) {\n    if (e === -1)\n      return null;\n    const r = t.trackData.get(this.internalTrack.id).samples[e];\n    f(r);\n    let a;\n    i.metadataOnly ? a = me : (await this.internalTrack.demuxer.chunkReader.reader.loadRange(t.dataStart, t.dataEnd), this.internalTrack.demuxer.chunkReader.pos = r.byteOffset, a = this.internalTrack.demuxer.chunkReader.readBytes(r.byteSize));\n    const n = (r.presentationTimestamp - this.internalTrack.editListOffset) / this.internalTrack.timescale, o = r.duration / this.internalTrack.timescale, c = new G(\n      a,\n      r.isKeyFrame ? \"key\" : \"delta\",\n      n,\n      o,\n      t.moofOffset + e,\n      r.byteSize\n    );\n    return this.packetToFragmentLocation.set(c, { fragment: t, sampleIndex: e }), c;\n  }\n  findSampleInFragmentsForTimestamp(t) {\n    const e = N(\n      this.internalTrack.fragments,\n      t,\n      (r) => r.trackData.get(this.internalTrack.id).startTimestamp\n    );\n    let i = -1, s = !1;\n    if (e !== -1) {\n      const a = this.internalTrack.fragments[e].trackData.get(this.internalTrack.id), n = N(\n        a.presentationTimestamps,\n        t,\n        (o) => o.presentationTimestamp\n      );\n      f(n !== -1), i = a.presentationTimestamps[n].sampleIndex, s = t < a.endTimestamp;\n    }\n    return { fragmentIndex: e, sampleIndex: i, correctSampleFound: s };\n  }\n  findKeySampleInFragmentsForTimestamp(t) {\n    const e = N(\n      this.internalTrack.fragments,\n      t,\n      (r) => r.trackData.get(this.internalTrack.id).startTimestamp\n    );\n    let i = -1, s = !1;\n    if (e !== -1) {\n      const a = this.internalTrack.fragments[e].trackData.get(this.internalTrack.id), n = er(a.presentationTimestamps, (c) => a.samples[c.sampleIndex].isKeyFrame && c.presentationTimestamp <= t);\n      if (n === -1)\n        throw new Error(\"Not supported: Fragment does not begin with a key sample.\");\n      i = a.presentationTimestamps[n].sampleIndex, s = t < a.endTimestamp;\n    }\n    return { fragmentIndex: e, sampleIndex: i, correctSampleFound: s };\n  }\n  /** Looks for a packet in the fragments while trying to load as few fragments as possible to retrieve it. */\n  async performFragmentedLookup(t, e, i, s) {\n    const r = this.internalTrack.demuxer, a = await r.fragmentLookupMutex.acquire();\n    try {\n      const { fragmentIndex: n, sampleIndex: o, correctSampleFound: c } = t();\n      if (c) {\n        const S = this.internalTrack.fragments[n];\n        return this.fetchPacketInFragment(S, o, s);\n      }\n      const l = r.metadataReader, d = await l.reader.source.getSize();\n      let h = null, u = n, m = o;\n      const p = this.internalTrack.fragmentLookupTable ? N(\n        this.internalTrack.fragmentLookupTable,\n        e,\n        (S) => S.timestamp\n      ) : -1, g = p !== -1 ? this.internalTrack.fragmentLookupTable[p] : null;\n      let w = !1;\n      if (n === -1)\n        l.pos = g?.moofOffset ?? 0, w = l.pos === 0;\n      else {\n        const S = this.internalTrack.fragments[n];\n        !g || S.moofOffset >= g.moofOffset ? (l.pos = S.moofOffset + S.moofSize, h = S) : l.pos = g.moofOffset;\n      }\n      for (; l.pos < d; ) {\n        if (h) {\n          const y = h.trackData.get(this.internalTrack.id);\n          if (y && y.startTimestamp > i)\n            break;\n          if (h.nextFragment) {\n            l.pos = h.nextFragment.moofOffset + h.nextFragment.moofSize, h = h.nextFragment;\n            continue;\n          }\n        }\n        await l.reader.loadRange(l.pos, l.pos + xt);\n        const S = l.pos, k = l.readBoxHeader();\n        if (k.name === \"moof\") {\n          const y = X(r.fragments, S, (M) => M.moofOffset);\n          let T;\n          y === -1 ? (l.pos = S, T = await r.readFragment()) : T = r.fragments[y], h && (h.nextFragment = T), h = T, w && (T.isKnownToBeFirstFragment = !0, w = !1);\n          const { fragmentIndex: P, sampleIndex: F, correctSampleFound: z } = t();\n          if (z) {\n            const M = this.internalTrack.fragments[P];\n            return this.fetchPacketInFragment(M, F, s);\n          }\n          P !== -1 && (u = P, m = F);\n        }\n        l.pos = S + k.totalSize;\n      }\n      let b = null;\n      const x = u !== -1 ? this.internalTrack.fragments[u] : null;\n      if (x && (b = await this.fetchPacketInFragment(x, m, s)), !b && g && (!x || x.moofOffset < g.moofOffset)) {\n        const k = this.internalTrack.fragmentLookupTable[p - 1]?.timestamp ?? -1 / 0;\n        return this.performFragmentedLookup(t, k, i, s);\n      }\n      return b;\n    } finally {\n      a();\n    }\n  }\n}, wc = class extends Kr {\n  constructor(t) {\n    super(t), this.decoderConfigPromise = null, this.internalTrack = t;\n  }\n  getCodec() {\n    return this.internalTrack.info.codec;\n  }\n  getCodedWidth() {\n    return this.internalTrack.info.width;\n  }\n  getCodedHeight() {\n    return this.internalTrack.info.height;\n  }\n  getRotation() {\n    return this.internalTrack.rotation;\n  }\n  async getColorSpace() {\n    return {\n      primaries: this.internalTrack.info.colorSpace?.primaries,\n      transfer: this.internalTrack.info.colorSpace?.transfer,\n      matrix: this.internalTrack.info.colorSpace?.matrix,\n      fullRange: this.internalTrack.info.colorSpace?.fullRange\n    };\n  }\n  async getDecoderConfig() {\n    return this.internalTrack.info.codec ? this.decoderConfigPromise ??= (async () => {\n      if (this.internalTrack.info.codec === \"vp9\" && !this.internalTrack.info.vp9CodecInfo) {\n        const t = await this.getFirstPacket({});\n        this.internalTrack.info.vp9CodecInfo = t && br(t.data);\n      } else if (this.internalTrack.info.codec === \"av1\" && !this.internalTrack.info.av1CodecInfo) {\n        const t = await this.getFirstPacket({});\n        this.internalTrack.info.av1CodecInfo = t && kr(t.data);\n      }\n      return {\n        codec: or(this.internalTrack.info),\n        codedWidth: this.internalTrack.info.width,\n        codedHeight: this.internalTrack.info.height,\n        description: this.internalTrack.info.codecDescription ?? void 0,\n        colorSpace: this.internalTrack.info.colorSpace ?? void 0\n      };\n    })() : null;\n  }\n}, yc = class extends Kr {\n  constructor(t) {\n    super(t), this.decoderConfig = null, this.internalTrack = t;\n  }\n  getCodec() {\n    return this.internalTrack.info.codec;\n  }\n  getNumberOfChannels() {\n    return this.internalTrack.info.numberOfChannels;\n  }\n  getSampleRate() {\n    return this.internalTrack.info.sampleRate;\n  }\n  async getDecoderConfig() {\n    return this.internalTrack.info.codec ? this.decoderConfig ??= {\n      codec: cr(this.internalTrack.info),\n      numberOfChannels: this.internalTrack.info.numberOfChannels,\n      sampleRate: this.internalTrack.info.sampleRate,\n      description: this.internalTrack.info.codecDescription ?? void 0\n    } : null;\n  }\n}, Ss = (t, e) => {\n  if (t.presentationTimestamps) {\n    const i = N(\n      t.presentationTimestamps,\n      e,\n      (s) => s.presentationTimestamp\n    );\n    return i === -1 ? -1 : t.presentationTimestamps[i].sampleIndex;\n  } else {\n    const i = N(\n      t.sampleTimingEntries,\n      e,\n      (r) => r.startDecodeTimestamp\n    );\n    if (i === -1)\n      return -1;\n    const s = t.sampleTimingEntries[i];\n    return s.startIndex + Math.min(Math.floor((e - s.startDecodeTimestamp) / s.delta), s.count - 1);\n  }\n}, bc = (t, e) => {\n  const i = N(t.sampleTimingEntries, e, (b) => b.startIndex), s = t.sampleTimingEntries[i];\n  if (!s || s.startIndex + s.count <= e)\n    return null;\n  let a = s.startDecodeTimestamp + (e - s.startIndex) * s.delta;\n  const n = N(\n    t.sampleCompositionTimeOffsets,\n    e,\n    (b) => b.startIndex\n  ), o = t.sampleCompositionTimeOffsets[n];\n  o && e - o.startIndex < o.count && (a += o.offset);\n  const c = t.sampleSizes[Math.min(e, t.sampleSizes.length - 1)], l = N(t.sampleToChunk, e, (b) => b.startSampleIndex), d = t.sampleToChunk[l];\n  f(d);\n  const h = d.startChunkIndex + Math.floor((e - d.startSampleIndex) / d.samplesPerChunk), u = t.chunkOffsets[h], m = d.startSampleIndex + (h - d.startChunkIndex) * d.samplesPerChunk;\n  let p = 0, g = u;\n  if (t.sampleSizes.length === 1)\n    g += c * (e - m), p += c * d.samplesPerChunk;\n  else\n    for (let b = m; b < m + d.samplesPerChunk; b++) {\n      const x = t.sampleSizes[b];\n      b < e && (g += x), p += x;\n    }\n  let w = s.delta;\n  if (t.presentationTimestamps) {\n    const b = t.presentationTimestampIndexMap[e];\n    f(b !== void 0), b < t.presentationTimestamps.length - 1 && (w = t.presentationTimestamps[b + 1].presentationTimestamp - a);\n  }\n  return {\n    presentationTimestamp: a,\n    duration: w,\n    sampleOffset: g,\n    sampleSize: c,\n    chunkOffset: u,\n    chunkSize: p,\n    isKeyFrame: t.keySampleIndices ? X(t.keySampleIndices, e, (b) => b) !== -1 : !0\n  };\n}, kc = (t, e) => {\n  if (!t.keySampleIndices)\n    return e;\n  const i = N(t.keySampleIndices, e, (s) => s);\n  return t.keySampleIndices[i] ?? -1;\n}, Sc = (t, e) => {\n  if (!t.keySampleIndices)\n    return e + 1;\n  const i = N(t.keySampleIndices, e, (s) => s);\n  return t.keySampleIndices[i + 1] ?? -1;\n}, vs = (t, e) => {\n  t.startTimestamp += e, t.endTimestamp += e;\n  for (const i of t.samples)\n    i.presentationTimestamp += e;\n  for (const i of t.presentationTimestamps)\n    i.presentationTimestamp += e;\n}, vc = (t) => {\n  const [e, , , i] = t, s = Math.hypot(e, i), r = e / s, a = i / s;\n  return -Math.atan2(a, r) * (180 / Math.PI);\n}, si = [\n  { id: 290298740, flag: \"seekHeadSeen\" },\n  { id: 357149030, flag: \"infoSeen\" },\n  { id: 374648427, flag: \"tracksSeen\" },\n  { id: 475249515, flag: \"cuesSeen\" }\n], Tc = class extends mt {\n  constructor(t) {\n    super(t), this.readMetadataPromise = null, this.segments = [], this.currentSegment = null, this.currentTrack = null, this.currentCluster = null, this.currentBlock = null, this.currentCueTime = null, this.isWebM = !1, this.metadataReader = new wi(t._mainReader), this.clusterReader = new wi(new gt(t.source, 64 * 2 ** 20));\n  }\n  async computeDuration() {\n    const t = await this.getTracks(), e = await Promise.all(t.map((i) => i.computeDuration()));\n    return Math.max(0, ...e);\n  }\n  async getTracks() {\n    return await this.readMetadata(), this.segments.flatMap((t) => t.tracks.map((e) => e.inputTrack));\n  }\n  async getMimeType() {\n    await this.readMetadata();\n    let e = (this.segments.some((s) => s.tracks.some((r) => r.info?.type === \"video\")) ? \"video/\" : this.segments.some((s) => s.tracks.some((r) => r.info?.type === \"audio\")) ? \"audio/\" : \"application/\") + (this.isWebM ? \"webm\" : \"x-matroska\");\n    const i = await this.getTracks();\n    if (i.length > 0) {\n      const s = await Promise.all(i.map((a) => a.getCodecParameterString())), r = [...new Set(s.filter(Boolean))];\n      e += `; codecs=\"${r.join(\", \")}\"`;\n    }\n    return e;\n  }\n  readMetadata() {\n    return this.readMetadataPromise ??= (async () => {\n      this.metadataReader.pos = 0;\n      const t = await this.input.source.getSize();\n      for (; this.metadataReader.pos < t - Ar; ) {\n        await this.metadataReader.reader.loadRange(\n          this.metadataReader.pos,\n          this.metadataReader.pos + je\n        );\n        const { id: e, size: i } = this.metadataReader.readElementHeader(), s = this.metadataReader.pos;\n        if (e === 440786851)\n          We(i), await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + i), this.readContiguousElements(this.metadataReader, i);\n        else if (e === 408125543 && (await this.readSegment(i), i === null))\n          break;\n        We(i), this.metadataReader.pos = s + i;\n      }\n    })();\n  }\n  async readSegment(t) {\n    const e = this.metadataReader.pos;\n    this.currentSegment = {\n      seekHeadSeen: !1,\n      infoSeen: !1,\n      tracksSeen: !1,\n      cuesSeen: !1,\n      timestampScale: -1,\n      timestampFactor: -1,\n      duration: -1,\n      seekEntries: [],\n      tracks: [],\n      cuePoints: [],\n      dataStartPos: e,\n      elementEndPos: t === null ? await this.input.source.getSize() : e + t,\n      clusterSeekStartPos: e,\n      clusters: [],\n      clusterLookupMutex: new ft()\n    }, this.segments.push(this.currentSegment), await this.metadataReader.reader.loadRange(\n      this.metadataReader.pos,\n      this.metadataReader.pos + 2 ** 14\n    );\n    let i = !1;\n    for (; this.metadataReader.pos < this.currentSegment.elementEndPos; ) {\n      await this.metadataReader.reader.loadRange(\n        this.metadataReader.pos,\n        this.metadataReader.pos + je\n      );\n      const o = this.metadataReader.pos, { id: c, size: l } = this.metadataReader.readElementHeader(), d = this.metadataReader.pos, h = si.findIndex((u) => u.id === c);\n      if (h !== -1) {\n        const u = si[h].flag;\n        this.currentSegment[u] = !0, We(l), await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + l), this.readContiguousElements(this.metadataReader, l);\n      } else c === 524531317 && (i || (i = !0, this.currentSegment.clusterSeekStartPos = o));\n      if (this.currentSegment.infoSeen && this.currentSegment.tracksSeen && this.currentSegment.cuesSeen)\n        break;\n      if (this.currentSegment.seekHeadSeen) {\n        let u = this.currentSegment.infoSeen, m = this.currentSegment.tracksSeen, p = this.currentSegment.cuesSeen;\n        for (const g of this.currentSegment.seekEntries)\n          g.id === 357149030 ? u = !0 : g.id === 374648427 ? m = !0 : g.id === 475249515 && (p = !0);\n        if (u && m && p)\n          break;\n      }\n      if (l === null)\n        break;\n      this.metadataReader.pos = d + l, i || (this.currentSegment.clusterSeekStartPos = this.metadataReader.pos);\n    }\n    for (const o of si) {\n      if (this.currentSegment[o.flag]) continue;\n      const c = this.currentSegment.seekEntries.find((h) => h.id === o.id);\n      if (!c) continue;\n      this.metadataReader.pos = e + c.segmentPosition, await this.metadataReader.reader.loadRange(\n        this.metadataReader.pos,\n        this.metadataReader.pos + 2 ** 12\n        // Load a larger range, assuming the correct element will be there\n      );\n      const { id: l, size: d } = this.metadataReader.readElementHeader();\n      l === o.id && (We(d), this.currentSegment[o.flag] = !0, await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + d), this.readContiguousElements(this.metadataReader, d));\n    }\n    this.currentSegment.tracks.sort((o, c) => Number(c.isDefault) - Number(o.isDefault)), this.currentSegment.cuePoints.sort((o, c) => o.clusterPosition - c.clusterPosition);\n    const s = this.currentSegment.tracks.map((o) => o.id), r = /* @__PURE__ */ new Set();\n    let a = null, n = null;\n    for (const o of this.currentSegment.cuePoints) {\n      if (o.clusterPosition !== a) {\n        for (const l of r)\n          f(n), this.currentSegment.tracks.find((h) => h.id === l).cuePoints.push(n);\n        for (const l of s)\n          r.add(l);\n      }\n      if (n = o, !r.has(o.trackId))\n        continue;\n      this.currentSegment.tracks.find((l) => l.id === o.trackId).cuePoints.push(o), r.delete(o.trackId), a = o.clusterPosition;\n    }\n    for (const o of r)\n      f(n), this.currentSegment.tracks.find((l) => l.id === o).cuePoints.push(n);\n    for (const o of this.currentSegment.tracks)\n      o.cuePoints.sort((c, l) => c.time - l.time);\n    this.currentSegment = null;\n  }\n  async readCluster(t) {\n    await this.metadataReader.reader.loadRange(this.metadataReader.pos, this.metadataReader.pos + je);\n    const e = this.metadataReader.pos, i = this.metadataReader.readElementHeader(), s = i.id;\n    let r = i.size;\n    const a = this.metadataReader.pos;\n    r === null && (this.clusterReader.pos = a, r = (await this.clusterReader.searchForNextElementId(\n      Or,\n      t.elementEndPos\n    ) ?? t.elementEndPos) - a), f(\n      s === 524531317\n      /* Cluster */\n    ), this.clusterReader.pos = a, await this.clusterReader.reader.loadRange(this.clusterReader.pos, this.clusterReader.pos + r);\n    const n = {\n      elementStartPos: e,\n      elementEndPos: a + r,\n      dataStartPos: a,\n      timestamp: -1,\n      trackData: /* @__PURE__ */ new Map(),\n      nextCluster: null,\n      isKnownToBeFirstCluster: !1\n    };\n    this.currentCluster = n, this.readContiguousElements(this.clusterReader, r);\n    for (const [c, l] of n.trackData) {\n      let d = !1;\n      f(l.blocks.length > 0);\n      for (let g = 0; g < l.blocks.length; g++) {\n        const w = l.blocks[g];\n        w.timestamp += n.timestamp, d ||= w.referencedTimestamps.length > 0;\n      }\n      d && (l.blocks = _c(l.blocks)), l.presentationTimestamps = l.blocks.map((g, w) => ({ timestamp: g.timestamp, blockIndex: w })).sort((g, w) => g.timestamp - w.timestamp);\n      let h = !1;\n      for (let g = 0; g < l.presentationTimestamps.length; g++) {\n        const w = l.presentationTimestamps[g], b = l.blocks[w.blockIndex];\n        if (b.isKeyFrame && (h = !0, l.firstKeyFrameTimestamp === null && b.isKeyFrame && (l.firstKeyFrameTimestamp = b.timestamp)), g < l.presentationTimestamps.length - 1) {\n          const x = l.presentationTimestamps[g + 1], S = l.blocks[x.blockIndex];\n          b.duration = S.timestamp - b.timestamp;\n        }\n      }\n      const u = l.blocks[l.presentationTimestamps[0].blockIndex], m = l.blocks[H(l.presentationTimestamps).blockIndex];\n      l.startTimestamp = u.timestamp, l.endTimestamp = m.timestamp + m.duration;\n      const p = t.tracks.find((g) => g.id === c);\n      if (p) {\n        const g = N(\n          p.clusters,\n          n.timestamp,\n          (w) => w.timestamp\n        );\n        if (p.clusters.splice(g + 1, 0, n), h) {\n          const w = N(\n            p.clustersWithKeyFrame,\n            n.timestamp,\n            (b) => b.timestamp\n          );\n          p.clustersWithKeyFrame.splice(w + 1, 0, n);\n        }\n      }\n    }\n    const o = N(\n      t.clusters,\n      e,\n      (c) => c.elementStartPos\n    );\n    return t.clusters.splice(o + 1, 0, n), this.currentCluster = null, n;\n  }\n  getTrackDataInCluster(t, e) {\n    let i = t.trackData.get(e);\n    return i || (i = {\n      startTimestamp: 0,\n      endTimestamp: 0,\n      firstKeyFrameTimestamp: null,\n      blocks: [],\n      presentationTimestamps: []\n    }, t.trackData.set(e, i)), i;\n  }\n  readContiguousElements(t, e) {\n    const i = t.pos;\n    for (; t.pos - i < e; )\n      this.traverseElement(t);\n  }\n  traverseElement(t) {\n    const { id: e, size: i } = t.readElementHeader(), s = t.pos;\n    switch (We(i), e) {\n      case 17026:\n        this.isWebM = t.readString(i) === \"webm\";\n        break;\n      case 19899:\n        {\n          if (!this.currentSegment) break;\n          const r = { id: -1, segmentPosition: -1 };\n          this.currentSegment.seekEntries.push(r), this.readContiguousElements(t, i), (r.id === -1 || r.segmentPosition === -1) && this.currentSegment.seekEntries.pop();\n        }\n        break;\n      case 21419:\n        {\n          const r = this.currentSegment?.seekEntries[this.currentSegment.seekEntries.length - 1];\n          if (!r) break;\n          r.id = t.readUnsignedInt(i);\n        }\n        break;\n      case 21420:\n        {\n          const r = this.currentSegment?.seekEntries[this.currentSegment.seekEntries.length - 1];\n          if (!r) break;\n          r.segmentPosition = t.readUnsignedInt(i);\n        }\n        break;\n      case 2807729:\n        {\n          if (!this.currentSegment) break;\n          this.currentSegment.timestampScale = t.readUnsignedInt(i), this.currentSegment.timestampFactor = 1e9 / this.currentSegment.timestampScale;\n        }\n        break;\n      case 17545:\n        {\n          if (!this.currentSegment) break;\n          this.currentSegment.duration = t.readFloat(i);\n        }\n        break;\n      case 174:\n        {\n          if (!this.currentSegment) break;\n          if (this.currentTrack = {\n            id: -1,\n            segment: this.currentSegment,\n            demuxer: this,\n            clusters: [],\n            clustersWithKeyFrame: [],\n            cuePoints: [],\n            isDefault: !1,\n            inputTrack: null,\n            codecId: null,\n            codecPrivate: null,\n            languageCode: fe,\n            info: null\n          }, this.readContiguousElements(t, i), this.currentTrack && this.currentTrack.id !== -1 && this.currentTrack.codecId && this.currentTrack.info) {\n            const r = this.currentTrack.codecId.indexOf(\"/\"), a = r === -1 ? this.currentTrack.codecId : this.currentTrack.codecId.slice(0, r);\n            if (this.currentTrack.info.type === \"video\" && this.currentTrack.info.width !== -1 && this.currentTrack.info.height !== -1) {\n              this.currentTrack.codecId === ae.avc ? (this.currentTrack.info.codec = \"avc\", this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : this.currentTrack.codecId === ae.hevc ? (this.currentTrack.info.codec = \"hevc\", this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : a === ae.vp8 ? this.currentTrack.info.codec = \"vp8\" : a === ae.vp9 ? this.currentTrack.info.codec = \"vp9\" : a === ae.av1 && (this.currentTrack.info.codec = \"av1\");\n              const n = this.currentTrack, o = new pt(new xc(n));\n              this.currentTrack.inputTrack = o, this.currentSegment.tracks.push(this.currentTrack);\n            } else if (this.currentTrack.info.type === \"audio\" && this.currentTrack.info.numberOfChannels !== -1 && this.currentTrack.info.sampleRate !== -1) {\n              a === ae.aac ? (this.currentTrack.info.codec = \"aac\", this.currentTrack.info.aacCodecInfo = {\n                isMpeg2: this.currentTrack.codecId.includes(\"MPEG2\")\n              }, this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : this.currentTrack.codecId === ae.mp3 ? this.currentTrack.info.codec = \"mp3\" : a === ae.opus ? (this.currentTrack.info.codec = \"opus\", this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : a === ae.vorbis ? (this.currentTrack.info.codec = \"vorbis\", this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : a === ae.flac ? (this.currentTrack.info.codec = \"flac\", this.currentTrack.info.codecDescription = this.currentTrack.codecPrivate) : this.currentTrack.codecId === \"A_PCM/INT/LIT\" ? this.currentTrack.info.bitDepth === 8 ? this.currentTrack.info.codec = \"pcm-u8\" : this.currentTrack.info.bitDepth === 16 ? this.currentTrack.info.codec = \"pcm-s16\" : this.currentTrack.info.bitDepth === 24 ? this.currentTrack.info.codec = \"pcm-s24\" : this.currentTrack.info.bitDepth === 32 && (this.currentTrack.info.codec = \"pcm-s32\") : this.currentTrack.codecId === \"A_PCM/INT/BIG\" ? this.currentTrack.info.bitDepth === 8 ? this.currentTrack.info.codec = \"pcm-u8\" : this.currentTrack.info.bitDepth === 16 ? this.currentTrack.info.codec = \"pcm-s16be\" : this.currentTrack.info.bitDepth === 24 ? this.currentTrack.info.codec = \"pcm-s24be\" : this.currentTrack.info.bitDepth === 32 && (this.currentTrack.info.codec = \"pcm-s32be\") : this.currentTrack.codecId === \"A_PCM/FLOAT/IEEE\" && this.currentTrack.info.bitDepth === 32 && (this.currentTrack.info.codec = \"pcm-f32\");\n              const n = this.currentTrack, o = new xe(new Cc(n));\n              this.currentTrack.inputTrack = o, this.currentSegment.tracks.push(this.currentTrack);\n            }\n          }\n          this.currentTrack = null;\n        }\n        break;\n      case 215:\n        {\n          if (!this.currentTrack) break;\n          this.currentTrack.id = t.readUnsignedInt(i);\n        }\n        break;\n      case 131:\n        {\n          if (!this.currentTrack) break;\n          const r = t.readUnsignedInt(i);\n          r === 1 ? this.currentTrack.info = {\n            type: \"video\",\n            width: -1,\n            height: -1,\n            rotation: 0,\n            codec: null,\n            codecDescription: null,\n            colorSpace: null\n          } : r === 2 && (this.currentTrack.info = {\n            type: \"audio\",\n            numberOfChannels: -1,\n            sampleRate: -1,\n            bitDepth: -1,\n            codec: null,\n            codecDescription: null,\n            aacCodecInfo: null\n          });\n        }\n        break;\n      case 185:\n        {\n          if (!this.currentTrack) break;\n          t.readUnsignedInt(i) || (this.currentSegment.tracks.pop(), this.currentTrack = null);\n        }\n        break;\n      case 136:\n        {\n          if (!this.currentTrack) break;\n          this.currentTrack.isDefault = !!t.readUnsignedInt(i);\n        }\n        break;\n      case 134:\n        {\n          if (!this.currentTrack) break;\n          this.currentTrack.codecId = t.readString(i);\n        }\n        break;\n      case 25506:\n        {\n          if (!this.currentTrack) break;\n          this.currentTrack.codecPrivate = t.readBytes(i);\n        }\n        break;\n      case 2274716:\n        {\n          if (!this.currentTrack) break;\n          this.currentTrack.languageCode = t.readString(i), Oi(this.currentTrack.languageCode) || (this.currentTrack.languageCode = fe);\n        }\n        break;\n      case 224:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          this.readContiguousElements(t, i);\n        }\n        break;\n      case 176:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          this.currentTrack.info.width = t.readUnsignedInt(i);\n        }\n        break;\n      case 186:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          this.currentTrack.info.height = t.readUnsignedInt(i);\n        }\n        break;\n      case 21936:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          this.currentTrack.info.colorSpace = {}, this.readContiguousElements(t, i);\n        }\n        break;\n      case 21937:\n        {\n          if (this.currentTrack?.info?.type !== \"video\" || !this.currentTrack.info.colorSpace) break;\n          const r = t.readUnsignedInt(i), a = Ys[r] ?? null;\n          this.currentTrack.info.colorSpace.matrix = a;\n        }\n        break;\n      case 21945:\n        {\n          if (this.currentTrack?.info?.type !== \"video\" || !this.currentTrack.info.colorSpace) break;\n          this.currentTrack.info.colorSpace.fullRange = t.readUnsignedInt(i) === 2;\n        }\n        break;\n      case 21946:\n        {\n          if (this.currentTrack?.info?.type !== \"video\" || !this.currentTrack.info.colorSpace) break;\n          const r = t.readUnsignedInt(i), a = Gs[r] ?? null;\n          this.currentTrack.info.colorSpace.transfer = a;\n        }\n        break;\n      case 21947:\n        {\n          if (this.currentTrack?.info?.type !== \"video\" || !this.currentTrack.info.colorSpace) break;\n          const r = t.readUnsignedInt(i), a = Ks[r] ?? null;\n          this.currentTrack.info.colorSpace.primaries = a;\n        }\n        break;\n      case 30320:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          this.readContiguousElements(t, i);\n        }\n        break;\n      case 30325:\n        {\n          if (this.currentTrack?.info?.type !== \"video\") break;\n          const a = -t.readFloat(i);\n          try {\n            this.currentTrack.info.rotation = Fi(a);\n          } catch {\n          }\n        }\n        break;\n      case 225:\n        {\n          if (this.currentTrack?.info?.type !== \"audio\") break;\n          this.readContiguousElements(t, i);\n        }\n        break;\n      case 181:\n        {\n          if (this.currentTrack?.info?.type !== \"audio\") break;\n          this.currentTrack.info.sampleRate = t.readFloat(i);\n        }\n        break;\n      case 159:\n        {\n          if (this.currentTrack?.info?.type !== \"audio\") break;\n          this.currentTrack.info.numberOfChannels = t.readUnsignedInt(i);\n        }\n        break;\n      case 25188:\n        {\n          if (this.currentTrack?.info?.type !== \"audio\") break;\n          this.currentTrack.info.bitDepth = t.readUnsignedInt(i);\n        }\n        break;\n      case 187:\n        {\n          if (!this.currentSegment) break;\n          this.readContiguousElements(t, i), this.currentCueTime = null;\n        }\n        break;\n      case 179:\n        this.currentCueTime = t.readUnsignedInt(i);\n        break;\n      case 183:\n        {\n          if (this.currentCueTime === null) break;\n          f(this.currentSegment);\n          const r = { time: this.currentCueTime, trackId: -1, clusterPosition: -1 };\n          this.currentSegment.cuePoints.push(r), this.readContiguousElements(t, i), (r.trackId === -1 || r.clusterPosition === -1) && this.currentSegment.cuePoints.pop();\n        }\n        break;\n      case 247:\n        {\n          const r = this.currentSegment?.cuePoints[this.currentSegment.cuePoints.length - 1];\n          if (!r) break;\n          r.trackId = t.readUnsignedInt(i);\n        }\n        break;\n      case 241:\n        {\n          const r = this.currentSegment?.cuePoints[this.currentSegment.cuePoints.length - 1];\n          if (!r) break;\n          f(this.currentSegment), r.clusterPosition = this.currentSegment.dataStartPos + t.readUnsignedInt(i);\n        }\n        break;\n      case 231:\n        {\n          if (!this.currentCluster) break;\n          this.currentCluster.timestamp = t.readUnsignedInt(i);\n        }\n        break;\n      case 163:\n        {\n          if (!this.currentCluster) break;\n          const r = t.readVarInt(), a = t.readS16(), o = !!(t.readU8() & 128);\n          this.getTrackDataInCluster(this.currentCluster, r).blocks.push({\n            timestamp: a,\n            // We'll add the cluster's timestamp to this later\n            duration: 0,\n            isKeyFrame: o,\n            referencedTimestamps: [],\n            data: t.readBytes(i - (t.pos - s))\n          });\n        }\n        break;\n      case 160:\n        {\n          if (!this.currentCluster) break;\n          if (this.readContiguousElements(t, i), this.currentBlock) {\n            for (let r = 0; r < this.currentBlock.referencedTimestamps.length; r++)\n              this.currentBlock.referencedTimestamps[r] += this.currentBlock.timestamp;\n            this.currentBlock = null;\n          }\n        }\n        break;\n      case 161:\n        {\n          if (!this.currentCluster) break;\n          const r = t.readVarInt(), a = t.readS16();\n          t.readU8();\n          const n = this.getTrackDataInCluster(this.currentCluster, r);\n          this.currentBlock = {\n            timestamp: a,\n            // We'll add the cluster's timestamp to this later\n            duration: 0,\n            isKeyFrame: !0,\n            referencedTimestamps: [],\n            data: t.readBytes(i - (t.pos - s))\n          }, n.blocks.push(this.currentBlock);\n        }\n        break;\n      case 155:\n        {\n          if (!this.currentBlock) break;\n          this.currentBlock.duration = t.readUnsignedInt(i);\n        }\n        break;\n      case 251:\n        {\n          if (!this.currentBlock) break;\n          this.currentBlock.isKeyFrame = !1;\n          const r = t.readSignedInt(i);\n          this.currentBlock.referencedTimestamps.push(r);\n        }\n        break;\n    }\n    t.pos = s + i;\n  }\n}, Gr = class {\n  constructor(t) {\n    this.internalTrack = t, this.packetToClusterLocation = /* @__PURE__ */ new WeakMap();\n  }\n  getId() {\n    return this.internalTrack.id;\n  }\n  getCodec() {\n    throw new Error(\"Not implemented on base class.\");\n  }\n  async computeDuration() {\n    const t = await this.getPacket(1 / 0, { metadataOnly: !0 });\n    return (t?.timestamp ?? 0) + (t?.duration ?? 0);\n  }\n  getLanguageCode() {\n    return this.internalTrack.languageCode;\n  }\n  async getFirstTimestamp() {\n    return (await this.getFirstPacket({ metadataOnly: !0 }))?.timestamp ?? 0;\n  }\n  getTimeResolution() {\n    return this.internalTrack.segment.timestampFactor;\n  }\n  async getFirstPacket(t) {\n    return this.performClusterLookup(\n      () => {\n        const e = this.internalTrack.segment.clusters[0] ?? null;\n        if (e?.isKnownToBeFirstCluster) {\n          let i = e;\n          for (; i; ) {\n            if (i.trackData.get(this.internalTrack.id))\n              return {\n                clusterIndex: X(\n                  this.internalTrack.clusters,\n                  i.elementStartPos,\n                  (r) => r.elementStartPos\n                ),\n                blockIndex: 0,\n                correctBlockFound: !0\n              };\n            i = i.nextCluster;\n          }\n        }\n        return {\n          clusterIndex: -1,\n          blockIndex: -1,\n          correctBlockFound: !1\n        };\n      },\n      -1 / 0,\n      // Use -Infinity as a search timestamp to avoid using the cues\n      1 / 0,\n      t\n    );\n  }\n  intoTimescale(t) {\n    return Bi(t * this.internalTrack.segment.timestampFactor, 14);\n  }\n  async getPacket(t, e) {\n    const i = this.intoTimescale(t);\n    return this.performClusterLookup(\n      () => this.findBlockInClustersForTimestamp(i),\n      i,\n      i,\n      e\n    );\n  }\n  async getNextPacket(t, e) {\n    const i = this.packetToClusterLocation.get(t);\n    if (i === void 0)\n      throw new Error(\"Packet was not created from this track.\");\n    const s = i.cluster.trackData.get(this.internalTrack.id), r = s.blocks[i.blockIndex], a = X(\n      this.internalTrack.clusters,\n      i.cluster.elementStartPos,\n      (n) => n.elementStartPos\n    );\n    return f(a !== -1), this.performClusterLookup(\n      () => {\n        if (i.blockIndex + 1 < s.blocks.length)\n          return {\n            clusterIndex: a,\n            blockIndex: i.blockIndex + 1,\n            correctBlockFound: !0\n          };\n        {\n          let n = i.cluster;\n          for (; n.nextCluster; )\n            if (n = n.nextCluster, n.trackData.get(this.internalTrack.id)) {\n              const c = X(\n                this.internalTrack.clusters,\n                n.elementStartPos,\n                (l) => l.elementStartPos\n              );\n              return f(c !== -1), {\n                clusterIndex: c,\n                blockIndex: 0,\n                correctBlockFound: !0\n              };\n            }\n          return {\n            clusterIndex: a,\n            blockIndex: -1,\n            correctBlockFound: !1\n          };\n        }\n      },\n      r.timestamp,\n      1 / 0,\n      e\n    );\n  }\n  async getKeyPacket(t, e) {\n    const i = this.intoTimescale(t);\n    return this.performClusterLookup(\n      () => this.findKeyBlockInClustersForTimestamp(i),\n      i,\n      i,\n      e\n    );\n  }\n  async getNextKeyPacket(t, e) {\n    const i = this.packetToClusterLocation.get(t);\n    if (i === void 0)\n      throw new Error(\"Packet was not created from this track.\");\n    const s = i.cluster.trackData.get(this.internalTrack.id), r = s.blocks[i.blockIndex], a = X(\n      this.internalTrack.clusters,\n      i.cluster.elementStartPos,\n      (n) => n.elementStartPos\n    );\n    return f(a !== -1), this.performClusterLookup(\n      () => {\n        const n = s.blocks.findIndex(\n          (o, c) => o.isKeyFrame && c > i.blockIndex\n        );\n        if (n !== -1)\n          return {\n            clusterIndex: a,\n            blockIndex: n,\n            correctBlockFound: !0\n          };\n        {\n          let o = i.cluster;\n          for (; o.nextCluster; ) {\n            o = o.nextCluster;\n            const c = o.trackData.get(this.internalTrack.id);\n            if (c && c.firstKeyFrameTimestamp !== null) {\n              const l = X(\n                this.internalTrack.clusters,\n                o.elementStartPos,\n                (h) => h.elementStartPos\n              );\n              f(l !== -1);\n              const d = c.blocks.findIndex((h) => h.isKeyFrame);\n              return f(d !== -1), {\n                clusterIndex: l,\n                blockIndex: d,\n                correctBlockFound: !0\n              };\n            }\n          }\n          return {\n            clusterIndex: a,\n            blockIndex: -1,\n            correctBlockFound: !1\n          };\n        }\n      },\n      r.timestamp,\n      1 / 0,\n      e\n    );\n  }\n  async fetchPacketInCluster(t, e, i) {\n    if (e === -1)\n      return null;\n    const r = t.trackData.get(this.internalTrack.id).blocks[e];\n    f(r);\n    const a = i.metadataOnly ? me : r.data, n = r.timestamp / this.internalTrack.segment.timestampFactor, o = r.duration / this.internalTrack.segment.timestampFactor, c = new G(\n      a,\n      r.isKeyFrame ? \"key\" : \"delta\",\n      n,\n      o,\n      t.dataStartPos + e,\n      r.data.byteLength\n    );\n    return this.packetToClusterLocation.set(c, { cluster: t, blockIndex: e }), c;\n  }\n  findBlockInClustersForTimestamp(t) {\n    const e = N(\n      this.internalTrack.clusters,\n      t,\n      (r) => r.trackData.get(this.internalTrack.id).startTimestamp\n    );\n    let i = -1, s = !1;\n    if (e !== -1) {\n      const a = this.internalTrack.clusters[e].trackData.get(this.internalTrack.id), n = N(\n        a.presentationTimestamps,\n        t,\n        (o) => o.timestamp\n      );\n      f(n !== -1), i = a.presentationTimestamps[n].blockIndex, s = t < a.endTimestamp;\n    }\n    return { clusterIndex: e, blockIndex: i, correctBlockFound: s };\n  }\n  findKeyBlockInClustersForTimestamp(t) {\n    const e = N(\n      this.internalTrack.clustersWithKeyFrame,\n      t,\n      (a) => a.trackData.get(this.internalTrack.id).firstKeyFrameTimestamp\n    );\n    let i = -1, s = -1, r = !1;\n    if (e !== -1) {\n      const a = this.internalTrack.clustersWithKeyFrame[e];\n      i = X(\n        this.internalTrack.clusters,\n        a.elementStartPos,\n        (l) => l.elementStartPos\n      ), f(i !== -1);\n      const n = a.trackData.get(this.internalTrack.id), o = er(n.presentationTimestamps, (l) => n.blocks[l.blockIndex].isKeyFrame && l.timestamp <= t);\n      f(o !== -1), s = n.presentationTimestamps[o].blockIndex, r = t < n.endTimestamp;\n    }\n    return { clusterIndex: i, blockIndex: s, correctBlockFound: r };\n  }\n  /** Looks for a packet in the clusters while trying to load as few clusters as possible to retrieve it. */\n  async performClusterLookup(t, e, i, s) {\n    const { demuxer: r, segment: a } = this.internalTrack, n = await a.clusterLookupMutex.acquire();\n    try {\n      const { clusterIndex: o, blockIndex: c, correctBlockFound: l } = t();\n      if (l) {\n        const k = this.internalTrack.clusters[o];\n        return this.fetchPacketInCluster(k, c, s);\n      }\n      const d = r.metadataReader, h = r.clusterReader;\n      let u = null, m = o, p = c;\n      const g = N(\n        this.internalTrack.cuePoints,\n        e,\n        (k) => k.time\n      ), w = g !== -1 ? this.internalTrack.cuePoints[g] : null;\n      let b = !1;\n      if (o === -1)\n        d.pos = w?.clusterPosition ?? a.clusterSeekStartPos, b = d.pos === a.clusterSeekStartPos;\n      else {\n        const k = this.internalTrack.clusters[o];\n        !w || k.elementStartPos >= w.clusterPosition ? (d.pos = k.elementEndPos, u = k) : d.pos = w.clusterPosition;\n      }\n      for (; d.pos < a.elementEndPos; ) {\n        if (u) {\n          const z = u.trackData.get(this.internalTrack.id);\n          if (z && z.startTimestamp > i)\n            break;\n          if (u.nextCluster) {\n            d.pos = u.nextCluster.elementEndPos, u = u.nextCluster;\n            continue;\n          }\n        }\n        await d.reader.loadRange(d.pos, d.pos + je);\n        const k = d.pos, y = d.readElementHeader(), T = y.id;\n        let P = y.size;\n        const F = d.pos;\n        if (T === 524531317) {\n          const z = X(a.clusters, k, ($t) => $t.elementStartPos);\n          let M;\n          z === -1 ? (d.pos = k, M = await r.readCluster(a)) : M = a.clusters[z], u && (u.nextCluster = M), u = M, b && (M.isKnownToBeFirstCluster = !0, b = !1);\n          const { clusterIndex: A, blockIndex: j, correctBlockFound: Ie } = t();\n          if (Ie) {\n            const $t = this.internalTrack.clusters[A];\n            return this.fetchPacketInCluster($t, j, s);\n          }\n          A !== -1 && (m = A, p = j);\n        }\n        if (P === null) {\n          T === 524531317 ? (f(u), P = u.elementEndPos - F) : (h.pos = F, P = (await h.searchForNextElementId(\n            Or,\n            a.elementEndPos\n          ) ?? a.elementEndPos) - F);\n          const z = F + P;\n          if (z >= a.elementEndPos - Ar)\n            break;\n          if (h.pos = z, h.readElementId() === 408125543) {\n            a.elementEndPos = z;\n            break;\n          }\n        }\n        d.pos = F + P;\n      }\n      let x = null;\n      const S = m !== -1 ? this.internalTrack.clusters[m] : null;\n      if (S && (x = await this.fetchPacketInCluster(S, p, s)), !x && w && (!S || S.elementStartPos < w.clusterPosition)) {\n        const y = this.internalTrack.cuePoints[g - 1]?.time ?? -1 / 0;\n        return this.performClusterLookup(t, y, i, s);\n      }\n      return x;\n    } finally {\n      n();\n    }\n  }\n}, xc = class extends Gr {\n  constructor(t) {\n    super(t), this.decoderConfigPromise = null, this.internalTrack = t;\n  }\n  getCodec() {\n    return this.internalTrack.info.codec;\n  }\n  getCodedWidth() {\n    return this.internalTrack.info.width;\n  }\n  getCodedHeight() {\n    return this.internalTrack.info.height;\n  }\n  getRotation() {\n    return this.internalTrack.info.rotation;\n  }\n  async getColorSpace() {\n    return {\n      primaries: this.internalTrack.info.colorSpace?.primaries,\n      transfer: this.internalTrack.info.colorSpace?.transfer,\n      matrix: this.internalTrack.info.colorSpace?.matrix,\n      fullRange: this.internalTrack.info.colorSpace?.fullRange\n    };\n  }\n  async getDecoderConfig() {\n    return this.internalTrack.info.codec ? this.decoderConfigPromise ??= (async () => {\n      let t = null;\n      return (this.internalTrack.info.codec === \"vp9\" || this.internalTrack.info.codec === \"av1\" || this.internalTrack.info.codec === \"avc\" && !this.internalTrack.info.codecDescription || this.internalTrack.info.codec === \"hevc\" && !this.internalTrack.info.codecDescription) && (t = await this.getFirstPacket({})), {\n        codec: or({\n          width: this.internalTrack.info.width,\n          height: this.internalTrack.info.height,\n          codec: this.internalTrack.info.codec,\n          codecDescription: this.internalTrack.info.codecDescription,\n          colorSpace: this.internalTrack.info.colorSpace,\n          avcCodecInfo: this.internalTrack.info.codec === \"avc\" && t ? wr(t.data) : null,\n          hevcCodecInfo: this.internalTrack.info.codec === \"hevc\" && t ? yr(t.data) : null,\n          vp9CodecInfo: this.internalTrack.info.codec === \"vp9\" && t ? br(t.data) : null,\n          av1CodecInfo: this.internalTrack.info.codec === \"av1\" && t ? kr(t.data) : null\n        }),\n        codedWidth: this.internalTrack.info.width,\n        codedHeight: this.internalTrack.info.height,\n        description: this.internalTrack.info.codecDescription ?? void 0,\n        colorSpace: this.internalTrack.info.colorSpace ?? void 0\n      };\n    })() : null;\n  }\n}, Cc = class extends Gr {\n  constructor(t) {\n    super(t), this.decoderConfig = null, this.internalTrack = t;\n  }\n  getCodec() {\n    return this.internalTrack.info.codec;\n  }\n  getNumberOfChannels() {\n    return this.internalTrack.info.numberOfChannels;\n  }\n  getSampleRate() {\n    return this.internalTrack.info.sampleRate;\n  }\n  async getDecoderConfig() {\n    return this.internalTrack.info.codec ? this.decoderConfig ??= {\n      codec: cr({\n        codec: this.internalTrack.info.codec,\n        codecDescription: this.internalTrack.info.codecDescription,\n        aacCodecInfo: this.internalTrack.info.aacCodecInfo\n      }),\n      numberOfChannels: this.internalTrack.info.numberOfChannels,\n      sampleRate: this.internalTrack.info.sampleRate,\n      description: this.internalTrack.info.codecDescription ?? void 0\n    } : null;\n  }\n}, _c = (t) => {\n  const e = /* @__PURE__ */ new Map();\n  for (let a = 0; a < t.length; a++) {\n    const n = t[a];\n    e.set(n.timestamp, n);\n  }\n  const i = /* @__PURE__ */ new Set(), s = [], r = (a) => {\n    if (!i.has(a)) {\n      i.add(a);\n      for (let n = 0; n < a.referencedTimestamps.length; n++) {\n        const o = a.referencedTimestamps[n], c = e.get(o);\n        c && r(c);\n      }\n      s.push(a);\n    }\n  };\n  for (let a = 0; a < t.length; a++)\n    r(t[a]);\n  return s;\n}, Yr = class {\n  constructor(t) {\n    this.reader = t, this.pos = 0, this.fileSize = null;\n  }\n  readBytes(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    return this.pos += t, new Uint8Array(e.buffer, i, t);\n  }\n  readU16() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 2);\n    return this.pos += 2, t.getUint16(e, !1);\n  }\n  readU32() {\n    const { view: t, offset: e } = this.reader.getViewAndOffset(this.pos, this.pos + 4);\n    return this.pos += 4, t.getUint32(e, !1);\n  }\n  readAscii(t) {\n    const { view: e, offset: i } = this.reader.getViewAndOffset(this.pos, this.pos + t);\n    this.pos += t;\n    let s = \"\";\n    for (let r = 0; r < t; r++)\n      s += String.fromCharCode(e.getUint8(i + r));\n    return s;\n  }\n  readId3() {\n    return this.readAscii(3) !== \"ID3\" ? (this.pos -= 3, null) : (this.pos += 3, { size: Ic(this.readU32()) });\n  }\n  readNextFrameHeader(t) {\n    for (f(this.fileSize), t ??= this.fileSize; this.pos < t - Oo; ) {\n      const e = this.readU32();\n      this.pos -= 4;\n      const i = Lo(e, this);\n      if (i)\n        return i;\n    }\n    return null;\n  }\n}, Ic = (t) => {\n  let e = 2130706432, i = 0;\n  for (; e !== 0; )\n    i >>= 1, i |= t & e, e >>= 8;\n  return i;\n}, Ec = class extends mt {\n  constructor(t) {\n    super(t), this.metadataPromise = null, this.firstFrameHeader = null, this.allSamples = [], this.tracks = [], this.reader = new Yr(t._mainReader);\n  }\n  async readMetadata() {\n    return this.metadataPromise ??= (async () => {\n      const t = await this.input.source.getSize();\n      this.reader.fileSize = t, await this.reader.reader.loadRange(0, t);\n      const e = this.reader.readId3();\n      e && (this.reader.pos += e.size);\n      let i = 0;\n      for (; ; ) {\n        const s = this.reader.readNextFrameHeader();\n        if (!s)\n          break;\n        const r = Vo(s.mpegVersionId, s.channel);\n        this.reader.pos = s.startPos + r;\n        const a = this.reader.readU32(), n = a === Uo || a === Do;\n        if (this.reader.pos = s.startPos + s.totalSize - 1, n)\n          continue;\n        this.firstFrameHeader || (this.firstFrameHeader = s);\n        const o = s.audioSamplesInFrame / s.sampleRate, c = {\n          timestamp: i / s.sampleRate,\n          duration: o,\n          dataStart: s.startPos,\n          dataSize: s.totalSize\n        };\n        this.allSamples.push(c), i += s.audioSamplesInFrame;\n      }\n      if (!this.firstFrameHeader)\n        throw new Error(\"No MP3 frames found.\");\n      this.tracks = [new xe(new Pc(this))];\n    })();\n  }\n  async getMimeType() {\n    return \"audio/mpeg\";\n  }\n  async getTracks() {\n    return await this.readMetadata(), this.tracks;\n  }\n  async computeDuration() {\n    await this.readMetadata();\n    const t = H(this.allSamples);\n    return f(t), t.timestamp + t.duration;\n  }\n}, Pc = class {\n  constructor(t) {\n    this.demuxer = t;\n  }\n  getId() {\n    return 1;\n  }\n  async getFirstTimestamp() {\n    return 0;\n  }\n  getTimeResolution() {\n    return f(this.demuxer.firstFrameHeader), this.demuxer.firstFrameHeader.sampleRate / this.demuxer.firstFrameHeader.audioSamplesInFrame;\n  }\n  computeDuration() {\n    return this.demuxer.computeDuration();\n  }\n  getLanguageCode() {\n    return fe;\n  }\n  getCodec() {\n    return \"mp3\";\n  }\n  getNumberOfChannels() {\n    return f(this.demuxer.firstFrameHeader), this.demuxer.firstFrameHeader.channel === 3 ? 1 : 2;\n  }\n  getSampleRate() {\n    return f(this.demuxer.firstFrameHeader), this.demuxer.firstFrameHeader.sampleRate;\n  }\n  async getDecoderConfig() {\n    return f(this.demuxer.firstFrameHeader), {\n      codec: \"mp3\",\n      numberOfChannels: this.demuxer.firstFrameHeader.channel === 3 ? 1 : 2,\n      sampleRate: this.demuxer.firstFrameHeader.sampleRate\n    };\n  }\n  getPacketAtIndex(t, e) {\n    if (t === -1)\n      return null;\n    const i = this.demuxer.allSamples[t];\n    if (!i)\n      return null;\n    let s;\n    return e.metadataOnly ? s = me : (this.demuxer.reader.pos = i.dataStart, s = this.demuxer.reader.readBytes(i.dataSize)), new G(\n      s,\n      \"key\",\n      i.timestamp,\n      i.duration,\n      t,\n      i.dataSize\n    );\n  }\n  async getFirstPacket(t) {\n    return this.getPacketAtIndex(0, t);\n  }\n  async getNextPacket(t, e) {\n    const i = X(\n      this.demuxer.allSamples,\n      t.timestamp,\n      (s) => s.timestamp\n    );\n    if (i === -1)\n      throw new Error(\"Packet was not created from this track.\");\n    return this.getPacketAtIndex(i + 1, e);\n  }\n  async getPacket(t, e) {\n    const i = N(\n      this.demuxer.allSamples,\n      t,\n      (s) => s.timestamp\n    );\n    return this.getPacketAtIndex(i, e);\n  }\n  getKeyPacket(t, e) {\n    return this.getPacket(t, e);\n  }\n  getNextKeyPacket(t, e) {\n    return this.getNextPacket(t, e);\n  }\n}, Fc = class extends mt {\n  constructor(t) {\n    super(t), this.readingMutex = new ft(), this.metadataPromise = null, this.fileSize = null, this.bitstreams = [], this.tracks = [], this.reader = new Vr(new gt(t.source, 64 * 2 ** 20));\n  }\n  async readMetadata() {\n    return this.metadataPromise ??= (async () => {\n      for (this.fileSize = await this.input.source.getSize(); this.reader.pos < this.fileSize - ct; ) {\n        await this.reader.reader.loadRange(\n          this.reader.pos,\n          this.reader.pos + qe\n        );\n        const t = this.reader.readPageHeader();\n        if (!t || !!!(t.headerType & 2))\n          break;\n        this.bitstreams.push({\n          serialNumber: t.serialNumber,\n          bosPage: t,\n          description: null,\n          numberOfChannels: -1,\n          sampleRate: -1,\n          codecInfo: {\n            codec: null,\n            vorbisInfo: null,\n            opusInfo: null\n          },\n          lastMetadataPacket: null\n        }), this.reader.pos = t.headerStartPos + t.totalSize;\n      }\n      for (const t of this.bitstreams) {\n        const e = await this.readPacket(this.reader, t.bosPage, 0);\n        e && (// Check for Vorbis\n        e.data.byteLength >= 7 && e.data[0] === 1 && e.data[1] === 118 && e.data[2] === 111 && e.data[3] === 114 && e.data[4] === 98 && e.data[5] === 105 && e.data[6] === 115 ? await this.readVorbisMetadata(e, t) : (\n          // Check for Opus\n          e.data.byteLength >= 8 && e.data[0] === 79 && e.data[1] === 112 && e.data[2] === 117 && e.data[3] === 115 && e.data[4] === 72 && e.data[5] === 101 && e.data[6] === 97 && e.data[7] === 100 && await this.readOpusMetadata(e, t)\n        ), t.codecInfo.codec !== null && this.tracks.push(new xe(new Rc(t, this))));\n      }\n    })();\n  }\n  async readVorbisMetadata(t, e) {\n    let i = await this.findNextPacketStart(this.reader, t);\n    if (!i)\n      return;\n    const s = await this.readPacket(\n      this.reader,\n      i.startPage,\n      i.startSegmentIndex\n    );\n    if (!s || (i = await this.findNextPacketStart(this.reader, s), !i))\n      return;\n    const r = await this.readPacket(\n      this.reader,\n      i.startPage,\n      i.startSegmentIndex\n    );\n    if (!r || s.data[0] !== 3 || r.data[0] !== 5)\n      return;\n    const a = [], n = (d) => {\n      for (; a.push(Math.min(255, d)), !(d < 255); )\n        d -= 255;\n    };\n    n(t.data.length), n(s.data.length);\n    const o = new Uint8Array(\n      1 + a.length + t.data.length + s.data.length + r.data.length\n    );\n    o[0] = a.length, o.set(\n      a,\n      1\n    ), o.set(\n      t.data,\n      1 + a.length\n    ), o.set(\n      s.data,\n      1 + a.length + t.data.length\n    ), o.set(\n      r.data,\n      1 + a.length + t.data.length + s.data.length\n    ), e.codecInfo.codec = \"vorbis\", e.description = o, e.lastMetadataPacket = r;\n    const c = Re(t.data);\n    e.numberOfChannels = c.getUint8(11), e.sampleRate = c.getUint32(12, !0);\n    const l = c.getUint8(28);\n    e.codecInfo.vorbisInfo = {\n      blocksizes: [\n        1 << (l & 15),\n        1 << (l >> 4)\n      ],\n      modeBlockflags: Sr(r.data).modeBlockflags\n    };\n  }\n  async readOpusMetadata(t, e) {\n    const i = await this.findNextPacketStart(this.reader, t);\n    if (!i)\n      return;\n    const s = await this.readPacket(\n      this.reader,\n      i.startPage,\n      i.startSegmentIndex\n    );\n    if (!s)\n      return;\n    e.codecInfo.codec = \"opus\", e.description = t.data, e.lastMetadataPacket = s;\n    const r = Vt(t.data);\n    e.numberOfChannels = r.outputChannelCount, e.sampleRate = r.inputSampleRate, e.codecInfo.opusInfo = {\n      preSkip: r.preSkip\n    };\n  }\n  async readPacket(t, e, i) {\n    f(i < e.lacingValues.length), f(this.fileSize);\n    let s = 0;\n    for (let h = 0; h < i; h++)\n      s += e.lacingValues[h];\n    let r = e, a = s, n = i;\n    const o = [];\n    e:\n      for (; ; ) {\n        await t.reader.loadRange(\n          r.dataStartPos,\n          r.dataStartPos + r.dataSize\n        ), t.pos = r.dataStartPos;\n        const h = t.readBytes(r.dataSize);\n        for (; ; ) {\n          if (n === r.lacingValues.length) {\n            o.push(h.subarray(s, a));\n            break;\n          }\n          const u = r.lacingValues[n];\n          if (a += u, u < 255) {\n            o.push(h.subarray(s, a));\n            break e;\n          }\n          n++;\n        }\n        for (; ; ) {\n          if (t.pos = r.headerStartPos + r.totalSize, t.pos >= this.fileSize - ct)\n            return null;\n          await t.reader.loadRange(t.pos, t.pos + qe);\n          const u = t.readPageHeader();\n          if (!u)\n            return null;\n          if (r = u, r.serialNumber === e.serialNumber)\n            break;\n        }\n        s = 0, a = 0, n = 0;\n      }\n    const c = o.reduce((h, u) => h + u.length, 0), l = new Uint8Array(c);\n    let d = 0;\n    for (let h = 0; h < o.length; h++) {\n      const u = o[h];\n      l.set(u, d), d += u.length;\n    }\n    return {\n      data: l,\n      endPage: r,\n      endSegmentIndex: n\n    };\n  }\n  async findNextPacketStart(t, e) {\n    if (f(this.fileSize !== null), e.endSegmentIndex < e.endPage.lacingValues.length - 1)\n      return { startPage: e.endPage, startSegmentIndex: e.endSegmentIndex + 1 };\n    if (!!(e.endPage.headerType & 4))\n      return null;\n    for (t.pos = e.endPage.headerStartPos + e.endPage.totalSize; ; ) {\n      if (t.pos >= this.fileSize - ct)\n        return null;\n      await t.reader.loadRange(t.pos, t.pos + qe);\n      const s = t.readPageHeader();\n      if (!s)\n        return null;\n      if (s.serialNumber === e.endPage.serialNumber)\n        return { startPage: s, startSegmentIndex: 0 };\n      t.pos = s.headerStartPos + s.totalSize;\n    }\n  }\n  async getMimeType() {\n    await this.readMetadata();\n    let t = \"audio/ogg\";\n    if (this.tracks.length > 0) {\n      const e = await Promise.all(this.tracks.map((s) => s.getCodecParameterString())), i = [...new Set(e.filter(Boolean))];\n      t += `; codecs=\"${i.join(\", \")}\"`;\n    }\n    return t;\n  }\n  async getTracks() {\n    return await this.readMetadata(), this.tracks;\n  }\n  async computeDuration() {\n    const t = await this.getTracks(), e = await Promise.all(t.map((i) => i.computeDuration()));\n    return Math.max(0, ...e);\n  }\n}, Rc = class {\n  constructor(t, e) {\n    this.bitstream = t, this.demuxer = e, this.encodedPacketToMetadata = /* @__PURE__ */ new WeakMap(), this.internalSampleRate = t.codecInfo.codec === \"opus\" ? Ai : t.sampleRate;\n  }\n  getId() {\n    return this.bitstream.serialNumber;\n  }\n  getNumberOfChannels() {\n    return this.bitstream.numberOfChannels;\n  }\n  getSampleRate() {\n    return this.bitstream.sampleRate;\n  }\n  getTimeResolution() {\n    return this.bitstream.sampleRate;\n  }\n  getCodec() {\n    return this.bitstream.codecInfo.codec;\n  }\n  async getDecoderConfig() {\n    return f(this.bitstream.codecInfo.codec), {\n      codec: this.bitstream.codecInfo.codec,\n      numberOfChannels: this.bitstream.numberOfChannels,\n      sampleRate: this.bitstream.sampleRate,\n      description: this.bitstream.description ?? void 0\n    };\n  }\n  getLanguageCode() {\n    return fe;\n  }\n  async getFirstTimestamp() {\n    return 0;\n  }\n  async computeDuration() {\n    const t = await this.getPacket(1 / 0, { metadataOnly: !0 });\n    return (t?.timestamp ?? 0) + (t?.duration ?? 0);\n  }\n  granulePositionToTimestampInSamples(t) {\n    return this.bitstream.codecInfo.codec === \"opus\" ? (f(this.bitstream.codecInfo.opusInfo), t - this.bitstream.codecInfo.opusInfo.preSkip) : t;\n  }\n  createEncodedPacketFromOggPacket(t, e, i) {\n    if (!t)\n      return null;\n    const { durationInSamples: s, vorbisBlockSize: r } = Dr(\n      t.data,\n      this.bitstream.codecInfo,\n      e.vorbisLastBlocksize\n    ), a = new G(\n      i.metadataOnly ? me : t.data,\n      \"key\",\n      Math.max(0, e.timestampInSamples) / this.internalSampleRate,\n      s / this.internalSampleRate,\n      t.endPage.headerStartPos + t.endSegmentIndex,\n      t.data.byteLength\n    );\n    return this.encodedPacketToMetadata.set(a, {\n      packet: t,\n      timestampInSamples: e.timestampInSamples,\n      durationInSamples: s,\n      vorbisBlockSize: r\n    }), a;\n  }\n  async getFirstPacket(t, e = !0) {\n    const i = e ? await this.demuxer.readingMutex.acquire() : null;\n    try {\n      f(this.bitstream.lastMetadataPacket);\n      const s = await this.demuxer.findNextPacketStart(\n        this.demuxer.reader,\n        this.bitstream.lastMetadataPacket\n      );\n      if (!s)\n        return null;\n      let r = 0;\n      this.bitstream.codecInfo.codec === \"opus\" && (f(this.bitstream.codecInfo.opusInfo), r -= this.bitstream.codecInfo.opusInfo.preSkip);\n      const a = await this.demuxer.readPacket(\n        this.demuxer.reader,\n        s.startPage,\n        s.startSegmentIndex\n      );\n      return this.createEncodedPacketFromOggPacket(\n        a,\n        {\n          timestampInSamples: r,\n          vorbisLastBlocksize: null\n        },\n        t\n      );\n    } finally {\n      i?.();\n    }\n  }\n  async getNextPacket(t, e) {\n    const i = await this.demuxer.readingMutex.acquire();\n    try {\n      const s = this.encodedPacketToMetadata.get(t);\n      if (!s)\n        throw new Error(\"Packet was not created from this track.\");\n      const r = await this.demuxer.findNextPacketStart(this.demuxer.reader, s.packet);\n      if (!r)\n        return null;\n      const a = s.timestampInSamples + s.durationInSamples, n = await this.demuxer.readPacket(\n        this.demuxer.reader,\n        r.startPage,\n        r.startSegmentIndex\n      );\n      return this.createEncodedPacketFromOggPacket(\n        n,\n        {\n          timestampInSamples: a,\n          vorbisLastBlocksize: s.vorbisBlockSize\n        },\n        e\n      );\n    } finally {\n      i();\n    }\n  }\n  async getPacket(t, e) {\n    const i = await this.demuxer.readingMutex.acquire();\n    try {\n      f(this.demuxer.fileSize !== null);\n      const s = Bi(t * this.internalSampleRate, 14);\n      if (s === 0)\n        return this.getFirstPacket(e, !1);\n      if (s < 0)\n        return null;\n      const r = this.demuxer.reader;\n      f(this.bitstream.lastMetadataPacket);\n      const a = await this.demuxer.findNextPacketStart(\n        r,\n        this.bitstream.lastMetadataPacket\n      );\n      if (!a)\n        return null;\n      let n = a.startPage, o = this.demuxer.fileSize;\n      const c = [n];\n      e:\n        for (; n.headerStartPos + n.totalSize < o; ) {\n          const S = n.headerStartPos, k = Math.floor((S + o) / 2);\n          let y = k;\n          for (; ; ) {\n            const T = Math.min(\n              y + Nr,\n              o - ct\n            );\n            if (await r.reader.loadRange(y, T), r.pos = y, !r.findNextPageHeader(T)) {\n              o = k + ct;\n              continue e;\n            }\n            await r.reader.loadRange(r.pos, r.pos + qe);\n            const F = r.readPageHeader();\n            f(F);\n            let z = !1;\n            if (F.serialNumber === this.bitstream.serialNumber)\n              z = !0;\n            else {\n              await r.reader.loadRange(F.headerStartPos, F.headerStartPos + F.totalSize), r.pos = F.headerStartPos;\n              const A = r.readBytes(F.totalSize);\n              z = Ur(A) === F.checksum;\n            }\n            if (!z) {\n              y = F.headerStartPos + 4;\n              continue;\n            }\n            if (z && F.serialNumber !== this.bitstream.serialNumber) {\n              y = F.headerStartPos + F.totalSize;\n              continue;\n            }\n            if (F.granulePosition === -1) {\n              y = F.headerStartPos + F.totalSize;\n              continue;\n            }\n            this.granulePositionToTimestampInSamples(F.granulePosition) > s ? o = F.headerStartPos : (n = F, c.push(F));\n            continue e;\n          }\n        }\n      let l = a.startPage;\n      for (const S of c) {\n        if (S.granulePosition === n.granulePosition)\n          break;\n        (!l || S.headerStartPos > l.headerStartPos) && (l = S);\n      }\n      let d = l;\n      const h = [d];\n      for (; !(d.serialNumber === this.bitstream.serialNumber && d.granulePosition === n.granulePosition); ) {\n        r.pos = d.headerStartPos + d.totalSize, await r.reader.loadRange(r.pos, r.pos + qe);\n        const S = r.readPageHeader();\n        f(S), d = S, d.serialNumber === this.bitstream.serialNumber && h.push(d);\n      }\n      f(d.granulePosition !== -1);\n      let u = null, m, p, g = d, w = 0;\n      if (d.headerStartPos === a.startPage.headerStartPos)\n        m = this.granulePositionToTimestampInSamples(0), p = !0, u = 0;\n      else {\n        m = 0, p = !1;\n        for (let y = d.lacingValues.length - 1; y >= 0; y--)\n          if (d.lacingValues[y] < 255) {\n            u = y + 1;\n            break;\n          }\n        if (u === null)\n          throw new Error(\"Invalid page with granule position: no packets end on this page.\");\n        w = u - 1;\n        const S = {\n          data: me,\n          endPage: g,\n          endSegmentIndex: w\n        };\n        if (await this.demuxer.findNextPacketStart(r, S)) {\n          const y = xs(h, d, u);\n          f(y);\n          const T = Ts(\n            h,\n            y.page,\n            y.segmentIndex\n          );\n          T && (d = T.page, u = T.segmentIndex);\n        } else\n          for (; ; ) {\n            const y = xs(\n              h,\n              d,\n              u\n            );\n            if (!y)\n              break;\n            const T = Ts(\n              h,\n              y.page,\n              y.segmentIndex\n            );\n            if (!T)\n              break;\n            if (d = T.page, u = T.segmentIndex, y.page.headerStartPos !== g.headerStartPos) {\n              g = y.page, w = y.segmentIndex;\n              break;\n            }\n          }\n      }\n      let b = null, x = null;\n      for (; d !== null; ) {\n        f(u !== null);\n        const S = await this.demuxer.readPacket(r, d, u);\n        if (!S)\n          break;\n        if (!(d.headerStartPos === a.startPage.headerStartPos && u < a.startSegmentIndex)) {\n          let T = this.createEncodedPacketFromOggPacket(\n            S,\n            {\n              timestampInSamples: m,\n              vorbisLastBlocksize: x?.vorbisBlockSize ?? null\n            },\n            e\n          );\n          f(T);\n          let P = this.encodedPacketToMetadata.get(T);\n          if (f(P), !p && S.endPage.headerStartPos === g.headerStartPos && S.endSegmentIndex === w ? (m = this.granulePositionToTimestampInSamples(\n            d.granulePosition\n          ), p = !0, T = this.createEncodedPacketFromOggPacket(\n            S,\n            {\n              timestampInSamples: m - P.durationInSamples,\n              vorbisLastBlocksize: x?.vorbisBlockSize ?? null\n            },\n            e\n          ), f(T), P = this.encodedPacketToMetadata.get(T), f(P)) : m += P.durationInSamples, b = T, x = P, p && // Next timestamp will be too late\n          (Math.max(m, 0) > s || Math.max(P.timestampInSamples, 0) === s))\n            break;\n        }\n        const y = await this.demuxer.findNextPacketStart(r, S);\n        if (!y)\n          break;\n        d = y.startPage, u = y.startSegmentIndex;\n      }\n      return b;\n    } finally {\n      i();\n    }\n  }\n  getKeyPacket(t, e) {\n    return this.getPacket(t, e);\n  }\n  getNextKeyPacket(t, e) {\n    return this.getNextPacket(t, e);\n  }\n}, Ts = (t, e, i) => {\n  let s = e, r = i;\n  e:\n    for (; ; ) {\n      for (r--, r; r >= 0; r--)\n        if (s.lacingValues[r] < 255) {\n          r++;\n          break e;\n        }\n      if (f(r === -1), !(s.headerType & 1)) {\n        r = 0;\n        break;\n      }\n      const n = Zs(\n        t,\n        (o) => o.headerStartPos < s.headerStartPos\n      );\n      if (!n)\n        return null;\n      s = n, r = s.lacingValues.length;\n    }\n  if (f(r !== -1), r === s.lacingValues.length) {\n    const a = t[t.indexOf(s) + 1];\n    f(a), s = a, r = 0;\n  }\n  return { page: s, segmentIndex: r };\n}, xs = (t, e, i) => {\n  if (i > 0)\n    return { page: e, segmentIndex: i - 1 };\n  const s = Zs(\n    t,\n    (r) => r.headerStartPos < e.headerStartPos\n  );\n  return s ? { page: s, segmentIndex: s.lacingValues.length - 1 } : null;\n}, Je = class {\n}, Jr = class extends Je {\n  /** @internal */\n  async _getMajorBrand(t) {\n    if (await t._mainReader.source.getSize() < 12)\n      return null;\n    const i = new Ti(t._mainReader);\n    return i.pos = 4, i.readAscii(4) !== \"ftyp\" ? null : i.readAscii(4);\n  }\n  /** @internal */\n  _createDemuxer(t) {\n    return new gc(t);\n  }\n}, Bc = class extends Jr {\n  /** @internal */\n  async _canReadInput(t) {\n    const e = await this._getMajorBrand(t);\n    return !!e && e !== \"qt  \";\n  }\n  getName() {\n    return \"MP4\";\n  }\n  getMimeType() {\n    return \"video/mp4\";\n  }\n}, Oc = class extends Jr {\n  /** @internal */\n  async _canReadInput(t) {\n    return await this._getMajorBrand(t) === \"qt  \";\n  }\n  getName() {\n    return \"QuickTime File Format\";\n  }\n  getMimeType() {\n    return \"video/quicktime\";\n  }\n}, Zr = class extends Je {\n  /** @internal */\n  async isSupportedEBMLOfDocType(t, e) {\n    if (await t._mainReader.source.getSize() < 8)\n      return !1;\n    const s = new wi(t._mainReader), r = s.readVarIntSize();\n    if (r < 1 || r > 8 || s.readUnsignedInt(r) !== 440786851)\n      return !1;\n    const n = s.readElementSize();\n    if (n === null)\n      return !1;\n    const o = s.pos;\n    for (; s.pos < o + n; ) {\n      const { id: c, size: l } = s.readElementHeader(), d = s.pos;\n      if (l === null) return !1;\n      switch (c) {\n        case 17030:\n          if (s.readUnsignedInt(l) !== 1)\n            return !1;\n          break;\n        case 17143:\n          if (s.readUnsignedInt(l) !== 1)\n            return !1;\n          break;\n        case 17026:\n          if (s.readString(l) !== e)\n            return !1;\n          break;\n        case 17031:\n          if (s.readUnsignedInt(l) > 4)\n            return !1;\n          break;\n      }\n      s.pos = d + l;\n    }\n    return !0;\n  }\n  /** @internal */\n  _canReadInput(t) {\n    return this.isSupportedEBMLOfDocType(t, \"matroska\");\n  }\n  /** @internal */\n  _createDemuxer(t) {\n    return new Tc(t);\n  }\n  getName() {\n    return \"Matroska\";\n  }\n  getMimeType() {\n    return \"video/x-matroska\";\n  }\n}, Mc = class extends Zr {\n  /** @internal */\n  _canReadInput(t) {\n    return this.isSupportedEBMLOfDocType(t, \"webm\");\n  }\n  getName() {\n    return \"WebM\";\n  }\n  getMimeType() {\n    return \"video/webm\";\n  }\n}, Ac = class extends Je {\n  /** @internal */\n  async _canReadInput(t) {\n    const e = await t._mainReader.source.getSize();\n    if (e < 4)\n      return !1;\n    const i = new Yr(t._mainReader);\n    i.fileSize = e;\n    const s = i.readId3();\n    s && (i.pos += s.size);\n    const r = i.pos;\n    await i.reader.loadRange(i.pos, i.pos + 4096);\n    const a = i.readNextFrameHeader(r + 4096);\n    if (!a)\n      return !1;\n    if (s)\n      return !0;\n    i.pos = a.startPos + a.totalSize;\n    const n = i.readNextFrameHeader(r + 4096);\n    return !(!n || a.channel !== n.channel || a.sampleRate !== n.sampleRate);\n  }\n  /** @internal */\n  _createDemuxer(t) {\n    return new Ec(t);\n  }\n  getName() {\n    return \"MP3\";\n  }\n  getMimeType() {\n    return \"audio/mpeg\";\n  }\n}, zc = class extends Je {\n  /** @internal */\n  async _canReadInput(t) {\n    if (await t._mainReader.source.getSize() < 12)\n      return !1;\n    const i = new vi(t._mainReader), s = i.readAscii(4);\n    return s !== \"RIFF\" && s !== \"RIFX\" ? !1 : (i.pos = 8, i.readAscii(4) === \"WAVE\");\n  }\n  /** @internal */\n  _createDemuxer(t) {\n    return new sc(t);\n  }\n  getName() {\n    return \"WAVE\";\n  }\n  getMimeType() {\n    return \"audio/wav\";\n  }\n}, Uc = class extends Je {\n  /** @internal */\n  async _canReadInput(t) {\n    return await t._mainReader.source.getSize() < 4 ? !1 : new Vr(t._mainReader).readAscii(4) === \"OggS\";\n  }\n  /** @internal */\n  _createDemuxer(t) {\n    return new Fc(t);\n  }\n  getName() {\n    return \"Ogg\";\n  }\n  getMimeType() {\n    return \"application/ogg\";\n  }\n}, Dc = new Bc(), Nc = new Oc(), Vc = new Zr(), Lc = new Mc(), Wc = new Ac(), Hc = new zc(), $c = new Uc(), Cs = [Dc, Nc, Vc, Lc, Hc, $c, Wc], _s = class {\n  constructor(t) {\n    if (this._demuxerPromise = null, this._format = null, !t || typeof t != \"object\")\n      throw new TypeError(\"options must be an object.\");\n    if (!Array.isArray(t.formats) || t.formats.some((e) => !(e instanceof Je)))\n      throw new TypeError(\"options.formats must be an array of InputFormat.\");\n    if (!(t.source instanceof ji))\n      throw new TypeError(\"options.source must be a Source.\");\n    this._formats = t.formats, this._source = t.source, this._mainReader = new gt(t.source);\n  }\n  /** @internal */\n  _getDemuxer() {\n    return this._demuxerPromise ??= (async () => {\n      await this._mainReader.loadRange(0, 4096);\n      for (const t of this._formats)\n        if (await t._canReadInput(this))\n          return this._format = t, t._createDemuxer(this);\n      throw new Error(\"Input has an unsupported or unrecognizable format.\");\n    })();\n  }\n  /**\n   * Returns the source from which this input file reads its data. This is the same source that was passed to the\n   * constructor.\n   */\n  get source() {\n    return this._source;\n  }\n  /**\n   * Returns the format of the input file. You can compare this result directly to the InputFormat singletons or use\n   * `instanceof` checks for subset-aware logic (for example, `format instanceof MatroskaInputFormat` is true for\n   * both MKV and WebM).\n   */\n  async getFormat() {\n    return await this._getDemuxer(), f(this._format), this._format;\n  }\n  /**\n   * Computes the duration of the longest track in this input file, in seconds. More precisely, returns the largest\n   * end timestamp among all tracks.\n   */\n  async computeDuration() {\n    return (await this._getDemuxer()).computeDuration();\n  }\n  /** Returns the list of all tracks of this input file. */\n  async getTracks() {\n    return (await this._getDemuxer()).getTracks();\n  }\n  /** Returns the list of all video tracks of this input file. */\n  async getVideoTracks() {\n    return (await this.getTracks()).filter((e) => e.isVideoTrack());\n  }\n  /** Returns the primary video track of this input file, or null if there are no video tracks. */\n  async getPrimaryVideoTrack() {\n    return (await this.getTracks()).find((e) => e.isVideoTrack()) ?? null;\n  }\n  /** Returns the list of all audio tracks of this input file. */\n  async getAudioTracks() {\n    return (await this.getTracks()).filter((e) => e.isAudioTrack());\n  }\n  /** Returns the primary audio track of this input file, or null if there are no audio tracks. */\n  async getPrimaryAudioTrack() {\n    return (await this.getTracks()).find((e) => e.isAudioTrack()) ?? null;\n  }\n  /** Returns the full MIME type of this input file, including track codecs. */\n  async getMimeType() {\n    return (await this._getDemuxer()).getMimeType();\n  }\n};\nconst ri = 3e3;\nclass jc extends js() {\n  input;\n  buffers = /* @__PURE__ */ new Map();\n  constructor(e) {\n    super(), this.input = e;\n  }\n  /**\n   * Decodes an audio file or URL and returns a resampled AudioBuffer.\n   * @param input - Either a File, Blob, or URL string.\n   * @returns Promise<AudioBuffer>\n   */\n  async decode(e, i, s = !1) {\n    let r = this.buffers.get(`${i}-${e}`);\n    if (r) return r;\n    let a;\n    if (e || i ? a = new OfflineAudioContext(e ?? 2, 1, i ?? 44100) : a = new AudioContext(), typeof this.input == \"string\") {\n      const o = await (await fetch(this.input)).arrayBuffer();\n      r = await a.decodeAudioData(o);\n    } else if (this.input instanceof Blob)\n      r = await a.decodeAudioData(await this.input.arrayBuffer());\n    else {\n      const n = await this.input.getFile();\n      r = await a.decodeAudioData(await n.arrayBuffer());\n    }\n    return s && this.buffers.set(`${i}-${e}`, r), r;\n  }\n  async dispose() {\n    this.buffers.clear();\n  }\n}\nfunction qc(t, e = {}) {\n  const { threshold: i = 0.02, hopSize: s = 1024, minDuration: r = 500 } = e, a = [], n = t.getChannelData(0), o = t.sampleRate, c = Math.floor(r / 1e3 * o);\n  let l = null, d = 0;\n  for (let h = 0; h < n.length; h += s) {\n    let u = 0;\n    const m = Math.min(h + s, n.length);\n    for (let p = h; p < m; p++)\n      u += n[p] * n[p];\n    u = Math.sqrt(u / (m - h)), u < i ? (d += s, l === null && (l = h)) : (l !== null && d >= c && a.push({\n      start: new E(0, l / o),\n      stop: new E(0, h / o)\n    }), l = null, d = 0);\n  }\n  return l !== null && d >= c && a.push({\n    start: new E(0, l / o),\n    stop: new E(0, n.length / o)\n  }), a;\n}\nvar Qc = Object.defineProperty, Xc = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Qc(e, i, r), r;\n};\nclass Ze extends le {\n  type = \"audio\";\n  element = new Audio();\n  decoder;\n  duration;\n  demuxer;\n  transcript;\n  constructor(e) {\n    super(e), this.decoder = new jc(e.input);\n  }\n  async init(e = {}) {\n    if (this.input instanceof Blob)\n      this.element.src = URL.createObjectURL(this.input);\n    else if (this.input instanceof FileSystemFileHandle) {\n      const i = await this.input.getFile();\n      this.element.src = URL.createObjectURL(i);\n    } else\n      this.element.src = this.input;\n    await new Promise((i, s) => {\n      this.element.readyState >= 3 && i(!0), this.element.addEventListener(\"loadedmetadata\", () => {\n        i(!0);\n      }), this.element.addEventListener(\"error\", () => {\n        s(new ee({\n          message: \"Failed to load audio\",\n          code: \"failed_to_load_audio\"\n        }));\n      });\n    }), this.duration = new E(0, this.element.duration), e.prefetch && typeof this.input == \"string\" ? this.demuxer = fetch(this.input).then((i) => i.blob()).then((i) => new _s({\n      formats: Cs,\n      source: new ks(i)\n    })) : this.demuxer = Promise.resolve(new _s({\n      formats: Cs,\n      source: typeof this.input == \"string\" ? new pc(this.input) : new ks(\n        this.input instanceof Blob ? this.input : await this.input.getFile()\n      )\n    }));\n  }\n  async decode(e = 2, i = 48e3, s = !1) {\n    return this.decoder.decode(e, i, s);\n  }\n  /**\n   * Find silences in the audio clip. Results are cached.\n   * \n   * uses default sample rate of 3000\n   * @param options - Silences options.\n   * @returns An array of the silences (in ms) in the clip.\n   */\n  async silences(e = {}) {\n    const i = await this.decode(1, 24e3);\n    return qc(i, e);\n  }\n  /**\n   * Sampler that uses a window size to calculate the max value of the samples in the window.\n   * @param options - Sampling options.\n   * @returns An array of the max values of the samples in the window.\n   */\n  async sample({\n    length: e = 60,\n    start: i = 0,\n    stop: s,\n    logarithmic: r = !1\n  } = {}) {\n    typeof i == \"object\" && (i = i.millis), typeof s == \"object\" && (s = s.millis);\n    const a = await this.decode(1, ri, !0), n = a.getChannelData(0), o = Math.floor(Math.max(i * ri / 1e3, 0)), c = s ? Math.floor(Math.min(s * ri / 1e3, a.length)) : a.length, l = Math.floor((c - o) / e), d = new Float32Array(e);\n    for (let h = 0; h < e; h++) {\n      const u = o + h * l, m = u + l;\n      let p = Number.NEGATIVE_INFINITY;\n      for (let g = u; g < m; g++) {\n        const w = n[g];\n        w > p && (p = w);\n      }\n      d[h] = r ? Math.log2(1 + p) : p;\n    }\n    return d;\n  }\n  async thumbnail(e = {}) {\n    const i = await this.sample(e), s = document.createElement(\"div\");\n    s.className = \"flex flex-row absolute inset-0 audio-samples\";\n    for (const r of i) {\n      const a = document.createElement(\"div\");\n      a.className = \"audio-sample-item\", a.style.height = `${r * 100}%`, s.appendChild(a);\n    }\n    return s;\n  }\n}\nXc([\n  v(se)\n], Ze.prototype, \"transcript\");\nclass qi extends Pi(Ze) {\n  type = \"video\";\n  element = document.createElement(\"video\");\n  async init(e = {}) {\n    await super.init(e), this.height = this.element.videoHeight, this.width = this.element.videoWidth;\n  }\n  async thumbnail() {\n    return this.element.className = \"object-cover w-full aspect-video h-auto\", this.element.controls = !1, this.element.addEventListener(\"mousemove\", (e) => {\n      const i = this.element.getBoundingClientRect(), s = e.clientX - (i?.left ?? 0), r = this.element.duration;\n      r && i && i.width > 0 && (this.element.currentTime = Math.round(r * (s / i.width)));\n    }), this.element;\n  }\n  async *thumbnailsInRange(e) {\n    const s = await (await this.demuxer)?.getPrimaryVideoTrack();\n    if (!s)\n      return;\n    const r = O(e.startTime).seconds, a = O(e.endTime).seconds, n = Array.from({ length: e.count }, (c, l) => r + l * (a - r) / e.count);\n    yield* new Jo(s, {\n      ...e,\n      fit: \"cover\"\n    }).canvasesAtTimestamps(n);\n  }\n}\nclass Qi extends Pi(le) {\n  type = \"image\";\n  element = new Image();\n  async init() {\n    if (typeof this.input == \"string\") {\n      const e = await fetch(this.input);\n      if (!e.ok) throw new Ee({\n        message: \"Failed to load image\",\n        code: \"failed_to_load_image\"\n      });\n      this.element.src = URL.createObjectURL(await e.blob());\n    } else this.input instanceof Blob ? this.element.src = URL.createObjectURL(this.input) : this.element.src = URL.createObjectURL(await this.input.getFile());\n    await new Promise((e, i) => {\n      this.element.onload = () => {\n        this.height = this.element.naturalHeight, this.width = this.element.naturalWidth, e();\n      }, this.element.onerror = () => i(new Ee({\n        message: \"Failed to load image\",\n        code: \"failed_to_load_image\"\n      }));\n    });\n  }\n  async thumbnail() {\n    return this.element.className = \"object-cover w-full aspect-video h-auto\", this.element;\n  }\n}\nconst Is = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3C/svg%3E\";\nfunction Kc(t) {\n  const e = new TextEncoder().encode(t);\n  let i = \"\";\n  const s = e.byteLength;\n  for (let r = 0; r < s; r++)\n    i += String.fromCharCode(e[r]);\n  return btoa(i);\n}\nfunction Gc(t) {\n  if (!t || !t.body) return Is;\n  const e = t.body.scrollWidth, i = t.body.scrollHeight, s = t.cloneNode(!0), r = s.getElementsByTagName(\"style\").item(0), a = s.getElementsByTagName(\"body\").item(0);\n  if (a?.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\"), !a) return Is;\n  const n = new XMLSerializer(), o = r ? n.serializeToString(r) : \"\", c = n.serializeToString(a), l = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${e}\" height=\"${i}\">\n\t\tbody { padding: 0; }\n    ${o}\n    <foreignObject width=\"100%\" height=\"100%\">\n      ${c}\n    </foreignObject>\n  </svg>`;\n  return \"data:image/svg+xml;base64,\" + Kc(l);\n}\nclass Xi extends Pi(le) {\n  type = \"html\";\n  element = document.createElement(\"iframe\");\n  constructor(e) {\n    super(e), this.element.style.position = \"absolute\", this.element.style.width = \"0\", this.element.style.height = \"0\", this.element.style.border = \"0\", this.element.style.visibility = \"hidden\", document.body.appendChild(this.element);\n  }\n  async init() {\n    if (typeof this.input == \"string\" && this.input.startsWith(\"<html>\"))\n      this.element.srcdoc = this.input;\n    else if (typeof this.input == \"string\") {\n      const e = await fetch(this.input);\n      if (!e.ok) throw new Ee({\n        message: \"Failed to load html\",\n        code: \"failed_to_load_html\"\n      });\n      this.element.src = URL.createObjectURL(await e.blob());\n    } else this.input instanceof Blob ? this.element.src = URL.createObjectURL(this.input) : this.element.src = URL.createObjectURL(await this.input.getFile());\n    await new Promise((e, i) => {\n      this.element.onload = () => {\n        this.height = this.element.contentWindow?.document.body.scrollHeight ?? 1, this.width = this.element.contentWindow?.document.body.scrollWidth ?? 1, e();\n      }, this.element.onerror = () => i(new Ee({\n        message: \"Failed to load html\",\n        code: \"failed_to_load_html\"\n      }));\n    });\n  }\n  /**\n   * Access to the html document as loaded\n   * within the iframe. Can be manipulated with\n   * javascript\n   */\n  get document() {\n    return this.element.contentWindow?.document;\n  }\n  get imageUrl() {\n    return this.height = this.element.contentWindow?.document.body.scrollHeight ?? 1, this.width = this.element.contentWindow?.document.body.scrollWidth ?? 1, Gc(this.document);\n  }\n  async thumbnail() {\n    const e = new Image();\n    return e.className = \"object-contain w-full aspect-video h-auto\", e.src = this.imageUrl, e;\n  }\n}\nclass Oe {\n  static async from(e, i = {}) {\n    const s = await Fa(e);\n    let r;\n    if (s.startsWith(\"audio/\"))\n      r = new Ze({ input: e, mimeType: s, name: i.name });\n    else if (s.startsWith(\"video/\"))\n      r = new qi({ input: e, mimeType: s, name: i.name });\n    else if (s.startsWith(\"image/\"))\n      r = new Qi({ input: e, mimeType: s, name: i.name });\n    else if (s.startsWith(\"text/html\"))\n      r = new Xi({ input: e, mimeType: s, name: i.name });\n    else\n      throw new ee({\n        message: \"Unsupported file type\",\n        code: \"unsupported_file_type\"\n      });\n    return await r.init(i), r;\n  }\n  /**\n   * Restore a checkpoint of the source.\n   * @param checkpoint The checkpoint to restore\n   * @param sources The sources to use for the restoration\n   * @returns The restored source\n   */\n  static async restoreCheckpoint(e, i) {\n    B(typeof e == \"object\"), B(e != null), B(\"input\" in e), B(\"id\" in e), B(\n      typeof e.input == \"string\" || e.input instanceof Blob || e.input instanceof FileSystemFileHandle,\n      \"Source input must be a string or Blob or FileSystemFileHandle\"\n    );\n    const s = await Oe.from(e.input, i);\n    return s.fromJSON(e), s;\n  }\n}\nvar Yc = Object.defineProperty, oe = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Yc(e, i, r), r;\n};\nclass $ extends dt(Te) {\n  id = crypto.randomUUID();\n  _name;\n  _delay = new E();\n  _duration = new E(0, 16);\n  data = {};\n  /**\n   * Flag to check if the clip has been initialized\n   */\n  initialized = !1;\n  type = \"base\";\n  source;\n  createdAt = /* @__PURE__ */ new Date();\n  disabled = !1;\n  animations = [];\n  /**\n   * Access the parent layer\n   */\n  layer;\n  /**\n   * The input that was used to create the clip\n   */\n  input;\n  transition;\n  /**\n   * Human readable identifier of the clip\n   */\n  get name() {\n    return this._name ?? this.source?.name;\n  }\n  set name(e) {\n    this._name = e;\n  }\n  /**\n   * Get the first visible frame\n   */\n  get start() {\n    return this._delay;\n  }\n  /**\n   * Get the last visible frame\n   */\n  get stop() {\n    return this._delay.add(this._duration);\n  }\n  /**\n   * Get the delay of the clip\n   */\n  get delay() {\n    return this._delay;\n  }\n  /**\n   * Get the duration of the clip\n   */\n  get duration() {\n    return this._duration;\n  }\n  constructor(e = {}) {\n    super(), Object.assign(this, e);\n  }\n  /**\n   * Set the animation time of the clip\n   * and interpolate the values\n   * @param time the current absolute time to render\n   */\n  animate(e) {\n    return this;\n  }\n  /**\n   * Method for connecting the layer with the clip\n   */\n  async connect(e) {\n    this.layer = e, this.emit(\"attach\", void 0);\n  }\n  /**\n   * Change clip's offset to zero in seconds. Can be negative\n   */\n  set delay(e) {\n    this._delay = O(e), this.emit(\"frame\", this._delay.frames);\n  }\n  /**\n   * Set the duration of the clip, needs to be positive\n   */\n  set duration(e) {\n    this._duration = O(e), this._duration.millis <= 0 && (this._duration.frames = 1), this.emit(\"frame\", this._duration.frames);\n  }\n  /**\n   * Offsets the clip by a given frame number\n   */\n  offset(e) {\n    return e = O(e), this.delay.addMillis(e.millis), this.emit(\"offset\", e), this.emit(\"frame\", void 0), this;\n  }\n  /**\n   * Triggered when the clip is\n   * added to the composition\n   */\n  async init(e) {\n  }\n  /**\n   * Triggered when the clip enters the scene\n   */\n  async enter(e) {\n  }\n  /**\n   * Triggered for each redraw of the scene.\n   */\n  async update(e) {\n  }\n  /**\n   * Triggered after the clip was updated\n   */\n  render(e) {\n  }\n  /**\n   * Triggered when the clip exits the scene\n   */\n  async exit(e) {\n  }\n  /**\n   * Seek the clip to a specific absolute time\n   */\n  async seek(e) {\n  }\n  /**\n   * Play the clip\n   */\n  async play(e) {\n  }\n  /**\n   * Pause the clip\n   */\n  async pause(e) {\n  }\n  /**\n   * Remove the clip from the layer\n   */\n  detach() {\n    return this.layer?.remove(this), this;\n  }\n  /**\n   * Cleanup the clip after it has been removed from the layer\n   */\n  cleanup() {\n    this.off(\"*\");\n  }\n  /**\n   * Trim the clip to the specified start and stop\n   */\n  trim(e = this.start, i = this.stop) {\n    return e = O(e), i = O(i), this.delay = e, this.duration = i.subtract(e), this;\n  }\n  /**\n   * Split the clip into two clips at the specified time\n   * @param time split, will use the current frame of the composition \n   * a fallback\n   * @returns The clip that was created by performing this action\n   */\n  async split(e) {\n    if (e = O(e ?? this.layer?.composition?.audio.playbackFrame), !e || e.millis <= this.start.millis || e.millis >= this.stop.millis)\n      throw new ee({\n        code: \"split_out_of_range\",\n        message: \"Cannot split clip at the specified time\"\n      });\n    if (!this.layer)\n      throw new ee({\n        code: \"layer_not_attached\",\n        message: \"Clip must be attached to a layer\"\n      });\n    const i = this.animate(e).copy();\n    this.duration = e.subtract(this.delay), i.trim(e.addMillis(1), i.stop), i.animations = [];\n    const s = this.layer.clips.findIndex((r) => r.id == this.id);\n    return await this.layer.add(i, s + 1), i;\n  }\n  /**\n   * Create a copy of the clip. Will have receive a new id\n   * but share the same source\n   */\n  copy() {\n    const e = this.constructor.fromJSON(this.toJSON());\n    return e.source = this.source, e.id = crypto.randomUUID(), e;\n  }\n  /**\n   * Create a checkpoint of the clip. May include Blob or FileSystemFileHandle.\n   * @param middleware A function to modify the checkpoint data\n   * @returns A serialized representation of the clip\n   */\n  async createCheckpoint() {\n    return this.toJSON();\n  }\n  /**\n   * Restore a checkpoint of the clip.\n   * @param checkpoint The checkpoint to restore\n   * @param sources The sources to use for the restoration\n   * @returns The restored clip\n   */\n  async restoreCheckpoint(e, i) {\n    B(typeof e == \"object\"), B(e != null);\n    let s = e, r;\n    if (\"source\" in e && (B(e.source != null), B(typeof e.source == \"object\"), B(\"id\" in e.source), { source: r, ...s } = e), r && r.id !== this.source?.id) {\n      const a = i?.find((n) => n.id === r?.id);\n      a ? this.source = a : (this.source = await Oe.restoreCheckpoint(r), i?.push(this.source));\n    }\n    return this.fromJSON(s), this;\n  }\n}\noe([\n  v()\n], $.prototype, \"id\");\noe([\n  v(void 0, \"name\")\n], $.prototype, \"_name\");\noe([\n  v(E, \"delay\")\n], $.prototype, \"_delay\");\noe([\n  v(E, \"duration\")\n], $.prototype, \"_duration\");\noe([\n  v()\n], $.prototype, \"data\");\noe([\n  v()\n], $.prototype, \"type\");\noe([\n  v()\n], $.prototype, \"source\");\noe([\n  v(Ot)\n], $.prototype, \"createdAt\");\noe([\n  v()\n], $.prototype, \"disabled\");\noe([\n  v()\n], $.prototype, \"animations\");\noe([\n  v()\n], $.prototype, \"transition\");\nclass Jc {\n  static fromType(e) {\n    switch (e.type) {\n      case \"video\":\n        return new zs();\n      case \"audio\":\n        return new pe();\n      case \"html\":\n        return new Us();\n      case \"image\":\n        return new Es();\n      case \"text\":\n        return new L();\n      case \"circle\":\n        return new xl();\n      case \"rectangle\":\n        return new ta();\n      case \"waveform\":\n        return new Il();\n      default:\n        return new $();\n    }\n  }\n  static fromSource(e) {\n    if (e.type == \"video\" && e instanceof qi)\n      return new zs(e);\n    if (e.type == \"audio\" && e instanceof Ze)\n      return new pe(e);\n    if (e.type == \"image\" && e instanceof Qi)\n      return new Es(e);\n    if (e.type == \"html\" && e instanceof Xi)\n      return new Us(e);\n  }\n}\nvar Zc = Object.defineProperty, q = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Zc(e, i, r), r;\n};\nfunction et(t) {\n  class e extends t {\n    _height;\n    _width;\n    _aspectRatio;\n    _keepAspectRatio = !1;\n    _mask;\n    anchorX = 0;\n    anchorY = 0;\n    scaleX = 1;\n    scaleY = 1;\n    translateX = 0;\n    translateY = 0;\n    x = 0;\n    y = 0;\n    rotation = 0;\n    opacity = 100;\n    filter;\n    blendMode;\n    /**\n     * 2D position offset of the clip.\n     * @default { x: 0, y: 0 }\n     */\n    get translate() {\n      return { x: this.translateX, y: this.translateY };\n    }\n    set translate(s) {\n      typeof s == \"number\" ? (this.translateX = s, this.translateY = s) : (this.translateX = s.x, this.translateY = s.y);\n    }\n    /**\n     * The anchor sets the origin point of the clip. Setting the anchor to (0.5,0.5) \n     * means the clips' origin is centered. Setting the anchor to (1,1) would mean \n     * the clips' origin point will be the bottom right corner. If you pass only \n     * single parameter, it will set both x and y to the same value.\n     */\n    get anchor() {\n      return { x: this.anchorX, y: this.anchorY };\n    }\n    set anchor(s) {\n      typeof s == \"number\" ? (this.anchorX = s, this.anchorY = s) : (this.anchorX = s.x, this.anchorY = s.y);\n    }\n    /**\n     * The scale factors of this object along the local coordinate axes.\n     * Will be added to the scale applied by setting height and/or width\n     * @default { x: 1, y: 1 }\n     */\n    get scale() {\n      return { x: this.scaleX, y: this.scaleY };\n    }\n    set scale(s) {\n      typeof s == \"number\" ? (this.scaleX = s, this.scaleY = s) : (this.scaleX = s.x, this.scaleY = s.y);\n    }\n    /**\n     * Defines a region of the clip to be masked.\n     */\n    get mask() {\n      return this._mask;\n    }\n    set mask(s) {\n      this._mask = s, this._mask?.connect(this);\n    }\n    /**\n     * If true, the clip will keep the aspect ratio. \n     * Will be set to false if both height and width are set.\n     * @default true\n     */\n    get keepAspectRatio() {\n      return this._keepAspectRatio;\n    }\n    set keepAspectRatio(s) {\n      if ((!s && this._keepAspectRatio && !this._height || !this._width) && (this._height = this.height, this._width = this.width), s && !this._keepAspectRatio && this._height && this._width) {\n        const { width: r, height: a } = this.size;\n        this._aspectRatio = r / a;\n      }\n      this._keepAspectRatio = s;\n    }\n    /**\n     * Gets the effective aspect ratio, using custom ratio if set, otherwise falling back to source\n     */\n    get aspectRatio() {\n      return this._aspectRatio ?? this.source?.aspectRatio ?? 1;\n    }\n    /**\n     * Sets a custom aspect ratio that overrides the source aspect ratio when free transform is enabled\n     */\n    set aspectRatio(s) {\n      this._aspectRatio = s;\n    }\n    /**\n     * Gets the current height of the clip\n     */\n    get height() {\n      if (!this._height && this._width && this.keepAspectRatio) {\n        const s = this.layer?.composition?.width ?? Number.POSITIVE_INFINITY, r = this.layer?.composition?.height ?? Number.POSITIVE_INFINITY, a = _(this._width, s) / this.aspectRatio;\n        return typeof this._width == \"string\" && this._width.endsWith(\"%\") ? `${a / r * 100}%` : a;\n      }\n      return this._height ?? this.source?.height ?? 0;\n    }\n    set height(s) {\n      s != null && this._width && this.keepAspectRatio && (this._width = void 0), this._height = s;\n    }\n    /**\n     * Gets the current width of the clip\n     */\n    get width() {\n      if (!this._width && this._height && this.keepAspectRatio) {\n        const s = this.layer?.composition?.height ?? Number.POSITIVE_INFINITY, r = this.layer?.composition?.width ?? Number.POSITIVE_INFINITY, a = _(this._height, s) * this.aspectRatio;\n        return typeof this._height == \"string\" && this._height.endsWith(\"%\") ? `${a / r * 100}%` : a;\n      }\n      return this._width ?? this.source?.width ?? 0;\n    }\n    set width(s) {\n      s != null && this._height && this.keepAspectRatio && (this._height = void 0), this._width = s;\n    }\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @default { x: 0, y: 0 }\n     */\n    get position() {\n      return { x: this.x, y: this.y };\n    }\n    set position(s) {\n      typeof s == \"string\" ? (this.x = \"50%\", this.y = \"50%\", this.anchor = 0.5) : (this.x = s.x, this.y = s.y);\n    }\n    animate(s) {\n      for (const r of this.animations) {\n        const a = r?.frames[0].value;\n        typeof a == \"number\" || typeof a == \"string\" && a.match(/^[0-9]+(\\.[0-9]+)?%$/) ? this[r.key] = qs(r, s.subtract(this.start)) : typeof a == \"string\" && a.match(/^#[0-9abcdef]{3,8}$/i) ? this[r.key] = ba(r, s.subtract(this.start)) : typeof a == \"string\" && (this[r.key] = ka(r, s.subtract(this.start)));\n      }\n      return this.mask?.animate(s), this;\n    }\n    /**\n     * Gets the size of the clip in absolute units\n     */\n    get size() {\n      const s = this.layer?.composition?.width ?? Number.POSITIVE_INFINITY, r = this.layer?.composition?.height ?? Number.POSITIVE_INFINITY;\n      return {\n        width: _(this.width, s),\n        height: _(this.height, r)\n      };\n    }\n    /**\n     * Calculates the absolute coordinates of the shape's corners, taking into account\n     * position, anchor point, translation, scale, and rotation. Assumes scale of 1.\n     * @returns Object containing the coordinates of all four corners\n     */\n    get bounds() {\n      let { width: s, height: r } = this.size;\n      s *= this.scaleX, r *= this.scaleY;\n      const a = this.layer?.composition?.width ?? Number.POSITIVE_INFINITY, n = this.layer?.composition?.height ?? Number.POSITIVE_INFINITY, o = _(this.x, a), c = _(this.y, n), l = o + this.translateX, d = c + this.translateY, h = s * this.anchorX, u = r * this.anchorY, m = [\n        { x: -h, y: -u },\n        // Top-left\n        { x: s - h, y: -u },\n        // Top-right\n        { x: s - h, y: r - u },\n        // Bottom-right\n        { x: -h, y: r - u }\n        // Bottom-left\n      ];\n      if (this.rotation !== 0) {\n        const p = this.rotation * Math.PI / 180, g = Math.cos(p), w = Math.sin(p);\n        for (const b of m) {\n          const x = b.x, S = b.y;\n          b.x = x * g - S * w, b.y = x * w + S * g;\n        }\n      }\n      for (const p of m)\n        p.x += l, p.y += d;\n      return m;\n    }\n    /**\n     * @deprecated Use keepAspectRatio instead\n     */\n    get freeTransform() {\n      return !this.keepAspectRatio;\n    }\n    set freeTransform(s) {\n      this.keepAspectRatio = !s;\n    }\n  }\n  return q([\n    v(void 0, \"height\")\n  ], e.prototype, \"_height\"), q([\n    v(void 0, \"width\")\n  ], e.prototype, \"_width\"), q([\n    v(void 0, \"aspectRatio\")\n  ], e.prototype, \"_aspectRatio\"), q([\n    v(void 0, \"keepAspectRatio\")\n  ], e.prototype, \"_keepAspectRatio\"), q([\n    v(Ta, \"mask\")\n  ], e.prototype, \"_mask\"), q([\n    v()\n  ], e.prototype, \"anchorX\"), q([\n    v()\n  ], e.prototype, \"anchorY\"), q([\n    v()\n  ], e.prototype, \"scaleX\"), q([\n    v()\n  ], e.prototype, \"scaleY\"), q([\n    v()\n  ], e.prototype, \"translateX\"), q([\n    v()\n  ], e.prototype, \"translateY\"), q([\n    v()\n  ], e.prototype, \"x\"), q([\n    v()\n  ], e.prototype, \"y\"), q([\n    v()\n  ], e.prototype, \"rotation\"), q([\n    v()\n  ], e.prototype, \"opacity\"), q([\n    v()\n  ], e.prototype, \"filter\"), q([\n    v()\n  ], e.prototype, \"blendMode\"), e;\n}\nclass Es extends et($) {\n  _keepAspectRatio = !0;\n  type = \"image\";\n  animations = [];\n  constructor(e, i = {}) {\n    super(), e instanceof Qi ? this.source = e : this.input = e, Object.assign(this, i);\n  }\n  async init() {\n    this.input && !this.source && (this.source = await Oe.from(this.input));\n  }\n  render(e) {\n    if (!this.source) return;\n    const { width: i, height: s } = this.size;\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * i,\n        y: -this.anchor.y * s\n      }\n    }).image(this.source.element, { width: i, height: s }).restore();\n  }\n}\nfunction el(t, e) {\n  return e == \"lower\" ? t.toLocaleLowerCase() : e == \"upper\" ? t.toUpperCase() : t;\n}\nfunction tl(t, e = []) {\n  if (e.length === 0)\n    return [{ words: kt(t) }];\n  e.sort((r, a) => r.start - a.start);\n  const i = [];\n  let s = 0;\n  for (const r of e) {\n    if (r.start > s) {\n      const o = t.slice(s, r.start);\n      o && i.push({ words: kt(o) });\n    }\n    const a = r.stop ?? t.length, n = t.slice(r.start, a);\n    n && i.push({\n      words: kt(n),\n      style: r.style\n    }), s = a;\n  }\n  if (s < t.length) {\n    const r = t.slice(s);\n    r && i.push({ words: kt(r) });\n  }\n  return i;\n}\nfunction kt(t) {\n  return t.indexOf(\" \") === -1 ? [t] : t.match(/[^]*? |[^]+$/g) || [t];\n}\nclass il {\n  offset;\n  chars;\n  metrics;\n  style;\n  padding = { x: 0, y: 0 };\n  line = {\n    offsetX: 0,\n    offsetY: 0,\n    baseline: 0,\n    height: 0\n  };\n  constructor(e) {\n    this.chars = e.chars, this.offset = e.offset, this.metrics = e.metrics, this.style = e.style ?? {};\n  }\n  get width() {\n    return this.metrics.width | 0;\n  }\n  get height() {\n    return this.metrics.fontBoundingBoxAscent + this.metrics.fontBoundingBoxDescent | 0;\n  }\n  get x() {\n    return this.offset + this.padding.x + this.line.offsetX | 0;\n  }\n  get y() {\n    return this.line.offsetY + this.line.baseline + this.padding.y | 0;\n  }\n  get bounds() {\n    return {\n      top: this.line.offsetY + this.padding.y + this.line.baseline - this.metrics.actualBoundingBoxAscent | 0,\n      right: this.offset + this.line.offsetX + this.padding.x + this.metrics.actualBoundingBoxRight | 0,\n      bottom: this.line.offsetY + this.padding.y + this.line.baseline + this.metrics.actualBoundingBoxDescent | 0,\n      left: this.offset + this.line.offsetX + this.padding.x - this.metrics.actualBoundingBoxLeft | 0\n    };\n  }\n}\nconst Ps = 1, Fs = 3, sl = 3, Rs = 8, Bs = 2, Os = 10, rl = 16, al = \"sans-serif\", nl = \"normal\", ol = \"400\";\nclass Ms {\n  text = \"\";\n  font = {\n    family: al,\n    size: rl\n  };\n  color = \"#FFFFFF\";\n  maxWidth = Number.MAX_SAFE_INTEGER;\n  resolution = 1;\n  leading = 1;\n  opacity = 100;\n  casing;\n  align = \"left\";\n  baseline = \"top\";\n  shadows = [];\n  strokes = [];\n  styles = [];\n  glow;\n}\nclass cl extends Ms {\n  isDirty = !0;\n  canvas = document.createElement(\"canvas\");\n  ctx;\n  padding = {\n    x: 0,\n    y: 0\n  };\n  lines = [];\n  /**\n   * Create a new Text instance\n   * @param options Configuration options\n   */\n  constructor({ alpha: e = !0, willReadFrequently: i = !1, ...s } = {}) {\n    super();\n    const r = this.canvas.getContext(\"2d\", {\n      alpha: e,\n      willReadFrequently: i,\n      ...s\n    });\n    if (!r)\n      throw new Error(\"Could not get 2D context for shared canvas\");\n    this.ctx = r, this.ctx.imageSmoothingEnabled = !1, this.ctx.textAlign = \"left\";\n    const a = Object.keys(new Ms());\n    return new Proxy(this, {\n      set: (n, o, c) => {\n        if (a.includes(o.toString())) {\n          const l = n[o];\n          typeof c == \"object\" && c !== null ? (!l || JSON.stringify(l) !== JSON.stringify(c)) && (n.isDirty = !0) : l !== c && (n.isDirty = !0);\n        }\n        return n[o] = c, !0;\n      }\n    });\n  }\n  get width() {\n    return this.canvas.width / this.resolution;\n  }\n  get height() {\n    return this.canvas.height / this.resolution;\n  }\n  get fontSize() {\n    return this.font.size;\n  }\n  set fontSize(e) {\n    this.font.size = e;\n  }\n  /**\n   * Draw/update the text on the shared canvas if needed\n   * @param options Optional parameters to update text, fontSize, and color\n   */\n  render() {\n    this.isDirty && (this.lines = this.getLines(), this.alignLines(this.lines), this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.renderLines(this.lines), this.isDirty = !1);\n  }\n  alignLines(e) {\n    const i = e.map((p) => p.reduce((g, w) => g + w.width, 0)), s = e.map((p) => Math.max(...p.map((g) => g.height))), r = Math.max(...i), a = s.reduce((p, g, w) => p + g * (w < s.length - 1 ? this.leading : 1), 0);\n    let n = 0, o = 0, c = 0, l = 0, d = 0;\n    this.shadows.length && (n = Math.max(...this.shadows.map((p) => (p?.blur ?? Rs) * this.resolution), 0), o = Math.max(...this.shadows.map((p) => Math.abs((p?.offsetX ?? 0) * this.resolution)), 0) + n, c = Math.max(...this.shadows.map((p) => Math.abs((p?.offsetY ?? 0) * this.resolution)), 0) + n), this.strokes.length && (l = Math.max(...this.strokes.map((p) => (p.width ?? Bs) * this.resolution * Fs * 0.5), 0)), this.glow && (d = (this.glow?.radius ?? Os) * this.resolution * 2), this.padding = {\n      x: Ps * 2 + Math.max(o + l, d) | 0,\n      y: Ps * 2 + Math.max(c + l, d) | 0\n    };\n    const h = r + this.padding.x * 2 | 0, u = a + this.padding.y * 2 | 0;\n    (this.canvas.width !== h || this.canvas.height !== u) && (this.canvas.width = h, this.canvas.height = u, this.ctx.imageSmoothingEnabled = !1);\n    const m = {\n      offsetX: 0,\n      offsetY: 0,\n      baseline: 0,\n      height: 0\n    };\n    for (let p = 0; p < e.length; p++) {\n      if (m.height = s[p], this.align === \"left\" ? m.offsetX = 0 : this.align === \"center\" ? m.offsetX = (r - i[p]) / 2 : this.align === \"right\" && (m.offsetX = r - i[p]), this.baseline === \"top\")\n        m.baseline = 0;\n      else if (this.baseline === \"middle\")\n        m.baseline = s[p] / 2;\n      else if (this.baseline === \"bottom\")\n        m.baseline = s[p];\n      else if (this.baseline === \"alphabetic\") {\n        const g = Math.max(...e[p].map((w) => w.metrics.fontBoundingBoxAscent));\n        m.baseline = g || s[p] * 0.75;\n      }\n      for (const g of e[p])\n        g.line = { ...m }, g.padding = { ...this.padding };\n      m.offsetY += s[p] * this.leading;\n    }\n  }\n  renderLines(e) {\n    const i = e.flat();\n    this.ctx.save();\n    for (const s of i) {\n      this.applyFont({\n        ...this.font,\n        ...s.style?.font,\n        fontSize: s.style?.fontSize,\n        color: s.style?.color ?? this.color,\n        opacity: s.style?.opacity ?? this.opacity\n      });\n      const r = (s.style?.strokes ?? this.strokes).at(0);\n      r && this.applyStroke(r);\n      for (const a of s.style?.shadows ?? this.shadows)\n        this.applyShadow(a), (s.style?.strokes ?? this.strokes).length ? this.ctx.strokeText(s.chars, s.x, s.y) : this.ctx.fillText(s.chars, s.x, s.y);\n    }\n    this.ctx.restore(), this.ctx.save();\n    for (const s of i) {\n      this.applyFont({\n        ...this.font,\n        ...s.style?.font,\n        fontSize: s.style?.fontSize\n      });\n      for (const r of s.style?.strokes ?? this.strokes)\n        this.applyStroke(r), this.ctx.strokeText(s.chars, s.x, s.y);\n    }\n    this.ctx.restore(), this.ctx.save();\n    for (const s of i)\n      this.applyFont({\n        ...this.font,\n        ...s.style?.font,\n        fontSize: s.style?.fontSize,\n        color: s.style?.color ?? this.color,\n        opacity: s.style?.opacity ?? this.opacity\n      }), this.ctx.fillText(s.chars, s.x, s.y);\n    this.ctx.restore(), this.ctx.save();\n    for (const s of i) {\n      this.applyFont({\n        ...this.font,\n        ...s.style?.font,\n        fontSize: s.style?.fontSize,\n        color: s.style?.color ?? this.color,\n        opacity: s.style?.opacity ?? this.opacity\n      });\n      const r = s.style?.glow ?? this.glow;\n      if (r) {\n        this.applyGlow(r);\n        for (let a = 0; a < (r.intensity ?? 1); a++)\n          this.ctx.fillText(s.chars, s.x, s.y);\n      }\n    }\n    this.ctx.restore();\n  }\n  /**\n   * Split text into lines based on maxWidth\n   */\n  getLines() {\n    const e = [[]];\n    let i = 0;\n    for (const { words: s, style: r } of tl(this.text, this.styles)) {\n      this.applyFont({\n        ...this.font,\n        ...r?.font,\n        fontSize: r?.fontSize\n      });\n      for (const a of s) {\n        const n = a.split(`\n`);\n        for (let o = 0; o < n.length; o++) {\n          const c = el(n[o], r?.casing ?? this.casing), l = this.ctx.measureText(c);\n          i + l.width > this.maxWidth && (e.push([]), i = 0), e[e.length - 1].push(\n            new il({ chars: c, style: r, metrics: l, offset: i })\n          ), i += l.width, o < n.length - 1 && (e.push([]), i = 0);\n        }\n      }\n    }\n    return e;\n  }\n  applyFont({ style: e, weight: i, size: s, family: r, color: a, fontSize: n, opacity: o }) {\n    this.ctx.font = `${e ?? nl} ${i ?? ol} ${(n ?? s) * sl * this.resolution}px ${r}`.trim(), this.ctx.fillStyle = a ? $e(a, o) : \"transparent\", this.ctx.textBaseline = this.baseline;\n  }\n  applyShadow({ offsetX: e = 0, offsetY: i = 0, blur: s = Rs, color: r = \"#000000\", opacity: a = 80 }) {\n    this.ctx.shadowOffsetX = e * this.resolution, this.ctx.shadowOffsetY = i * this.resolution, this.ctx.shadowBlur = s * this.resolution, this.ctx.shadowColor = $e(r, a);\n  }\n  applyStroke({ width: e = Bs, color: i = \"#000000\", lineCap: s = \"butt\", lineJoin: r = \"miter\", miterLimit: a = 2, opacity: n = 100 }) {\n    this.ctx.lineWidth = e * this.resolution * Fs, this.ctx.lineCap = s, this.ctx.lineJoin = r, this.ctx.miterLimit = a, this.ctx.strokeStyle = $e(i, n);\n  }\n  applyGlow({ radius: e = Os, opacity: i = 100 }) {\n    this.ctx.filter = `blur(${e * this.resolution}px)`, this.ctx.globalAlpha = i / 100, this.ctx.globalCompositeOperation = \"lighter\";\n  }\n}\nconst ll = {\n  center: 0.5,\n  left: 0,\n  right: 1\n}, dl = {\n  top: 0,\n  middle: 0.5,\n  alphabetic: 0.75,\n  bottom: 1\n};\nvar hl = Object.defineProperty, ul = Object.getOwnPropertyDescriptor, ie = (t, e, i, s) => {\n  for (var r = s > 1 ? void 0 : s ? ul(e, i) : e, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = (s ? n(e, i, r) : n(r)) || r);\n  return s && r && hl(e, i, r), r;\n};\nconst fl = 0.95;\nclass L extends et($) {\n  node = new cl();\n  type = \"text\";\n  animations = [];\n  background;\n  maxWidth;\n  constructor(e = {}) {\n    super(), Object.assign(this, e);\n  }\n  get text() {\n    return this.node.text;\n  }\n  set text(e) {\n    this.node.text = e;\n  }\n  get color() {\n    return this.node.color;\n  }\n  set color(e) {\n    this.node.color = e;\n  }\n  get font() {\n    return this.node.font;\n  }\n  set font(e) {\n    this.node.font = e;\n  }\n  get casing() {\n    return this.node.casing;\n  }\n  set casing(e) {\n    this.node.casing = e;\n  }\n  get align() {\n    return this.node.align;\n  }\n  set align(e) {\n    this.anchor = {\n      x: ll[e],\n      y: this.anchor.y\n    }, this.node.align = e;\n  }\n  get baseline() {\n    return this.node.baseline;\n  }\n  set baseline(e) {\n    this.anchor = {\n      x: this.anchor.x,\n      y: dl[e]\n    }, this.node.baseline = e;\n  }\n  /**\n   * An object describing the stroke to apply\n   */\n  get stroke() {\n    return this.node.strokes[0];\n  }\n  set stroke(e) {\n    this.node.strokes = e ? [e] : [];\n  }\n  get strokes() {\n    return this.node.strokes;\n  }\n  set strokes(e) {\n    this.node.strokes = e;\n  }\n  /**\n   * Set a drop shadow for the text.\n   */\n  get shadow() {\n    return this.node.shadows[0];\n  }\n  set shadow(e) {\n    Array.isArray(e) ? this.node.shadows = e : e ? this.node.shadows = [e] : this.node.shadows = [];\n  }\n  get shadows() {\n    return this.node.shadows;\n  }\n  set shadows(e) {\n    this.node.shadows = e;\n  }\n  get leading() {\n    return this.node.leading;\n  }\n  set leading(e) {\n    this.node.leading = e;\n  }\n  get glow() {\n    return this.node.glow;\n  }\n  set glow(e) {\n    this.node.glow = e;\n  }\n  get styles() {\n    return this.node.styles;\n  }\n  set styles(e) {\n    this.node.styles = e;\n  }\n  render(e) {\n    this.node.resolution = e.resolution, this.node.maxWidth = _(this.maxWidth ?? Number.POSITIVE_INFINITY, e.width * e.resolution), this.node.render();\n    const i = this.node.height - this.node.padding.y * 2, s = this.node.width - this.node.padding.x * 2;\n    if (e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }), this.background) {\n      const r = this.background.padding ?? { x: 30, y: 20 };\n      e.rect({\n        x: -(this.anchor.x * s) - r.x,\n        y: -(this.anchor.y * i) - r.y,\n        width: s + r.x * 2,\n        height: i * fl + r.y * 2,\n        radius: this.background.borderRadius ?? 20\n      }).fill({\n        color: this.background.fill ?? \"#000000\",\n        opacity: this.background.opacity ?? 100\n      }, !0);\n    }\n    e.transform({\n      translate: {\n        x: -(this.anchor.x * s) - this.node.padding.x,\n        y: -(this.anchor.y * i) - this.node.padding.y\n      }\n    }).image(this.node.canvas, { width: this.node.width, height: this.node.height }).restore();\n  }\n  get width() {\n    return this.node.width;\n  }\n  set width(e) {\n    console.error(\"This method is not supported for text clips\");\n  }\n  get height() {\n    return this.node.height;\n  }\n  set height(e) {\n    console.error(\"This method is not supported for text clips\");\n  }\n  /**\n   * Proxy for font.size\n   */\n  get fontSize() {\n    return this.font.size;\n  }\n  set fontSize(e) {\n    this.font.size = e;\n  }\n  get name() {\n    return this.text;\n  }\n  get position() {\n    return super.position;\n  }\n  set position(e) {\n    super.position = e, e === \"center\" && (this.align = \"center\", this.baseline = \"middle\");\n  }\n  get lines() {\n    return this.node.lines;\n  }\n}\nie([\n  v()\n], L.prototype, \"background\", 2);\nie([\n  v()\n], L.prototype, \"maxWidth\", 2);\nie([\n  v()\n], L.prototype, \"text\", 1);\nie([\n  v()\n], L.prototype, \"color\", 1);\nie([\n  v()\n], L.prototype, \"font\", 1);\nie([\n  v()\n], L.prototype, \"casing\", 1);\nie([\n  v()\n], L.prototype, \"align\", 1);\nie([\n  v()\n], L.prototype, \"baseline\", 1);\nie([\n  v()\n], L.prototype, \"strokes\", 1);\nie([\n  v()\n], L.prototype, \"shadows\", 1);\nie([\n  v()\n], L.prototype, \"leading\", 1);\nie([\n  v()\n], L.prototype, \"glow\", 1);\nie([\n  v()\n], L.prototype, \"styles\", 1);\nclass Sd extends L {\n}\nclass ml {\n  static fromJSON(e) {\n    return B(Array.isArray(e)), B(typeof e[0] == \"number\" && typeof e[1] == \"number\"), [new E(e[0]), new E(e[1])];\n  }\n}\nlet pl = class {\n  source;\n  options;\n  context;\n  generator;\n  constructor(e, i) {\n    this.source = e, this.options = i;\n  }\n  /**\n   * Initializes the audio decoder with the given audio context.\n   * Sets up audio nodes and prepares the audio generator.\n   */\n  async init(e) {\n    const s = await (await this.source.demuxer)?.getPrimaryAudioTrack();\n    if (this.context = e, !s) return this;\n    const { start: r, stop: a } = this.options;\n    try {\n      if (await s.canDecode()) {\n        const n = new ic(s), o = await gl(n, r, a);\n        this.generator = yl(o);\n      } else {\n        const n = await this.source.arrayBuffer(), o = await e.decodeAudioData(n);\n        this.generator = wl(o, r, a);\n      }\n    } catch {\n      console.error(\"Failed to decode audio using WebAudio API. Audio might not be available.\");\n    }\n    return this;\n  }\n  async render(e) {\n    if (!this.generator || !this.context) return;\n    const { value: i } = await this.generator?.next() ?? {};\n    if (!i?.buffer) return;\n    const s = this.context.createGain();\n    s.gain.value = this.options.volume, s.connect(this.context.destination);\n    const r = this.context.createBufferSource();\n    r.buffer = i.buffer, r.connect(s), r.start(Math.max(0, e + i.timestamp));\n  }\n};\nasync function gl(t, e, i) {\n  const s = t.buffers(e, i), r = [];\n  for await (const a of s)\n    r.push(a);\n  return r;\n}\nasync function* wl(t, e, i) {\n  const s = Math.floor(e * t.sampleRate), r = Math.floor(i * t.sampleRate), a = new AudioBuffer({\n    length: r - s,\n    numberOfChannels: t.numberOfChannels,\n    sampleRate: t.sampleRate\n  });\n  for (let n = 0; n < t.numberOfChannels; n++) {\n    const o = t.getChannelData(n), c = new Float32Array(o.slice(s, r));\n    a.copyToChannel(c, n);\n  }\n  yield {\n    buffer: a,\n    timestamp: e,\n    duration: i - e\n  };\n}\nasync function* yl(t) {\n  if (!t.length) return;\n  const e = t.reduce((a, n) => a + n.buffer.length, 0), i = t[0].buffer, s = new AudioBuffer({\n    length: e,\n    numberOfChannels: i.numberOfChannels,\n    sampleRate: i.sampleRate\n  });\n  let r = 0;\n  for (const { buffer: a } of t) {\n    for (let n = 0; n < a.numberOfChannels; n++) {\n      const o = a.getChannelData(n);\n      s.copyToChannel(o, n, r);\n    }\n    r += a.length;\n  }\n  yield {\n    buffer: s,\n    timestamp: t[0].timestamp,\n    duration: t[0].timestamp + s.duration\n  };\n}\nasync function bl(t) {\n  const e = t.cloneNode();\n  return e.controls = !1, e.style.display = \"hidden\", e.crossOrigin = \"anonymous\", e.preload = \"auto\", e instanceof HTMLVideoElement && (e.playsInline = !0), await new Promise((i, s) => {\n    e.readyState >= 3 && i(null), e?.addEventListener(\"canplay\", () => {\n      i(null);\n    }, { once: !0 }), e?.addEventListener(\"error\", () => s(\n      new Bt({\n        message: `Failed to decode file: ${e?.error}`,\n        code: \"seek_error\"\n      })\n    ), { once: !0 }), e?.load();\n  }), e;\n}\nfunction As(t, e) {\n  return t.start.millis >= e[0].millis && t.start.millis <= e[1].millis || t.stop.millis <= e[1].millis && t.stop.millis >= e[0].millis;\n}\nvar kl = Object.defineProperty, Sl = Object.getOwnPropertyDescriptor, Wt = (t, e, i, s) => {\n  for (var r = s > 1 ? void 0 : s ? Sl(e, i) : e, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = (s ? n(e, i, r) : n(r)) || r);\n  return s && r && kl(e, i, r), r;\n};\nclass pe extends $ {\n  _muted = !1;\n  _volume = 1;\n  _transcript;\n  gainNode;\n  type = \"audio\";\n  playing = !1;\n  range = [new E(), new E()];\n  /**\n   * Defines the playback element\n   */\n  element;\n  constructor(e, i = {}) {\n    super(), e instanceof Ze ? this.source = e : this.input = e, Object.assign(this, i);\n  }\n  async init(e) {\n    if (this.input && !this.source && (this.source = await Oe.from(this.input)), !this.source?.duration)\n      throw new ee({\n        code: \"missing_duration\",\n        message: \"No duration found for source\"\n      });\n    if ((this.range[1].millis > this.source.duration.millis || this.range[1].millis === 0) && (this.range[1] = this.source.duration), e.context instanceof AudioContext && this.source?.element) {\n      this.element = await bl(this.source.element), this.element.muted = this._muted;\n      const i = e.context.createMediaElementSource(this.element);\n      this.gainNode = e.context.createGain(), i.connect(this.gainNode), this.gainNode.connect(e.context.destination), this.gainNode.gain.value = Math.max(0, Math.min(1, this._volume)), this.element.addEventListener(\"play\", () => {\n        this.playing = !0;\n      }), this.element.addEventListener(\"pause\", () => {\n        this.playing = !1;\n      });\n    }\n  }\n  async play(e) {\n    !this.element || e.playbackTime > this.stop.seconds || (this.element.currentTime = Math.max(this.range[0].seconds, e.playbackTime - this.delay.seconds), e.playbackTime > this.start.seconds && await new Promise((i, s) => {\n      this.element.onseeked = () => i(null), this.element.onerror = () => s(\n        new Bt({\n          message: `Failed to decode file: ${this.element?.error}`,\n          code: \"seek_error\"\n        })\n      );\n    }));\n  }\n  async pause() {\n    this.playing && (this.element?.pause(), this.playing = !1);\n  }\n  async enter(e) {\n    if (await super.enter(e), e.context instanceof OfflineAudioContext && this.source && !this.muted) {\n      const [i, s] = this.getBufferRange(e), r = new pl(this.source, {\n        volume: this.volume,\n        start: i,\n        stop: s\n      });\n      await r.init(e.context), await r.render(this.delay.seconds);\n    }\n  }\n  async update(e) {\n    const i = e.playbackTimestamp.millis - this.start.millis + this.range[0].millis;\n    e.playing && !this.playing && i >= 0 && (this.element && !this.element.ended && await this.element?.play(), this.playing = !0);\n  }\n  async exit() {\n    await this.pause();\n  }\n  get transcript() {\n    const e = this.source?.transcript ?? this._transcript;\n    if (e)\n      return this.duration.millis ? Object.assign(\n        new se(\n          e.groups.map((i) => {\n            const s = new Le(\n              i.words.filter((n) => n.stop.millis > this.range[0].millis && n.start.millis < this.range[1].millis).map((n) => new Tt(n.text, n.start.millis, n.stop.millis))\n            ), r = s.words[0], a = s.words[s.words.length - 1];\n            return r && r.start.millis < this.range[0].millis && (r.start.millis = this.range[0].millis), a && a.stop.millis > this.range[1].millis && (a.stop.millis = this.range[1].millis), s;\n          }).filter((i) => i.words.length > 0)\n        ),\n        { id: e.id }\n      ) : e;\n  }\n  set transcript(e) {\n    this._transcript = e, this.source && (this.source.transcript = e);\n  }\n  cleanup() {\n    super.cleanup(), this.playing && this.element?.pause();\n  }\n  get start() {\n    return this.range[0].add(this._delay);\n  }\n  get stop() {\n    return this.range[1].add(this._delay);\n  }\n  get duration() {\n    return this.range[1].subtract(this.range[0]);\n  }\n  set duration(e) {\n    this.range[1] = this.range[0].add(O(e)), this.range[1].millis <= this.range[0].millis && (this.range[1] = this.range[0].copy().addMillis(1)), this.source?.duration && this.range[1].millis > this.source.duration.millis && (this.range[1] = this.source.duration), this.emit(\"frame\", this.stop.frames);\n  }\n  get volume() {\n    return this._volume;\n  }\n  set volume(e) {\n    this._volume = Math.max(0, Math.min(1, e)), this.gainNode && (this.gainNode.gain.value = this._volume);\n  }\n  get muted() {\n    return this.element?.muted ?? this._muted;\n  }\n  set muted(e) {\n    this._muted = e, this.element && (this.element.muted = e);\n  }\n  trim(e = this.start, i = this.stop) {\n    return e = O(e), i = O(i), this.subclip(e.subtract(this.delay), i.subtract(this.delay));\n  }\n  /**\n   * Returns a slice of a media clip with trimmed start and stop\n   */\n  subclip(e = this.range[0], i = this.range[1]) {\n    if (e = O(e), i = O(i), e.millis >= i.millis)\n      throw new ee({\n        code: \"invalidKeyframe\",\n        message: \"Start can't lower than or equal the stop\"\n      });\n    return e.millis < 0 && (this.range[0].millis = 0, e = this.range[0]), this.source?.duration && i.millis > this.source.duration.millis && this.source.duration.millis && (i = this.source.duration), this.range = [e, i], this.emit(\"frame\", void 0), this;\n  }\n  async split(e) {\n    if (e = O(e ?? this.layer?.composition?.audio.playbackFrame), !e || e.millis <= this.start.millis || e.millis >= this.stop.millis)\n      throw new ee({\n        code: \"split_out_of_range\",\n        message: \"Cannot split clip at the specified time\"\n      });\n    if (!this.layer)\n      throw new ee({\n        code: \"layer_not_attached\",\n        message: \"Layer must be attached to a layer\"\n      });\n    const i = e.subtract(this._delay), s = this.animate(e).copy();\n    this.range[1] = i.copy(), s.range[0] = i.copy().addMillis(1), s.animations = [];\n    const r = this.layer.clips.findIndex((a) => a.id == this.id);\n    return await this.layer.add(s, r + 1), s;\n  }\n  /**\n   * Remove silences from the clip will return an array of clips with the silences removed.\n   * If the clip has been added to a layer it will remove the silences within the layer.\n   * @param options - Options for silence detection\n   */\n  async removeSilences(e = {}) {\n    if (!this.source) return [this];\n    const i = (await this.source.silences(e)).filter((a) => As(a, this.range)).sort((a, n) => a.start.millis - n.start.millis);\n    if (i.length == 0) return [this];\n    const s = e.padding ?? 500, r = [this];\n    for (const a of i) {\n      const n = r.at(-1);\n      if (!n) break;\n      if (!As(a, n.range)) continue;\n      const o = new E(\n        Math.min(a.start.millis + s, a.stop.millis)\n      );\n      if (a.start.millis > n.range[0].millis && a.stop.millis < n.range[1].millis) {\n        const c = n.copy();\n        n.range[1] = o, c.range[0] = a.stop, r.push(c);\n      } else a.start.millis <= n.range[0].millis ? n.range[0] = a.stop : a.stop.millis >= n.range[1].millis && (n.range[1] = o);\n    }\n    if (this.layer) {\n      let a = !1;\n      this.layer.strategy.mode == \"SEQUENTIAL\" && (a = !0, this.layer.sequential(!1)), this.detach(), await Promise.all(r.map((n) => this.layer?.add(n))), a && this.layer.sequential();\n    }\n    return r;\n  }\n  /**\n   * Get the range of the clip in **seconds**\n   */\n  getBufferRange(e) {\n    const i = this.layer?.composition?.markers.stop;\n    let s;\n    e.playbackTime > this.start.seconds ? s = e.playbackTime - this.delay.seconds : this.start.millis < 0 ? s = Math.abs(this.delay.seconds) : s = this.range[0].seconds;\n    let r;\n    return i && this.stop.millis > i.millis ? r = i.subtract(this.delay).seconds : r = this.range[1].seconds, [s, r];\n  }\n}\nWt([\n  v(ml)\n], pe.prototype, \"range\", 2);\nWt([\n  v(se)\n], pe.prototype, \"transcript\", 1);\nWt([\n  v()\n], pe.prototype, \"volume\", 1);\nWt([\n  v()\n], pe.prototype, \"muted\", 1);\nlet vl = class {\n  current;\n  rotation;\n  next;\n  source;\n  options;\n  generator;\n  constructor(e, i) {\n    this.source = e, this.options = i;\n  }\n  async init() {\n    const i = await (await this.source.demuxer)?.getPrimaryVideoTrack();\n    if (!i || !await i.canDecode())\n      throw new Bt({\n        message: \"Video track cannot be decoded\",\n        code: \"video_track_cannot_be_decoded\"\n      });\n    const s = new Wr(i);\n    return this.rotation = i?.rotation, this.generator = s.samples(this.options.start, this.options.stop), this.current = (await this.generator?.next())?.value, this.next = (await this.generator?.next())?.value, this;\n  }\n  async forward(e, i) {\n    for (; (this.next?.timestamp ?? Number.POSITIVE_INFINITY) <= e - i; )\n      this.current?.close(), this.current = this.next, this.next = (await this.generator?.next())?.value;\n  }\n  close() {\n    this.current?.close(), this.next?.close(), this.current = void 0, this.next = void 0;\n  }\n};\nclass zs extends et(pe) {\n  _keepAspectRatio = !0;\n  type = \"video\";\n  videoDecoder;\n  animations = [];\n  constructor(e, i = {}) {\n    super(), e instanceof qi ? this.source = e : this.input = e, Object.assign(this, i);\n  }\n  async init(e) {\n    await super.init(e), this.element && (this.element.currentTime = Math.max(1e-3, e.playbackTime - this.delay.seconds), await new Promise((i, s) => {\n      this.element.onseeked = () => i(null), this.element.onerror = () => s(\n        new Bt({\n          message: `Failed to decode file: ${this.element?.error}`,\n          code: \"seek_error\"\n        })\n      );\n    }));\n  }\n  async seek(e) {\n    !this.element || e.playbackTime < this.start.seconds || e.playbackTime > this.stop.seconds || (this.element.currentTime = Math.max(0, e.playbackTime - this.delay.seconds));\n  }\n  async update(e) {\n    if (await super.update(e), !(!(e.context instanceof OfflineAudioContext) || !this.source)) {\n      if (!this.videoDecoder) {\n        const [i, s] = this.getBufferRange(e);\n        this.videoDecoder = await new vl(this.source, {\n          start: i,\n          stop: s\n        }).init();\n      }\n      await this.videoDecoder.forward(e.playbackTime, this.delay.seconds);\n    }\n  }\n  render(e) {\n    if (!(this.element instanceof HTMLVideoElement)) return;\n    const { width: i, height: s } = this.size, r = this.videoDecoder?.current?.toVideoFrame() ?? this.element;\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * i,\n        y: -this.anchor.y * s\n      }\n    }).image(r, {\n      width: i,\n      height: s,\n      rotation: this.videoDecoder?.rotation\n    }).restore(), r instanceof VideoFrame && r.close();\n  }\n  async exit() {\n    await super.exit(), this.videoDecoder?.close(), this.videoDecoder = void 0;\n  }\n}\nclass Us extends et($) {\n  _keepAspectRatio = !0;\n  type = \"html\";\n  animations = [];\n  /**\n   * Access to the html document that\n   * will be rendered to the canvas\n   */\n  element = new Image();\n  constructor(e, i = {}) {\n    super(), e instanceof Xi ? this.source = e : this.input = e, Object.assign(this, i);\n  }\n  async init() {\n    this.input && !this.source && (this.source = await Oe.from(this.input)), this.element.setAttribute(\"src\", this.source.imageUrl), await new Promise((e, i) => {\n      this.element.onload = () => e(), this.element.onerror = () => {\n        i(\n          new Ee({\n            code: \"sourceNotProcessable\",\n            message: \"An error occurred while processing the input medium.\"\n          })\n        );\n      };\n    });\n  }\n  render(e) {\n    const { width: i, height: s } = this.size;\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * i,\n        y: -this.anchor.y * s\n      }\n    }).image(this.element, { width: i, height: s }).restore();\n  }\n  refresh() {\n    return this.element.setAttribute(\"src\", this.source.imageUrl), this;\n  }\n}\nvar Tl = Object.defineProperty, ea = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Tl(e, i, r), r;\n};\nclass Ht extends et($) {\n  type = \"shape\";\n  fill = \"#FFFFFF\";\n  strokes = [];\n  get stroke() {\n    return this.strokes[0];\n  }\n  set stroke(e) {\n    this.strokes = e ? [e] : [];\n  }\n  constructor(e = {}) {\n    super(), Object.assign(this, e);\n  }\n}\nea([\n  v()\n], Ht.prototype, \"fill\");\nea([\n  v()\n], Ht.prototype, \"strokes\");\nclass xl extends Ht {\n  _keepAspectRatio = !0;\n  type = \"circle\";\n  animations = [];\n  constructor(e = {}) {\n    super(), Object.assign(this, { radius: 300, ...e });\n  }\n  get radius() {\n    const e = this.size;\n    return Math.min(e.width, e.height) * 0.5;\n  }\n  set radius(e) {\n    this.keepAspectRatio = !0, this.aspectRatio = 1, typeof e == \"number\" ? this.height = e * 2 : this.height = `${Number(e.replace(\"%\", \"\")) * 2}%`;\n  }\n  get name() {\n    return \"Circle\";\n  }\n  /**\n   * Access to the html document that\n   * will be rendered to the canvas\n   */\n  render(e) {\n    const { width: i, height: s } = this.size;\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * i,\n        y: -this.anchor.y * s\n      }\n    }).circle({\n      cx: i * 0.5,\n      cy: s * 0.5,\n      width: i * 0.5,\n      height: s * 0.5\n    }).fill(this.fill ? { color: this.fill } : void 0, !0).stroke(this.stroke, !0).restore();\n  }\n}\nvar Cl = Object.defineProperty, _l = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Cl(e, i, r), r;\n};\nclass ta extends Ht {\n  type = \"rectangle\";\n  animations = [];\n  radius;\n  constructor(e = {}) {\n    super(), Object.assign(this, e);\n  }\n  get name() {\n    return \"Rectangle\";\n  }\n  /**\n   * Access to the html document that\n   * will be rendered to the canvas\n   */\n  render(e) {\n    const { width: i, height: s } = this.size;\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * i,\n        y: -this.anchor.y * s\n      }\n    }).rect({\n      width: i,\n      height: s,\n      radius: this.radius\n    }).fill(this.fill ? { color: this.fill } : void 0, !0).stroke(this.stroke, !0).restore();\n  }\n}\n_l([\n  v()\n], ta.prototype, \"radius\");\nclass Il extends et(pe) {\n  type = \"waveform\";\n  animations = [];\n  sampleRate = 8e3;\n  fill = { color: \"#FFFFFF\" };\n  bar = { width: 28, gap: 26, radius: 14 };\n  smoothing = 0.4;\n  magnitude = 1;\n  barHeights = [];\n  channelData;\n  time = new E(0, 0);\n  constructor(e, i = {}) {\n    super(), e instanceof Ze ? this.source = e : this.input = e, this.height = 700, this.width = \"90%\", Object.assign(this, i);\n  }\n  async init() {\n    if (this.input && !this.source && (this.source = await Oe.from(this.input)), !this.source?.duration)\n      throw new ee({\n        message: \"Could not find audio source\",\n        code: \"no_audio_source\"\n      });\n    (this.range[1].millis > this.source.duration.millis || this.range[1].millis === 0) && (this.range[1] = this.source.duration);\n    const e = await this.source.decode(1, this.sampleRate, !0);\n    this.channelData = e.getChannelData(0);\n  }\n  async enter() {\n  }\n  async update(e) {\n    this.time = new E(0, e.playbackTime).subtract(this.delay);\n  }\n  async render(e) {\n    if (!this.channelData) return;\n    this.updateBarHeights(e);\n    const i = _(this.height, e.height), s = _(this.width, e.width), r = Math.floor(s / (this.bar.width + this.bar.gap));\n    e.save().blendMode(this.blendMode).clip(this.mask).filter(this.filter).opacity(this.opacity).transform({ translate: this }).transform({\n      translate: this.translate,\n      rotate: this.rotation,\n      scale: this.scale\n    }).transform({\n      translate: {\n        x: -this.anchor.x * s,\n        y: -this.anchor.y * i\n      }\n    });\n    const a = [];\n    for (let n = 0; n < r; n++) {\n      const o = this.time.millis - n * (1e3 / this.sampleRate), c = Math.floor(o * this.sampleRate / 1e3), l = c >= 0 && c < this.channelData.length ? this.channelData[c] : 0, d = Math.abs(l) * i, h = (this.barHeights[n] * this.smoothing + d * (1 - this.smoothing)) * this.magnitude;\n      a.push(h);\n      const u = n * (this.bar.width + this.bar.gap);\n      e.rect({\n        x: u,\n        y: (i - h) * this.anchor.y,\n        width: this.bar.width,\n        height: h,\n        radius: this.bar.radius\n      }).fill(this.fill, !0);\n    }\n    this.barHeights = a, e.restore();\n  }\n  updateBarHeights(e) {\n    const i = _(this.width, e.width), s = Math.floor(i / (this.bar.width + this.bar.gap));\n    this.barHeights.length != s && (this.barHeights = new Array(s).fill(0));\n  }\n}\nconst St = {\n  \"The Bold Font\": {\n    weights: [\"500\"],\n    url: \"https://diffusion-studio-public.s3.eu-central-1.amazonaws.com/fonts/the-bold-font.ttf\"\n  },\n  \"Komika Axis\": {\n    weights: [\"400\"],\n    url: \"https://diffusion-studio-public.s3.eu-central-1.amazonaws.com/fonts/komika-axis.ttf\"\n  },\n  Geologica: {\n    weights: [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/geologica/v1/oY1l8evIr7j9P3TN9YwNAdyjzUyDKkKdAGOJh1UlCDUIhAIdhCZOn1fLsig7jfvCCPHZckUWE1lELWNN-w.woff2\"\n  },\n  Nunito: {\n    weights: [\"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/nunito/v26/XRXV3I6Li01BKofINeaBTMnFcQ.woff2\"\n  },\n  Figtree: {\n    weights: [\"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/figtree/v5/_Xms-HUzqDCFdgfMm4S9DaRvzig.woff2\"\n  },\n  Urbanist: {\n    weights: [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/urbanist/v15/L0x-DF02iFML4hGCyMqlbS1miXK2.woff2\"\n  },\n  Montserrat: {\n    weights: [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/montserrat/v26/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2\"\n  },\n  Bangers: {\n    weights: [\"400\"],\n    url: \"https://fonts.gstatic.com/s/bangers/v20/FeVQS0BTqb0h60ACH55Q2J5hm24.woff2\"\n  },\n  Chewy: {\n    weights: [\"400\"],\n    url: \"https://fonts.gstatic.com/s/chewy/v18/uK_94ruUb-k-wn52KjI9OPec.woff2\"\n  },\n  \"Source Code Pro\": {\n    weights: [\"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n    url: \"https://fonts.gstatic.com/s/sourcecodepro/v22/HI_SiYsKILxRpg3hIP6sJ7fM7PqlPevWnsUnxg.woff2\"\n  }\n}, xd = [\n  \"Helvetica\",\n  \"Arial\",\n  \"Arial Black\",\n  \"Verdana\",\n  \"Tahoma\",\n  \"Trebuchet MS\",\n  \"Impact\",\n  \"Gill Sans\",\n  \"Times New Roman\",\n  \"Georgia\",\n  \"Palatino\",\n  \"Baskerville\",\n  \"Andal\u00E9 Mono\",\n  \"Courier\",\n  \"Lucida\",\n  \"Monaco\",\n  \"Bradley Hand\",\n  \"Brush Script MT\",\n  \"Luminari\",\n  \"Comic Sans MS\"\n], Cd = {\n  100: \"Thin\",\n  200: \"Extra Light\",\n  300: \"Light\",\n  400: \"Normal\",\n  500: \"Medium\",\n  600: \"Semi Bold\",\n  700: \"Bold\",\n  800: \"Extra Bold\",\n  900: \"Black\"\n};\nfunction El(t) {\n  return `${t}`.match(/oblique/i) ? \"oblique\" : `${t}`.match(/italic/i) ? \"italic\" : \"normal\";\n}\nfunction Pl(t) {\n  return `${t}`.match(/black|heavy/i) ? \"900\" : `${t}`.match(/extrabold|ultrabold/i) ? \"800\" : `${t}`.match(/bold|strong/i) ? \"700\" : `${t}`.match(/semibold|demibold/i) ? \"600\" : `${t}`.match(/medium/i) ? \"500\" : `${t}`.match(/normal|regular|book/i) ? \"400\" : `${t}`.match(/light/i) ? \"300\" : `${t}`.match(/extralight|ultralight/i) ? \"200\" : `${t}`.match(/thin|hairline/i) ? \"100\" : \"400\";\n}\nvar Fl = Object.defineProperty, Rl = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && Fl(e, i, r), r;\n};\nconst ia = class xi extends Te {\n  loadedFonts = [];\n  /**\n   * Load the font that has been initiated via the constructor\n   */\n  async load(e) {\n    let i = \"\", s = 16, r = \"normal\";\n    const a = e.weight ?? \"400\", n = e.family;\n    \"source\" in e ? e.source.startsWith(\"https://\") ? i = `url(${e.source})` : i = e.source : i = `url(${St[e.family].url})`, \"size\" in e && e.size !== void 0 && (s = e.size), \"style\" in e && e.style !== void 0 && (r = e.style);\n    const o = new FontFace(n, i, { weight: a, style: r });\n    await new Promise((l, d) => {\n      o.load().then((h) => {\n        document.fonts.add(h), l(null);\n      }).catch((h) => {\n        d(h);\n      });\n    });\n    const c = {\n      source: i,\n      family: n,\n      weight: a,\n      style: r,\n      size: s\n    };\n    return this.loadedFonts.some((l) => l.source === c.source) || this.loadedFonts.push(c), c;\n  }\n  /**\n   * Reload all fonts\n   * @deprecated Use restoreCheckpoint instead\n   */\n  async reload() {\n    for (const e of this.loadedFonts)\n      await this.load(e);\n  }\n  /**\n   * Get all available local fonts, requires the\n   * **Local Font Access API**\n   */\n  static async localFonts() {\n    const e = {};\n    \"queryLocalFonts\" in window || Object.assign(window, { queryLocalFonts: () => [] });\n    for (const i of await window.queryLocalFonts()) {\n      if (i.family in e) {\n        e[i.family].push(i);\n        continue;\n      }\n      e[i.family] = [i];\n    }\n    return Object.keys(e).map((i) => ({\n      family: i,\n      variants: e[i].map((s) => ({\n        family: i,\n        style: El(s.style),\n        weight: Pl(s.fullName),\n        source: `local('${s.fullName}'), local('${s.postscriptName}')`\n      }))\n    }));\n  }\n  /**\n   * Get common web fonts\n   */\n  static webFonts() {\n    return Object.keys(St).map((e) => ({\n      family: e,\n      variants: St[e].weights.map((i) => ({\n        family: e,\n        source: `url(${St[e].url})`,\n        weight: i\n      }))\n    }));\n  }\n  static async load(e) {\n    return await new xi().load(e);\n  }\n  copy() {\n    return xi.fromJSON(this.toJSON());\n  }\n  /**\n   * Create a checkpoint of the current font manager state\n   */\n  async createCheckpoint() {\n    return this.toJSON();\n  }\n  /**\n   * Restore the font manager state from a checkpoint\n   * @param checkpoint - The checkpoint to restore from\n   */\n  async restoreCheckpoint(e) {\n    B(typeof e == \"object\"), B(e != null), B(\"loadedFonts\" in e), B(Array.isArray(e.loadedFonts)), this.fromJSON(e);\n    for (const i of this.loadedFonts)\n      await this.load(i);\n  }\n};\nRl([\n  v()\n], ia.prototype, \"loadedFonts\");\nlet ge = ia;\nclass Ce {\n  /**\n   * This function returns the position of the captions\n   */\n  position;\n  constructor(e = {}) {\n    this.position = {\n      x: e.position?.x ?? \"50%\",\n      y: e.position?.y ?? \"50%\"\n    };\n  }\n  /**\n   * This function syncs the timestamp of the captions to the audio clip\n   * @param layer - The layer to sync\n   * @param clip - The audio clip to sync to\n   */\n  sync(e, i) {\n    return i.on(\"offset\", (s) => {\n      e.offset(s.detail);\n    }), this;\n  }\n  /**\n   * This function creates the captions\n   * @param layer - The layer to apply the settings to\n   * @param transcript - The transcript to apply the settings to\n   * @param offset - The offset of the captions\n   */\n  async apply(e, i, s) {\n  }\n}\nclass Bl extends Ce {\n  generatorOptions;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { duration: [0.2] };\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Figtree\",\n      weight: \"700\",\n      size: 27\n    });\n    for (const a of i.iter(this.generatorOptions))\n      await e.add(\n        new L({\n          text: a.words.map((n) => n.text).join(\" \"),\n          align: \"center\",\n          baseline: \"middle\",\n          color: \"#FFFFFF\",\n          font: r,\n          stroke: {\n            color: \"#000000\",\n            width: 6,\n            lineJoin: \"round\",\n            lineCap: \"round\"\n          },\n          shadow: {\n            color: \"#000000\",\n            blur: 0,\n            offsetX: 2.4,\n            offsetY: 3,\n            opacity: 100\n          },\n          position: this.position,\n          delay: a.start.add(s),\n          duration: a.duration,\n          animations: [{\n            key: \"scale\",\n            easing: \"ease-out\",\n            frames: [{\n              value: 0.94,\n              time: 0\n            }, {\n              value: 1,\n              time: 8\n            }]\n          }, {\n            key: \"opacity\",\n            easing: \"ease-out\",\n            frames: [{\n              value: 0,\n              time: 0\n            }, {\n              value: 100,\n              time: 4\n            }]\n          }]\n        })\n      );\n  }\n}\nclass _d extends Ce {\n  generatorOptions;\n  color;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { duration: [0.2] }, this.color = e.color ?? \"#00FF4C\";\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"The Bold Font\",\n      weight: \"500\",\n      size: 28\n    });\n    for (const a of i.iter(this.generatorOptions))\n      for (let n = 0; n < a.words.length; n++) {\n        const o = a.words.map((c) => c.text);\n        await e.add(\n          new L({\n            text: o.join(\" \"),\n            align: \"center\",\n            baseline: \"middle\",\n            color: \"#FFFFFF\",\n            maxWidth: \"80%\",\n            font: r,\n            stroke: {\n              width: 4,\n              color: \"#000000\"\n            },\n            shadow: [\n              {\n                color: \"#000000\",\n                blur: 9,\n                opacity: 100,\n                offsetX: 0,\n                offsetY: 0\n              },\n              {\n                color: \"#000000\",\n                blur: 13,\n                opacity: 100,\n                offsetX: 3,\n                offsetY: 3\n              },\n              {\n                color: \"#000000\",\n                blur: 18,\n                opacity: 100,\n                offsetX: 3,\n                offsetY: 3\n              },\n              {\n                color: \"#000000\",\n                blur: 25,\n                opacity: 100,\n                offsetX: 3,\n                offsetY: 3\n              }\n            ],\n            glow: {\n              radius: 20,\n              intensity: 2,\n              opacity: 50\n            },\n            position: this.position,\n            styles: a.words.length > 1 ? [{\n              style: { color: this.color },\n              start: o.slice(0, n).join(\" \").length,\n              stop: o.slice(0, n + 1).join(\" \").length\n            }] : void 0,\n            duration: a.words[n].duration,\n            delay: a.words[n].start.add(s)\n          })\n        );\n      }\n  }\n}\nclass Id extends Ce {\n  colors;\n  constructor(e = {}) {\n    super(e), this.colors = e.colors ?? [\"#1BD724\", \"#FFEE0C\", \"#FF2E17\"];\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"The Bold Font\",\n      weight: \"500\",\n      size: 26\n    });\n    for (const a of i.iter({ length: [18] })) {\n      const { segments: n, words: o } = this.splitSequence(a);\n      for (let c = 0; c < a.words.length; c++) {\n        const l = o[c]?.at(0)?.start, d = o[c]?.at(-1)?.stop;\n        !l || !d || await e.add(\n          new L({\n            text: n.join(`\n`),\n            align: \"center\",\n            baseline: \"middle\",\n            color: \"#FFFFFF\",\n            shadow: Array.from({ length: 4 }).map(() => ({\n              color: \"#000000\",\n              blur: 40,\n              opacity: 80\n            })),\n            stroke: {\n              width: 6,\n              color: \"#000000\"\n            },\n            glow: {\n              radius: 30,\n              opacity: 60\n            },\n            maxWidth: \"90%\",\n            font: r,\n            casing: \"upper\",\n            position: this.position,\n            duration: d.subtract(l),\n            delay: l.add(s),\n            styles: [{\n              start: n.slice(0, c).join(\" \").length,\n              stop: n.slice(0, c + 1).join(\" \").length,\n              style: {\n                fontSize: 30,\n                color: this.colors[vt(0, 2)]\n              }\n            }]\n          })\n        );\n      }\n    }\n  }\n  splitSequence(e) {\n    const i = e.text, s = Math.ceil(i.length / 2);\n    let r = i.length;\n    for (let o = s, c = s; o > 0 && c < e.text.length - 1; o--, c++) {\n      if (i[o].match(/ /)) {\n        r = o;\n        break;\n      }\n      if (i[c].match(/ /)) {\n        r = c;\n        break;\n      }\n    }\n    const a = [...Ct(i, r).map((o) => o.trim())], n = Ct(e.words, a[0].split(/ /).length);\n    return { segments: a, words: n };\n  }\n}\nclass Ed extends Ce {\n  constructor(e = {}) {\n    super(e);\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Montserrat\",\n      weight: \"300\",\n      size: 18\n    }), a = await ge.load({\n      family: \"Montserrat\",\n      weight: \"600\",\n      size: 18\n    });\n    for (const n of i.iter({ length: [18] })) {\n      const { segments: o, words: c } = this.splitSequence(n);\n      for (let l = 0; l < n.words.length; l++) {\n        const d = c[l]?.at(0)?.start, h = c[l]?.at(-1)?.stop;\n        !d || !h || await e.add(\n          new L({\n            text: o.join(`\n`),\n            align: \"center\",\n            baseline: \"middle\",\n            color: \"#FFFFFF\",\n            shadow: {\n              color: \"#000000\",\n              blur: 7,\n              opacity: 90,\n              offsetX: 2,\n              offsetY: 2\n            },\n            maxWidth: \"90%\",\n            font: r,\n            leading: 0.9,\n            position: this.position,\n            duration: h.subtract(d),\n            delay: d.add(s),\n            styles: [{\n              start: o.slice(0, l).join(\" \").length,\n              stop: o.slice(0, l + 1).join(\" \").length,\n              style: {\n                font: a\n              }\n            }]\n          })\n        );\n      }\n    }\n  }\n  splitSequence(e) {\n    const i = e.text, s = Math.ceil(i.length / 2);\n    let r = i.length;\n    for (let o = s, c = s; o > 0 && c < e.text.length - 1; o--, c++) {\n      if (i[o].match(/ /)) {\n        r = o;\n        break;\n      }\n      if (i[c].match(/ /)) {\n        r = c;\n        break;\n      }\n    }\n    const a = [...Ct(i, r).map((o) => o.trim())], n = Ct(e.words, a[0].split(/ /).length);\n    return { segments: a, words: n };\n  }\n}\nclass Pd extends Ce {\n  generatorOptions;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { duration: [1.4] }, this.position = e.position ?? { x: \"12%\", y: \"44%\" };\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Geologica\",\n      weight: \"400\",\n      size: 20\n    });\n    for (const a of i.iter(this.generatorOptions))\n      for (let n = 0; n < a.words.length; n++) {\n        const o = () => a.words.length == 1 ? a.text : a.words.map((l) => l.text).slice(0, n + 1).join(\" \");\n        await e.add(\n          new L({\n            text: o(),\n            position: this.position,\n            align: \"left\",\n            baseline: \"top\",\n            color: \"#FFFFFF\",\n            font: r,\n            maxWidth: \"70%\",\n            leading: 1.4,\n            stroke: {\n              color: \"#000000\",\n              width: 4,\n              lineJoin: \"round\"\n            },\n            shadow: {\n              color: \"#000000\",\n              blur: 3,\n              opacity: 80,\n              offsetX: 1.25,\n              offsetY: 1.25\n            },\n            delay: a.words[n].start.add(s),\n            duration: a.words[n].duration\n          })\n        );\n      }\n  }\n}\nclass Fd extends Ce {\n  generatorOptions;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { duration: [0.2] };\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Urbanist\",\n      weight: \"800\",\n      size: 24\n    });\n    for (const a of i.iter(this.generatorOptions))\n      await e.add(\n        new L({\n          text: a.words.map((n) => n.text).join(\" \"),\n          align: \"center\",\n          baseline: \"middle\",\n          color: \"#fffe41\",\n          font: r,\n          casing: \"upper\",\n          shadow: [\n            {\n              color: \"#ab7a00\",\n              blur: 0,\n              offsetX: 6,\n              offsetY: 3,\n              opacity: 100\n            },\n            {\n              color: \"#ab7a00\",\n              blur: 0,\n              offsetX: 4,\n              offsetY: 2,\n              opacity: 100\n            },\n            {\n              color: \"#ab7a00\",\n              blur: 0,\n              offsetX: 2,\n              offsetY: 1,\n              opacity: 100\n            }\n          ],\n          stroke: {\n            color: \"#ab7a00\",\n            width: 1\n          },\n          glow: {\n            radius: 40,\n            intensity: 2,\n            opacity: 80\n          },\n          position: this.position,\n          duration: a.duration,\n          delay: a.start.add(s),\n          animations: [{\n            key: \"scale\",\n            easing: \"ease-out\",\n            frames: [{\n              value: 0.94,\n              time: 0\n            }, {\n              value: 1,\n              time: 8\n            }]\n          }, {\n            key: \"opacity\",\n            easing: \"ease-out\",\n            frames: [{\n              value: 0,\n              time: 0\n            }, {\n              value: 100,\n              time: 4\n            }]\n          }]\n        })\n      );\n  }\n}\nclass Rd extends Ce {\n  generatorOptions;\n  color;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { length: [20] }, this.color = e.color ?? \"#c4c4c4\";\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Montserrat\",\n      weight: \"400\",\n      size: 16\n    });\n    for (const a of i.iter(this.generatorOptions))\n      for (let n = 0; n < a.words.length; n++) {\n        const o = a.words.map((c) => c.text);\n        await e.add(\n          new L({\n            text: o.join(\" \"),\n            align: \"center\",\n            baseline: \"middle\",\n            color: \"#FFFFFF\",\n            background: {\n              opacity: 50,\n              padding: {\n                x: 30,\n                y: 20\n              }\n            },\n            maxWidth: \"80%\",\n            leading: 1.4,\n            font: r,\n            position: this.position,\n            styles: o.length > 1 ? [{\n              style: { color: this.color },\n              start: o.slice(0, n + 1).join(\" \").length\n            }] : void 0,\n            duration: a.words[n].duration,\n            delay: a.words[n].start.add(s),\n            animations: n == 0 ? [{\n              key: \"opacity\",\n              easing: \"ease-in-out\",\n              frames: [\n                {\n                  time: 0,\n                  value: 0\n                },\n                {\n                  time: \"0.05s\",\n                  value: 100\n                }\n              ]\n            }, {\n              key: \"translateY\",\n              easing: \"ease-in-out\",\n              frames: [\n                {\n                  time: 0,\n                  value: 30\n                },\n                {\n                  time: \"0.05s\",\n                  value: 0\n                }\n              ]\n            }] : []\n          })\n        );\n      }\n  }\n}\nclass Bd extends Ce {\n  generatorOptions;\n  color;\n  constructor(e = {}) {\n    super(e), this.generatorOptions = e.generatorOptions ?? { count: [5] }, this.color = e.color ?? \"#42f5ad\";\n  }\n  async apply(e, i, s) {\n    const r = await ge.load({\n      family: \"Montserrat\",\n      weight: \"700\",\n      size: 19\n    });\n    for (const a of i.iter(this.generatorOptions))\n      for (let n = 0; n < a.words.length; n++) {\n        const o = a.words.map((c) => c.text);\n        await e.add(\n          new L({\n            text: o.join(\" \"),\n            align: \"center\",\n            baseline: \"alphabetic\",\n            color: \"#FFFFFF\",\n            casing: \"upper\",\n            shadow: {\n              color: \"#000000\",\n              blur: 8,\n              opacity: 90,\n              offsetX: 4,\n              offsetY: 4\n            },\n            stroke: {\n              width: 5,\n              color: \"#000000\"\n            },\n            maxWidth: \"90%\",\n            glow: {\n              radius: 10,\n              intensity: 1,\n              opacity: 60\n            },\n            font: r,\n            styles: [{\n              style: {\n                color: this.color,\n                fontSize: 24\n              },\n              start: o.slice(0, n).join(\" \").length,\n              stop: o.slice(0, n + 1).join(\" \").length\n            }],\n            position: this.position,\n            duration: a.words[n].duration,\n            delay: a.words[n].start.add(s)\n          })\n        );\n      }\n  }\n}\nconst sa = [\"DEFAULT\", \"SEQUENTIAL\"];\nclass Ci {\n  mode = sa[0];\n  pauseEvents = !1;\n  add(e, i) {\n    if (!this.pauseEvents)\n      try {\n        this.pauseEvents = !0;\n        let s = !0;\n        for (let r = 0; r < i.clips.length && (s = Vs(e, i.clips[r]), !!s); r++)\n          Ns(e, i.clips[r]);\n        s && (i.clips.push(e), i.clips.sort(Ds));\n      } finally {\n        this.pauseEvents = !1;\n      }\n  }\n  update(e, i) {\n    if (!this.pauseEvents)\n      try {\n        this.pauseEvents = !0, i.clips.sort(Ds);\n        for (let s = 0; s < i.clips.length; s++)\n          if (e.id != i.clips[s].id) {\n            if (!Vs(e, i.clips[s]))\n              break;\n            Ns(e, i.clips[s]);\n          }\n      } finally {\n        this.pauseEvents = !1;\n      }\n  }\n  offset(e, i) {\n    if (!this.pauseEvents)\n      try {\n        this.pauseEvents = !0;\n        for (const s of i.clips)\n          s.offset(e);\n      } finally {\n        this.pauseEvents = !1;\n      }\n  }\n  toJSON() {\n    return this.mode;\n  }\n}\nclass ra {\n  mode = sa[1];\n  add(e, i, s = void 0) {\n    let r = -1;\n    (s != null && s > 0 || s == null) && (r = i.clips.at((s ?? 0) - 1)?.stop.millis ?? -1), e.offset(new E(r - e.start.millis + 1)), s == null ? i.clips.push(e) : (i.clips.splice(s, 0, e), i.clips.slice(s + 1).forEach((a) => {\n      a.offset(e.stop.subtract(e.start));\n    }));\n  }\n  update(e, i) {\n    let s = 0;\n    for (const r of i.clips) {\n      if (r.start.millis != s) {\n        const a = s - r.start.millis;\n        r.offset(new E(a));\n      }\n      s = r.stop.millis + 1;\n    }\n  }\n  offset() {\n  }\n  toJSON() {\n    return this.mode;\n  }\n}\nfunction Ds(t, e) {\n  return t.start.millis - e.start.millis;\n}\nfunction Ns(t, e) {\n  t.start.millis >= e.start.millis && t.start.millis <= e.stop.millis && t.trim(e.stop.copy().addMillis(1), t.stop.copy()), t.stop.millis >= e.start.millis && t.stop.millis <= e.stop.millis && t.trim(t.start.copy(), e.start.copy().addMillis(-1));\n}\nfunction Vs(t, e) {\n  if (t.start.millis >= e.start.millis && t.stop.millis <= e.stop.millis) {\n    const i = e.layer?.composition?.layers.find((s) => s.type == t.type && !s.clips.some((r) => t.id != r.id && t.start.millis >= r.start.millis && t.stop.millis <= r.stop.millis));\n    return i ? i.add(t.detach()) : e.layer?.composition?.add(t.detach()), !1;\n  }\n  return !0;\n}\nfunction aa(t, e) {\n  B(t.transition);\n  const i = Math.max(\n    Math.floor((t.stop.millis + e.start.millis) / 2),\n    t.stop.millis\n    // The midpoint cannot go before the end of the first clip\n  );\n  return new E(i);\n}\nfunction Ls(t, e) {\n  const i = aa(t, e), s = O(t.transition?.duration ?? new E(1e3));\n  return i.millis -= s.millis / 2, i;\n}\nfunction Ol(t, e) {\n  const i = aa(t, e), s = O(t.transition?.duration ?? new E(1e3));\n  return i.millis += s.millis / 2, i;\n}\nfunction Ml(t, e, i, s) {\n  switch (B(t.transition), t.transition.type) {\n    case \"slide-from-right\":\n      t.render(s), s.save(), s.transform({\n        translate: {\n          x: (1 - i) ** 2 * s.width,\n          y: 0\n        }\n      }), e.render(s), s.restore();\n      break;\n    case \"slide-from-left\":\n      t.render(s), s.save(), s.transform({\n        translate: {\n          x: (1 - i) ** 2 * s.width * -1,\n          y: 0\n        }\n      }), e.render(s), s.restore();\n      break;\n    case \"fade-to-black\":\n      i < 0.5 ? t.render(s) : e.render(s), s.save(), s.rect({\n        x: 0,\n        y: 0,\n        width: s.width,\n        height: s.height\n      }), s.opacity(100 * (i < 0.5 ? 2 * i : 2 * (1 - i))), s.fill({\n        color: \"#000000\"\n      }, !0), s.restore();\n      break;\n    case \"fade-to-white\":\n      i < 0.5 ? t.render(s) : e.render(s), s.save(), s.rect({\n        x: 0,\n        y: 0,\n        width: s.width,\n        height: s.height\n      }), s.opacity(100 * (i < 0.5 ? 2 * i : 2 * (1 - i))), s.fill({\n        color: \"#FFFFFF\"\n      }, !0), s.restore();\n      break;\n    default:\n      t.render(s), s.save(), s.opacity(100 * i), e.render(s), s.restore();\n      break;\n  }\n}\nconst Al = {\n  fromJSON: (t) => (B(typeof t == \"string\"), t == \"SEQUENTIAL\" ? new ra() : new Ci())\n};\nvar zl = Object.defineProperty, Me = (t, e, i, s) => {\n  for (var r = void 0, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = n(e, i, r) || r);\n  return r && zl(e, i, r), r;\n};\nclass _e extends dt(Te) {\n  id = crypto.randomUUID();\n  data = {};\n  primary = !1;\n  disabled = !1;\n  clips = [];\n  /**\n   * Reference to the composition\n   */\n  composition;\n  strategy = new Ci();\n  createdAt = /* @__PURE__ */ new Date();\n  /**\n   * Id of the clips in the layer\n   */\n  get type() {\n    return this.clips[0]?.type ?? \"base\";\n  }\n  /**\n   * The index of the clip that should be rendered\n   */\n  currentMainClipIndex = -1;\n  /**\n   * Tracks the clips that are currently visible. In the case of transitions, this can be more than one clip at a time.\n   */\n  visibleClips = /* @__PURE__ */ new Set();\n  /**\n   * Connect the layer with the composition\n   */\n  connect(e) {\n    this.composition = e, this.bubble(e);\n    for (const i of this.clips)\n      if (!i.initialized)\n        return i.init(e.audio).then(() => (i.initialized = !0, this));\n    return this;\n  }\n  /**\n   * Applies the stack property\n   */\n  sequential(e = !0) {\n    return e ? (this.strategy = new ra(), this.strategy.update(new $(), this)) : this.strategy = new Ci(), this.emit(\"update\", void 0), this;\n  }\n  /**\n   * Change the index of the layer\n   */\n  index(e) {\n    const i = this.composition?.layers ?? [], s = i.findIndex((n) => n.id == this.id), r = i.length - 1;\n    if (s == -1) return this;\n    let a = 0;\n    return e == \"bottom\" ? a = r : e == \"top\" || e < 0 ? a = 0 : e > r ? a = r : a = e, la(i, s, a), this.emit(\"update\", void 0), this;\n  }\n  /**\n   * Seek the provided time if the layer contains\n   * audio or video clips. Will await the promise \n   * otherwise will resolve immediately\n   */\n  async seek(e) {\n    for (const i of this.clips)\n      await i.seek(e);\n  }\n  /**\n   * Seek the provided time if the layer contains\n   * audio or video clips. Will await the promise \n   * otherwise will resolve immediately\n   */\n  async play(e) {\n    for (const i of this.clips)\n      await i.play(e);\n  }\n  /**\n   * Seek the provided time if the layer contains\n   * audio or video clips. Will await the promise \n   * otherwise will resolve immediately\n   */\n  async pause(e) {\n    for (const i of this.clips)\n      await i.pause(e);\n  }\n  /**\n   * Move all clips of the layer at once along the timeline\n   */\n  offset(e) {\n    return this.strategy.offset(O(e), this), this;\n  }\n  /**\n   * Triggered when the layer is redrawn, manages\n   * the clip's lifecycle\n   */\n  async update(e) {\n    const i = e.playbackTimestamp;\n    if (this.disabled) {\n      for (const o of this.visibleClips)\n        await o.exit(e);\n      this.visibleClips.clear();\n      return;\n    }\n    let s, r, a = -1;\n    for (let o = 0; o < this.clips.length; o++) {\n      const c = this.clips[o], l = this.clips[o + 1];\n      if (c.disabled)\n        continue;\n      const d = c.start;\n      let h = c.transition && l ? Ol(c, l) : c.stop;\n      if (d.millis <= i.millis && i.millis <= h.millis) {\n        s = c, a = o, r = l;\n        break;\n      }\n    }\n    const n = /* @__PURE__ */ new Set();\n    s && (n.add(s), s.transition && r && i.millis >= Ls(s, r).millis && n.add(r));\n    for (const o of this.visibleClips)\n      n.has(o) || await o.exit(e);\n    for (const o of n)\n      this.visibleClips.has(o) || await o.enter(e);\n    this.currentMainClipIndex = a, this.visibleClips = n;\n    for (const o of n)\n      o.animate(i), await o.update(e);\n  }\n  render(e, i) {\n    if (this.currentMainClipIndex === -1 || this.disabled)\n      return;\n    const s = e.playbackTimestamp, r = this.clips[this.currentMainClipIndex], a = this.clips[this.currentMainClipIndex + 1];\n    if (r.transition && a) {\n      const n = Ls(r, a).millis, o = s.millis >= n, c = O(r.transition?.duration ?? new E(1e3)), l = da((s.millis - n) / c.millis, 0, 1);\n      if (o) {\n        Ml(r, a, l, i);\n        return;\n      }\n    }\n    r.render(i);\n  }\n  /**\n   * Adds a new clip to the layer. Calls update after adding the clip.\n   * @param clip The clip to add\n   * @param index The index to insert the clip at, will be ignored if layer is not stacked\n   * @throws Error if the clip can't be added\n   */\n  async add(e, i) {\n    if (this.clips[0] && this.clips[0].type != e.type)\n      throw new ee({\n        code: \"layer_type_mismatch\",\n        message: \"Layer can only contain clips of the same type\"\n      });\n    return !e.initialized && this.composition?.audio && (await e.init(this.composition.audio), e.initialized = !0), await e.connect(this), this.strategy.add(e, this, i), e.on(\"frame\", () => {\n      this.strategy.update(e, this);\n    }), e.bubble(this), this.emit(\"attach\", void 0), this.composition?.update(), e;\n  }\n  /**\n   * Remove a given clip from the layer. Calls update after removing the clip.\n   * @returns `Layer` when it has been successfully removed `undefined` otherwise\n   */\n  remove(e) {\n    const i = this.clips.findIndex((s) => s.id == e.id);\n    if (i != null && i >= 0)\n      return this.clips.splice(i, 1), this.strategy.update(e, this), this.emit(\"detach\", void 0), e.cleanup(), this.composition?.update(), e;\n  }\n  /**\n   * Get the first visible frame of the clip\n   */\n  get stop() {\n    return this.clips.at(-1)?.stop ?? new E();\n  }\n  /**\n   * Get the last visible frame of the clip\n   */\n  get start() {\n    return this.clips.at(0)?.start ?? new E();\n  }\n  /**\n   * Remove the layer from the composition\n   */\n  detach() {\n    return this.composition?.removeLayer(this), this;\n  }\n  /**\n   * Remove all clips from the layer\n   */\n  clear() {\n    for (const e of this.clips)\n      e.off(\"*\");\n    this.clips = [];\n  }\n  _resetInternalState() {\n    this.visibleClips.clear(), this.currentMainClipIndex = -1;\n  }\n  /**\n   * Create a checkpoint of the layer. May include Blobs.\n   * @returns A serialized representation of the layer\n   */\n  async createCheckpoint() {\n    return this.toJSON();\n  }\n  /**\n   * Restore a checkpoint of the layer.\n   * @param checkpoint The checkpoint to restore\n   * @param sources The sources to use for the restoration\n   * @returns The restored layer\n   */\n  async restoreCheckpoint(e, i) {\n    B(typeof e == \"object\"), B(e != null), B(\"clips\" in e), B(Array.isArray(e.clips));\n    const { clips: s, ...r } = e;\n    this.fromJSON(r);\n    for (const [a, n] of s.entries()) {\n      if (B(typeof n == \"object\"), B(n != null), B(\"id\" in n), n.id == this.clips.at(a)?.id) {\n        await this.clips[a].restoreCheckpoint(n, i);\n        continue;\n      }\n      this.clips.at(a) && this.remove(this.clips[a]);\n      try {\n        const o = Jc.fromType(n);\n        await o.restoreCheckpoint(n, i), await this.add(o, a);\n      } catch (o) {\n        this.emit(\"error\", new Error(`Failed to restore clip ${n.id}: ${o}`));\n      }\n    }\n    if (this.clips.length > s.length)\n      for (const a of this.clips.slice(s.length))\n        this.remove(a);\n    return this;\n  }\n}\nMe([\n  v()\n], _e.prototype, \"id\");\nMe([\n  v()\n], _e.prototype, \"data\");\nMe([\n  v()\n], _e.prototype, \"primary\");\nMe([\n  v()\n], _e.prototype, \"disabled\");\nMe([\n  v()\n], _e.prototype, \"clips\");\nMe([\n  v(Al)\n], _e.prototype, \"strategy\");\nMe([\n  v(Ot)\n], _e.prototype, \"createdAt\");\nvar Ul = Object.defineProperty, Dl = Object.getOwnPropertyDescriptor, Ae = (t, e, i, s) => {\n  for (var r = s > 1 ? void 0 : s ? Dl(e, i) : e, a = t.length - 1, n; a >= 0; a--)\n    (n = t[a]) && (r = (s ? n(e, i, r) : n(r)) || r);\n  return s && r && Ul(e, i, r), r;\n};\nclass ze extends dt(Te) {\n  id = crypto.randomUUID();\n  /**\n   * Access the video renderer\n   */\n  video = new Xe();\n  /**\n   * Access the audio renderer. Will drive the playback of the composition\n   */\n  audio = new Qs({ callback: this.update.bind(this) });\n  layers = [];\n  playbackEndBehavior = \"stop\";\n  markers = {\n    start: new E()\n  };\n  createdAt = /* @__PURE__ */ new Date();\n  data = {};\n  constructor({\n    height: e = 1080,\n    width: i = 1920,\n    background: s = \"#000000\",\n    playbackEndBehavior: r = \"stop\"\n  } = {}) {\n    super(), this.video.resize(i, e), this.video.background = s, this.playbackEndBehavior = r;\n  }\n  get settings() {\n    return {\n      height: this.video.height,\n      width: this.video.width,\n      background: this.video.background,\n      playbackEndBehavior: this.playbackEndBehavior\n    };\n  }\n  set settings(e) {\n    this.video.background = e.background, this.video.resize(e.width, e.height), this.playbackEndBehavior = e.playbackEndBehavior, this.emit(\"resize\", void 0);\n  }\n  /**\n   * Get the current playback state of the composition\n   */\n  get playing() {\n    return this.audio.playing;\n  }\n  /**\n   * Get the current width of the canvas\n   */\n  get width() {\n    return this.video.width;\n  }\n  /**\n   * Get the current height of the canvas\n   */\n  get height() {\n    return this.video.height;\n  }\n  /**\n   * This is where the playback stops playing\n   */\n  get duration() {\n    return this.markers.stop ? this.markers.stop : Ea(this.layers);\n  }\n  /**\n   * Limit the total duration of the composition\n   */\n  set duration(e) {\n    e ? this.markers.stop = O(e) : delete this.markers.stop, this.emit(\"frame\", this.markers.stop?.frames ?? 0);\n  }\n  /**\n   * Get the currently rendered time of the playback \n   */\n  get playhead() {\n    return this.audio.playbackTimestamp;\n  }\n  /**\n   * Set the currently rendered time of the playback \n   */\n  set playhead(e) {\n    this.audio.playbackOffset = O(e).seconds;\n  }\n  /**\n   * Get all clips in the composition\n   */\n  get clips() {\n    return this.layers.flatMap((e) => e.clips);\n  }\n  /**\n   * Resize the renderer\n   */\n  resize(e, i) {\n    this.video.resize(e, i), this.update(), this.emit(\"resize\", void 0);\n  }\n  /**\n   * Add the renderer to the dom.\n   * This will start the ticker\n   */\n  mount(e) {\n    this.video.mount(e), this.audio.start(), this.emit(\"mount\", void 0);\n  }\n  /**\n   * Remove the renderer from the dom.\n   * This will stop the ticker\n   */\n  unmount() {\n    this.video.unmount(), this.audio.stop(), this.emit(\"unmount\", void 0);\n  }\n  /**\n   * Insert a new layer at the specified index (defaults to 0)\n   * @param Layer The layer to insert\n   * @param index The index to insert at (0 = top layer, default: 0)\n   */\n  async insertLayer(e, i = 0) {\n    return this.layers.splice(\n      Math.max(0, Math.min(i, this.layers.length)),\n      0,\n      await e.connect(this)\n    ), this.emit(\"attach\", void 0), this.update(), e;\n  }\n  /**\n   * Create a layer with the given type\n   * @param type the desired type of the layer\n   * @returns A new layer\n   */\n  createLayer(e = 0) {\n    const i = new _e();\n    return i.connect(this), this.layers.splice(\n      Math.max(0, Math.min(e, this.layers.length)),\n      0,\n      i\n    ), this.emit(\"attach\", void 0), i;\n  }\n  /**\n   * Create captions for the composition\n   * @param source The source to create captions for\n   * @param strategy The strategy to use for creating captions\n   * @returns A new layer with captions\n   */\n  async createCaptions(e, i) {\n    let s = new Bl();\n    typeof i == \"object\" ? s = i : i && (s = new i());\n    const r = this.createLayer();\n    if (e instanceof pe) {\n      if (!e.transcript) throw new ee({\n        code: \"missing_transcript\",\n        message: \"The audio clip does not contain a transcript\"\n      });\n      await s.sync(r, e).apply(r, e.transcript, e.delay);\n    } else\n      await s.apply(r, e, new E());\n    return r;\n  }\n  /**\n   * Convenience function for appending a layer\n   * aswell as the clip to the composition\n   */\n  async add(e) {\n    const i = this.createLayer();\n    if (!Array.isArray(e))\n      return await i.add(e), e;\n    for (const s of e)\n      await i.add(s);\n    return e;\n  }\n  /**\n   * Remove a given clip from the composition\n   * @returns `Clip` when it has been successfully removed `undefined` otherwise\n   */\n  remove(e) {\n    for (const i of this.layers)\n      if (i.clips.find((s) => s.id == e.id))\n        return i.remove(e);\n    this.update();\n  }\n  /**\n   * Compute the currently active frame\n   */\n  async update() {\n    for (let e = this.layers.length - 1; e >= 0; e--)\n      await this.layers[e].update(this.audio);\n    this.video.clear();\n    for (let e = this.layers.length - 1; e >= 0; e--)\n      this.layers[e].render(this.audio, this.video);\n    this.emit(\"currentframe\", this.audio.playbackFrame), this.audio.playbackFrame >= this.duration.frames && this.audio.playing && this.handlePlaybackEnd();\n  }\n  /**\n   * Convenience function to take a screenshot of the current frame\n   */\n  screenshot(e = \"png\", i = 1) {\n    return this.video.canvas.toDataURL(`image/${e}`, i);\n  }\n  /**\n   * Set the playback position to a specific time\n   * @param time new playback time (defaults to 0)\n   */\n  async seek(e = 0) {\n    if (!this.audio.stopped) {\n      this.audio.playing && await this.pause(), this.audio.playbackOffset = Math.max(0, O(e).seconds);\n      for (const i of this.layers)\n        await i.seek(this.audio);\n      await this.update();\n    }\n  }\n  /**\n   * Play the composition\n   * @param time The time to start playing from\n   */\n  async play(e) {\n    (e || this.audio.playbackFrame >= this.duration.frames) && await this.seek(e), await this.audio.play();\n    for (const i of this.layers)\n      await i.play(this.audio);\n    this.emit(\"play\", this.audio.playbackFrame);\n  }\n  /**\n   * Pause the composition\n   */\n  async pause() {\n    await this.audio.pause();\n    for (const e of this.layers)\n      await e.pause(this.audio);\n    this.emit(\"pause\", this.audio.playbackFrame);\n  }\n  /**\n   * Remove all layers and clips from the composition\n   */\n  clear() {\n    for (const e of this.layers)\n      e.off(\"*\");\n    this.layers = [];\n  }\n  /**\n   * Get the current playback time and composition\n   * duration formatted as `00:00 / 00:00` by default.\n   * if **hours** is set the format is `HH:mm:ss` whereas\n   * **milliseconds** will return `mm:ss.SSS`\n   */\n  time(e) {\n    const i = e?.hours ? 11 : 14, s = e?.milliseconds ? 23 : 19;\n    return new Date(this.audio.playbackTime * 1e3).toISOString().slice(i, s) + \" / \" + new Date(this.duration.millis).toISOString().slice(i, s);\n  }\n  /**\n   * Remove a given layer from the composition\n   * @returns `Layer` when it has been successfully removed `undefined` otherwise\n   */\n  removeLayer(e) {\n    const i = this.layers.findIndex((s) => s.id == e.id);\n    if (i != null && i >= 0)\n      return this.layers.splice(i, 1), this.emit(\"detach\", void 0), e.off(\"*\"), e;\n  }\n  /**\n   * Remove multiple layers from the composition\n   * @returns `Layer[]` all removed layers\n   */\n  removeLayers(...e) {\n    return e.map((i) => this.removeLayer(i)).filter(Boolean);\n  }\n  /**\n   * Handle the playback end behavior\n   */\n  async handlePlaybackEnd() {\n    this.playbackEndBehavior == \"loop\" ? (await this.seek(0), await this.play()) : this.playbackEndBehavior == \"reset\" ? await this.seek(0) : await this.pause();\n  }\n  /**\n   * Create a checkpoint of the composition. May include Blobs.\n   * @returns A serialized representation of the composition\n   */\n  async createCheckpoint() {\n    return this.toJSON();\n  }\n  /**\n   * Restore a checkpoint of the composition.\n   * @param checkpoint The checkpoint to restore\n   * @param sources The sources to use for the restoration\n   * @returns The restored composition\n   */\n  async restoreCheckpoint(e, i = []) {\n    B(typeof e == \"object\"), B(e != null), B(\"layers\" in e), B(Array.isArray(e.layers));\n    const { layers: s, ...r } = e;\n    this.fromJSON(r);\n    for (const [a, n] of s.entries()) {\n      if (B(typeof n == \"object\"), B(n != null), B(\"id\" in n), n.id == this.layers.at(a)?.id) {\n        await this.layers[a].restoreCheckpoint(n, i);\n        continue;\n      }\n      this.layers.at(a) && this.removeLayer(this.layers[a]), await this.createLayer(a).restoreCheckpoint(n, i);\n    }\n    return this.layers.length > s.length && this.removeLayers(...this.layers.slice(s.length)), this;\n  }\n}\nAe([\n  v()\n], ze.prototype, \"id\", 2);\nAe([\n  v()\n], ze.prototype, \"layers\", 2);\nAe([\n  v()\n], ze.prototype, \"playbackEndBehavior\", 2);\nAe([\n  v(Ia)\n], ze.prototype, \"markers\", 2);\nAe([\n  v(Ot)\n], ze.prototype, \"createdAt\", 2);\nAe([\n  v()\n], ze.prototype, \"data\", 2);\nAe([\n  v()\n], ze.prototype, \"settings\", 1);\nconst _i = [8e3, 12e3, 16e3, 24e3, 48e3], Nl = \"https://cdn.jsdelivr.net/npm/@diffusionstudio/libopus-wasm@1.0.0/dist/opus.wasm\", Vl = \"https://cdn.jsdelivr.net/npm/@diffusionstudio/libopus-wasm@1.0.0/dist/opus.js\";\nfunction Ll(t, e, i) {\n  const r = ((/* @__PURE__ */ new Date()).getTime() - i) / Wl(t) * (e - t);\n  return { remaining: new Date(r), progress: t, total: e };\n}\nfunction Wl(t) {\n  return t < 1 ? 1 : t;\n}\nfunction Hl(t) {\n  const e = _i;\n  let i = 48e3;\n  for (const s of e)\n    Math.abs(t - s) < Math.abs(t - i) && (i = s);\n  return i;\n}\nclass He {\n  target;\n  fastStart;\n  handle;\n  constructor(e, i, s) {\n    this.target = e, this.fastStart = i, this.handle = s;\n  }\n  static async create(e) {\n    if (typeof e == \"string\" || !e) {\n      const s = new fi();\n      return new He(s, \"in-memory\", e);\n    }\n    if (typeof e == \"function\") {\n      let s = 0;\n      const r = new WritableStream({\n        write(a) {\n          e(a, s), s += a.length;\n        }\n      });\n      return new He(new ei(r), !1, e);\n    }\n    if (e instanceof WritableStream)\n      return new He(new ei(e), !1, e);\n    const i = await e.createWritable();\n    return new He(new ei(i, { chunked: !0 }), !1, e);\n  }\n  async close(e = \"mp4\") {\n    if (this.fastStart === \"in-memory\" && this.target instanceof fi) {\n      if (!this.target.buffer) return;\n      const i = new Blob([this.target.buffer], { type: $l[e] });\n      if (typeof this.handle == \"string\") {\n        await $s(i, this.handle);\n        return;\n      }\n      return i;\n    }\n  }\n}\nconst $l = {\n  mp4: \"video/mp4\",\n  webm: \"video/webm\",\n  ogg: \"audio/ogg\"\n};\nfunction jl(t, e) {\n  const i = new Uint8Array(19);\n  return i[0] = 79, i[1] = 112, i[2] = 117, i[3] = 115, i[4] = 72, i[5] = 101, i[6] = 97, i[7] = 100, i[8] = 1, i[9] = e, i[10] = 0, i[11] = 0, i[12] = t & 255, i[13] = t >> 8 & 255, i[14] = t >> 16 & 255, i[15] = t >> 24 & 255, i[16] = 0, i[17] = 0, i[18] = 0, i;\n}\nclass ql {\n  output;\n  error;\n  config;\n  encoder;\n  opus;\n  meta;\n  /**\n   * Create a new OpusEncoder for encoding pcm to opus\n   * @param init encoder callbacks\n   */\n  constructor(e) {\n    this.output = e.output, this.error = e.error;\n  }\n  /**\n   * Configure the encoder. **Note** these values must match the samples to encode\n   * @param config The sample rate and channel count to use\n   */\n  async configure(e) {\n    const i = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      Vl\n    ), { numberOfChannels: s, sampleRate: r } = this.config = e;\n    if (!_i.includes(r))\n      throw new at({\n        code: \"sampleRateNotSupported\",\n        message: `Unsupported sample rate, supported: ${_i.join()}`\n      });\n    this.opus = await i.default({\n      locateFile(a, n) {\n        return a.endsWith(\".wasm\") ? Nl : n + a;\n      }\n    }), this.encoder = this.opus._opus_encoder_create(r, s, 2048), this.meta = {\n      decoderConfig: {\n        codec: \"opus\",\n        // Extract or create the OpusHead\n        description: jl(r, s).buffer,\n        numberOfChannels: s,\n        sampleRate: r\n      }\n    };\n  }\n  /**\n   * Encode the samples synchronously (this is a blocking event)\n   * @param samples The data to encode\n   */\n  encode({ data: e, numberOfFrames: i, timestamp: s = 0 }) {\n    if (!this.encoder || !this.opus || !this.config || !this.meta)\n      throw new at({\n        code: \"unconfiguredEncoder\",\n        message: \"Cannot encode samples using an unconfigured encoder\"\n      });\n    const { sampleRate: r, numberOfChannels: a } = this.config, n = Math.floor(r / 1e3 * 20);\n    let o = 0;\n    const c = n / r * 1e6;\n    for (; o < i; ) {\n      const l = e.subarray(o * a, (o + n) * a), d = this.opus._malloc(l.length * 2);\n      this.opus.HEAP16.set(l, d >> 1);\n      const h = 4e3, u = this.opus._malloc(h), m = this.opus._opus_encode(\n        this.encoder,\n        d,\n        n,\n        u,\n        h\n      );\n      if (m > 0) {\n        const p = new Uint8Array(\n          this.opus.HEAPU8.subarray(u, u + m)\n        );\n        this.output(\n          {\n            data: p,\n            timestamp: s,\n            type: \"key\",\n            duration: c\n          },\n          this.meta\n        );\n      } else\n        this.error(new DOMException(\"PCM chunk could not be encoded\"));\n      this.opus._free(d), this.opus._free(u), o += n, s += c;\n    }\n  }\n}\nclass Ql extends sr {\n  _configured = !1;\n  _encoder;\n  async encode(e) {\n    this._configured || (await this._encoder?.configure(this.config), this._configured = !0);\n    const i = new Int16Array(e.numberOfFrames * e.numberOfChannels);\n    e.copyTo(i, { planeIndex: 0, format: \"s16\" }), this._encoder?.encode({\n      data: i,\n      // 16-bit signed integer array of interleaved audio samples\n      numberOfFrames: e.numberOfFrames\n    }), e.close();\n  }\n  flush() {\n    this._configured = !1;\n  }\n  static supports(e) {\n    return e === \"opus\";\n  }\n  init() {\n    this.codec = \"opus\", this.config = {\n      ...this.config,\n      sampleRate: Hl(this.config.sampleRate)\n    }, this._encoder = new ql({\n      output: (e, i) => {\n        this.onPacket(\n          new G(\n            e.data,\n            e.type,\n            e.timestamp / 1e6,\n            e.duration / 1e6\n          ),\n          i\n        );\n      },\n      error: console.error\n    }), this._configured = !1;\n  }\n  close() {\n    this._configured = !1;\n  }\n}\nconst Xl = {\n  enabled: !0,\n  sampleRate: 48e3,\n  numberOfChannels: 2,\n  bitrate: 128e3,\n  codec: \"aac\"\n}, Kl = {\n  enabled: !0,\n  codec: \"avc\",\n  bitrate: 1e7,\n  fps: 30,\n  resolution: 1,\n  fullCodecString: \"\"\n};\nclass Gl {\n  static create(e, i) {\n    return i == \"webm\" ? new qr() : i == \"ogg\" ? new ac() : new $r({ fastStart: e.fastStart });\n  }\n}\nclass Od extends js() {\n  composition;\n  config;\n  /**\n   * Create a new audio and video encoder and multiplex the result \n   * using a mp4 container\n   * @param composition The composition to render\n   * @param config Configure the output\n   * @example \n   * ```\n   * const blob = await new Encoder(composition).render();\n   * ```\n   */\n  constructor(e, i = {}) {\n    super(), this.composition = e, this.config = {\n      ...i,\n      video: { ...Kl, ...i?.video },\n      audio: { ...Xl, ...i?.audio }\n    }, this.config.format == \"ogg\" && (this.config.audio.enabled = !0, this.config.video.enabled = !1);\n  }\n  /**\n   * Export the specified composition\n   * @throws DOMException if the export has been aborted\n   */\n  async render(e, i) {\n    try {\n      const { duration: s, layers: r } = this.composition;\n      this.log(\"Preparing export\"), i?.addEventListener(\"abort\", () => {\n        throw new at({\n          message: \"Export aborted\",\n          code: \"export_aborted\"\n        });\n      }), await as(this.config.audio.codec) || (console.error(\"Unsupported audio codec or api not available. Falling back to opus.\"), this.config.audio.codec = \"opus\"), await as(this.config.audio.codec) || (console.info(\"Opus encoder not available. Registering wasm encoder...\"), Wa(Ql)), await this.composition.seek(0), this.composition.audio.stop(), await Ws(this.composition);\n      const a = new OfflineAudioContext({\n        numberOfChannels: this.config.audio.numberOfChannels,\n        sampleRate: this.config.audio.sampleRate,\n        length: Math.ceil(s.seconds * this.config.audio.sampleRate)\n      }), n = new Xe({\n        ...this.composition.settings,\n        resolution: this.config.video.resolution\n      }), o = new Qs({\n        context: a,\n        fps: this.config.video.fps\n      });\n      let c, l = this.config.video.fullCodecString.length ? this.config.video.fullCodecString : void 0;\n      const d = new cc(n.canvas, {\n        codec: this.config.video.codec,\n        bitrate: this.config.video.bitrate,\n        latencyMode: \"quality\",\n        fullCodecString: l,\n        onEncoderConfig: (S) => {\n          c = S;\n        },\n        onEncoderError: (S) => {\n          throw console.error(\"Encoder error\", S, c), new at({\n            message: `EncoderError: ${S.message}`,\n            code: \"encoder_error\"\n          });\n        }\n      }), h = new hc({\n        codec: this.config.audio.codec,\n        bitrate: this.config.audio.bitrate\n      }), u = await He.create(e), m = Gl.create(u, this.config.format), p = new mc({ format: m, target: u.target });\n      this.config.audio.enabled && p.addAudioTrack(h), this.config.video.enabled && p.addVideoTrack(d), this.log(\"Configured dependencies\"), await p.start();\n      const g = performance.now(), w = (/* @__PURE__ */ new Date()).getTime(), b = Math.floor(s.seconds * this.config.video.fps);\n      let x = -1 / 0;\n      for (let S = 0; S < b; S++) {\n        if (i?.aborted)\n          throw new at({\n            message: \"Export aborted\",\n            code: \"export_aborted\"\n          });\n        const k = S / this.config.video.fps;\n        o.playbackOffset = k;\n        for (let T = r.length - 1; T >= 0; T--)\n          await r[T].update(o);\n        if (this.config.video.enabled) {\n          n.clear();\n          for (let T = r.length - 1; T >= 0; T--)\n            r[T].render(o, n);\n          n.watermark(this.config.watermark), await d.add(k, 1 / this.config.video.fps);\n        }\n        const y = performance.now();\n        (y - x > 100 || S === b - 1) && (this.emit(\"render\", Ll(S, b, w)), x = y);\n      }\n      if (this.log(`Encoded frames at ${(b * 1e3 / (performance.now() - g)).toFixed(2)}FPS`), this.log(\"Encoding audio\"), this.config.audio.enabled) {\n        const S = await a.startRendering();\n        await h.add(S);\n      }\n      return this.log(\"Finalizing file\"), await p.finalize(), this.log(\"Export complete\"), await u.close(this.config.format);\n    } catch (s) {\n      throw s;\n    } finally {\n      await Ws(this.composition), this.composition.audio.start(), await this.composition.seek(0);\n    }\n  }\n  async audioCodecs() {\n    return await en(void 0, {\n      numberOfChannels: this.config.audio.numberOfChannels,\n      sampleRate: this.config.audio.sampleRate,\n      bitrate: this.config.audio.bitrate\n    });\n  }\n  async videoCodecs() {\n    return await Za(void 0, {\n      height: this.composition.height,\n      width: this.composition.width,\n      bitrate: this.config.video.bitrate\n    });\n  }\n  log(e) {\n    this.config.debug && console.log(e);\n  }\n}\nasync function Ws(t) {\n  for (const e of t.clips)\n    await e.exit(t.audio);\n  for (const e of t.layers)\n    e._resetInternalState();\n}\nexport {\n  Yl as AUDIO_LOOK_AHEAD,\n  pe as AudioClip,\n  Qs as AudioRenderer,\n  Ze as AudioSource,\n  lt as BaseError,\n  le as BaseSource,\n  Ce as CaptionPreset,\n  Pd as CascadeCaptionPreset,\n  xl as CircleClip,\n  At as CircleMask,\n  Bl as ClassicCaptionPreset,\n  $ as Clip,\n  Jc as ClipDeserializer,\n  ze as Composition,\n  Ot as DateDeserializer,\n  Bt as DecoderError,\n  Od as Encoder,\n  at as EncoderError,\n  js as EventEmitter,\n  dt as EventEmitterMixin,\n  Cd as FONT_WEIGHTS,\n  Rt as FPS_DEFAULT,\n  oa as FPS_INACTIVE,\n  ge as FontManager,\n  Id as GuineaCaptionPreset,\n  Us as HtmlClip,\n  Xi as HtmlSource,\n  Ee as IOError,\n  Es as ImageClip,\n  Qi as ImageSource,\n  ai as Language,\n  _e as Layer,\n  we as Mask,\n  Ta as MaskDeserializer,\n  ql as OpusEncoder,\n  Ed as PaperCaptionPreset,\n  ta as RectangleClip,\n  ut as RectangleMask,\n  Jl as ReferenceError,\n  Sd as RichTextClip,\n  xd as SAFE_BROSER_FONTS,\n  Te as Serializer,\n  Ht as ShapeClip,\n  Fd as SolarCaptionPreset,\n  Oe as Source,\n  _d as SpotlightCaptionPreset,\n  qt as StorageItem,\n  pd as Store,\n  L as TextClip,\n  E as Timestamp,\n  se as Transcript,\n  ee as ValidationError,\n  Bd as VerdantCaptionPreset,\n  zs as VideoClip,\n  Xe as VideoRenderer,\n  qi as VideoSource,\n  et as VisualMixin,\n  Pi as VisualSourceMixin,\n  Il as WaveformClip,\n  St as WebFonts,\n  Rd as WhisperCaptionPreset,\n  Tt as Word,\n  Le as WordGroup,\n  _ as abs,\n  la as arraymove,\n  B as assert,\n  nd as assertNever,\n  od as audioBufferToWav,\n  dd as blobToMonoBuffer,\n  cd as bufferToF32Planar,\n  ld as bufferToI16Interleaved,\n  ad as capitalize,\n  da as clamp,\n  sd as debounce,\n  Fa as detectContentType,\n  $s as downloadObject,\n  ua as floatTo16BitPCM,\n  jt as framesToMillis,\n  Zl as framesToSeconds,\n  fd as getBestSupportedAvcProfile,\n  td as groupBy,\n  $e as hexWithOpacity,\n  ha as interleave,\n  O as parseTime,\n  vt as randInt,\n  hd as resampleBuffer,\n  ca as secondsToFrames,\n  v as serializable,\n  ud as showFileDialog,\n  id as sleep,\n  Ct as splitAt,\n  ed as toHex,\n  gd as transformText,\n  rd as uid\n};\n"],
  "mappings": "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",
  "names": ["_a", "_c", "_d", "_e", "_i", "_b", "_l", "_n", "_o", "_r", "_s", "_t"]
}
